Python 3.8.0 (v3.8.0:fa919fdf25, Oct 14 2019, 10:23:27) 
[Clang 6.0 (clang-600.0.57)] on darwin
Type "help", "copyright", "credits" or "license()" for more information.
WARNING: The system preference "Prefer tabs when opening documents" is set to
"Always". This will cause various problems with IDLE. For the best experience,
change this setting when running IDLE (via System Preferences -> Dock).
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1 @ 749,666: 27x15\n', '#2 @ 118,560: 22x18\n', '#3 @ 194,731: 16x29\n', '#4 @ 295,407: 21x29\n', '#5 @ 717,30: 29x24\n', '#6 @ 969,722: 11x25\n', '#7 @ 117,596: 20x22\n', '#8 @ 557,190: 19x17\n', '#9 @ 445,84: 22x24\n', '#10 @ 527,900: 28x12\n', '#11 @ 48,71: 20x17\n', '#12 @ 644,603: 29x16\n', '#13 @ 786,478: 19x10\n', '#14 @ 40,483: 14x15\n', '#15 @ 683,475: 22x13\n', '#16 @ 173,683: 10x10\n', '#17 @ 862,778: 12x29\n', '#18 @ 169,513: 20x13\n', '#19 @ 151,719: 28x13\n', '#20 @ 49,342: 15x29\n', '#21 @ 678,900: 13x29\n', '#22 @ 97,522: 6x16\n', '#23 @ 888,500: 11x21\n', '#24 @ 781,576: 12x22\n', '#25 @ 122,367: 28x18\n', '#26 @ 625,149: 22x27\n', '#27 @ 668,803: 15x11\n', '#28 @ 822,317: 26x15\n', '#29 @ 685,945: 19x11\n', '#30 @ 786,296: 13x18\n', '#31 @ 848,839: 15x16\n', '#32 @ 663,448: 28x24\n', '#33 @ 941,785: 13x24\n', '#34 @ 579,902: 26x11\n', '#35 @ 343,206: 19x11\n', '#36 @ 301,174: 27x12\n', '#37 @ 539,52: 16x20\n', '#38 @ 740,676: 17x26\n', '#39 @ 771,191: 11x18\n', '#40 @ 80,930: 22x29\n', '#41 @ 402,979: 16x18\n', '#42 @ 978,896: 14x27\n', '#43 @ 299,185: 20x24\n', '#44 @ 885,32: 20x25\n', '#45 @ 28,376: 13x26\n', '#46 @ 103,323: 22x22\n', '#47 @ 495,160: 18x14\n', '#48 @ 318,567: 13x20\n', '#49 @ 206,353: 11x13\n', '#50 @ 763,100: 21x13\n', '#51 @ 852,973: 18x12\n', '#52 @ 50,249: 20x26\n', '#53 @ 329,579: 11x11\n', '#54 @ 546,884: 12x16\n', '#55 @ 425,681: 18x18\n', '#56 @ 152,610: 17x16\n', '#57 @ 802,735: 29x21\n', '#58 @ 113,567: 22x18\n', '#59 @ 361,386: 27x25\n', '#60 @ 921,9: 25x19\n', '#61 @ 68,903: 23x21\n', '#62 @ 368,599: 16x25\n', '#63 @ 553,182: 11x16\n', '#64 @ 391,822: 26x28\n', '#65 @ 589,207: 12x20\n', '#66 @ 188,348: 23x22\n', '#67 @ 499,43: 16x21\n', '#68 @ 849,175: 14x10\n', '#69 @ 650,527: 20x10\n', '#70 @ 108,72: 11x25\n', '#71 @ 685,124: 12x29\n', '#72 @ 364,370: 25x10\n', '#73 @ 578,357: 18x24\n', '#74 @ 514,961: 25x28\n', '#75 @ 376,981: 22x11\n', '#76 @ 96,496: 16x17\n', '#77 @ 682,6: 14x13\n', '#78 @ 191,804: 17x19\n', '#79 @ 202,556: 28x23\n', '#80 @ 390,525: 11x20\n', '#81 @ 836,610: 22x20\n', '#82 @ 566,79: 22x28\n', '#83 @ 441,68: 16x12\n', '#84 @ 270,609: 12x10\n', '#85 @ 520,392: 20x16\n', '#86 @ 104,416: 23x26\n', '#87 @ 104,763: 22x16\n', '#88 @ 669,877: 11x24\n', '#89 @ 277,658: 27x12\n', '#90 @ 909,134: 25x14\n', '#91 @ 414,925: 29x28\n', '#92 @ 304,618: 15x23\n', '#93 @ 838,975: 23x14\n', '#94 @ 761,377: 19x26\n', '#95 @ 923,178: 11x10\n', '#96 @ 901,945: 22x20\n', '#97 @ 179,325: 18x24\n', '#98 @ 877,792: 27x17\n', '#99 @ 870,233: 24x24\n', '#100 @ 945,390: 13x14\n', '#101 @ 697,868: 10x19\n', '#102 @ 823,154: 19x27\n', '#103 @ 444,900: 16x27\n', '#104 @ 538,45: 25x14\n', '#105 @ 90,423: 15x10\n', '#106 @ 425,822: 26x19\n', '#107 @ 968,167: 20x21\n', '#108 @ 721,420: 25x12\n', '#109 @ 516,30: 27x29\n', '#110 @ 316,565: 11x13\n', '#111 @ 379,278: 26x16\n', '#112 @ 940,770: 13x24\n', '#113 @ 429,913: 16x18\n', '#114 @ 278,174: 25x20\n', '#115 @ 659,232: 22x16\n', '#116 @ 482,36: 20x10\n', '#117 @ 162,410: 19x11\n', '#118 @ 160,949: 21x27\n', '#119 @ 48,268: 15x17\n', '#120 @ 50,512: 12x27\n', '#121 @ 215,330: 26x12\n', '#122 @ 504,400: 28x28\n', '#123 @ 129,529: 21x18\n', '#124 @ 160,370: 26x19\n', '#125 @ 955,275: 21x29\n', '#126 @ 576,320: 13x28\n', '#127 @ 492,955: 24x29\n', '#128 @ 111,918: 24x17\n', '#129 @ 654,910: 13x10\n', '#130 @ 390,607: 21x23\n', '#131 @ 498,581: 16x21\n', '#132 @ 1,126: 20x24\n', '#133 @ 108,809: 4x3\n', '#134 @ 600,572: 13x29\n', '#135 @ 67,717: 21x27\n', '#136 @ 387,392: 21x15\n', '#137 @ 510,44: 10x15\n', '#138 @ 940,137: 10x26\n', '#139 @ 375,506: 18x10\n', '#140 @ 825,669: 18x10\n', '#141 @ 528,338: 24x13\n', '#142 @ 657,492: 20x28\n', '#143 @ 659,677: 3x6\n', '#144 @ 885,878: 16x24\n', '#145 @ 310,214: 26x27\n', '#146 @ 947,823: 13x17\n', '#147 @ 10,222: 18x26\n', '#148 @ 56,575: 24x16\n', '#149 @ 646,914: 16x20\n', '#150 @ 313,512: 18x16\n', '#151 @ 321,622: 24x17\n', '#152 @ 937,195: 21x14\n', '#153 @ 386,23: 18x26\n', '#154 @ 922,148: 18x29\n', '#155 @ 126,45: 20x27\n', '#156 @ 590,14: 13x11\n', '#157 @ 538,739: 22x18\n', '#158 @ 497,171: 24x21\n', '#159 @ 824,484: 12x21\n', '#160 @ 329,843: 23x28\n', '#161 @ 163,179: 22x18\n', '#162 @ 160,98: 18x22\n', '#163 @ 664,1: 24x17\n', '#164 @ 414,502: 21x12\n', '#165 @ 15,792: 11x20\n', '#166 @ 454,169: 12x27\n', '#167 @ 260,924: 24x14\n', '#168 @ 565,223: 13x15\n', '#169 @ 247,165: 20x13\n', '#170 @ 72,41: 23x26\n', '#171 @ 640,265: 28x24\n', '#172 @ 150,867: 28x18\n', '#173 @ 478,577: 21x29\n', '#174 @ 654,695: 13x25\n', '#175 @ 426,674: 23x17\n', '#176 @ 664,290: 19x5\n', '#177 @ 427,509: 10x14\n', '#178 @ 349,382: 21x21\n', '#179 @ 416,582: 17x25\n', '#180 @ 340,270: 22x10\n', '#181 @ 835,750: 15x12\n', '#182 @ 944,548: 11x22\n', '#183 @ 590,509: 17x11\n', '#184 @ 378,224: 13x15\n', '#185 @ 682,283: 28x19\n', '#186 @ 607,82: 26x15\n', '#187 @ 604,468: 28x15\n', '#188 @ 719,127: 29x28\n', '#189 @ 319,15: 22x26\n', '#190 @ 119,285: 13x14\n', '#191 @ 235,512: 26x24\n', '#192 @ 191,473: 11x20\n', '#193 @ 0,840: 10x27\n', '#194 @ 617,528: 21x16\n', '#195 @ 206,474: 24x11\n', '#196 @ 285,197: 20x19\n', '#197 @ 347,352: 15x22\n', '#198 @ 412,735: 26x20\n', '#199 @ 372,931: 23x15\n', '#200 @ 461,497: 13x28\n', '#201 @ 689,943: 28x12\n', '#202 @ 621,93: 26x25\n', '#203 @ 897,795: 12x13\n', '#204 @ 652,648: 11x21\n', '#205 @ 259,367: 11x26\n', '#206 @ 43,187: 26x22\n', '#207 @ 170,194: 27x29\n', '#208 @ 539,760: 22x22\n', '#209 @ 404,291: 20x29\n', '#210 @ 782,419: 25x27\n', '#211 @ 613,61: 3x10\n', '#212 @ 821,325: 16x21\n', '#213 @ 65,689: 12x11\n', '#214 @ 303,270: 24x24\n', '#215 @ 836,463: 17x17\n', '#216 @ 1,643: 23x15\n', '#217 @ 953,540: 13x28\n', '#218 @ 140,530: 28x27\n', '#219 @ 625,447: 12x13\n', '#220 @ 492,638: 26x21\n', '#221 @ 156,711: 10x12\n', '#222 @ 35,699: 17x27\n', '#223 @ 301,187: 14x24\n', '#224 @ 805,618: 23x11\n', '#225 @ 550,881: 11x21\n', '#226 @ 209,536: 24x20\n', '#227 @ 181,331: 14x26\n', '#228 @ 849,922: 15x19\n', '#229 @ 100,832: 12x18\n', '#230 @ 224,410: 6x6\n', '#231 @ 437,952: 17x25\n', '#232 @ 299,494: 16x22\n', '#233 @ 37,9: 14x19\n', '#234 @ 177,563: 22x18\n', '#235 @ 152,230: 17x11\n', '#236 @ 18,250: 16x28\n', '#237 @ 759,373: 28x24\n', '#238 @ 202,724: 24x18\n', '#239 @ 291,769: 10x12\n', '#240 @ 816,908: 27x21\n', '#241 @ 228,198: 11x18\n', '#242 @ 164,233: 27x11\n', '#243 @ 957,624: 27x24\n', '#244 @ 840,726: 29x24\n', '#245 @ 4,797: 24x12\n', '#246 @ 172,879: 15x17\n', '#247 @ 972,905: 14x27\n', '#248 @ 674,845: 10x15\n', '#249 @ 846,573: 21x21\n', '#250 @ 806,277: 20x29\n', '#251 @ 812,900: 22x12\n', '#252 @ 147,361: 24x20\n', '#253 @ 865,723: 18x18\n', '#254 @ 416,125: 21x22\n', '#255 @ 899,831: 13x18\n', '#256 @ 570,189: 20x21\n', '#257 @ 302,498: 15x28\n', '#258 @ 360,65: 15x14\n', '#259 @ 178,394: 18x25\n', '#260 @ 543,744: 13x24\n', '#261 @ 746,590: 23x12\n', '#262 @ 803,586: 26x26\n', '#263 @ 381,559: 26x14\n', '#264 @ 513,391: 14x19\n', '#265 @ 647,20: 17x21\n', '#266 @ 611,53: 11x26\n', '#267 @ 60,387: 22x21\n', '#268 @ 118,142: 19x11\n', '#269 @ 550,816: 25x19\n', '#270 @ 249,538: 24x29\n', '#271 @ 423,966: 20x13\n', '#272 @ 921,676: 20x12\n', '#273 @ 238,145: 14x12\n', '#274 @ 278,650: 24x24\n', '#275 @ 629,561: 23x15\n', '#276 @ 98,784: 11x12\n', '#277 @ 281,169: 18x29\n', '#278 @ 929,427: 29x19\n', '#279 @ 164,384: 20x12\n', '#280 @ 145,46: 28x26\n', '#281 @ 717,115: 20x11\n', '#282 @ 929,798: 25x11\n', '#283 @ 275,457: 21x12\n', '#284 @ 898,437: 16x17\n', '#285 @ 466,643: 20x16\n', '#286 @ 744,930: 22x11\n', '#287 @ 857,719: 26x20\n', '#288 @ 860,527: 17x21\n', '#289 @ 212,530: 18x27\n', '#290 @ 328,630: 25x10\n', '#291 @ 476,7: 23x29\n', '#292 @ 787,796: 22x12\n', '#293 @ 18,243: 26x10\n', '#294 @ 389,25: 21x15\n', '#295 @ 687,942: 25x10\n', '#296 @ 380,626: 13x11\n', '#297 @ 357,559: 15x29\n', '#298 @ 1,849: 25x14\n', '#299 @ 457,819: 13x21\n', '#300 @ 719,52: 20x25\n', '#301 @ 895,473: 10x22\n', '#302 @ 301,196: 11x15\n', '#303 @ 432,392: 25x22\n', '#304 @ 591,11: 25x25\n', '#305 @ 101,628: 29x14\n', '#306 @ 322,860: 10x10\n', '#307 @ 300,754: 5x5\n', '#308 @ 437,297: 29x21\n', '#309 @ 451,518: 24x16\n', '#310 @ 649,518: 22x15\n', '#311 @ 558,368: 27x20\n', '#312 @ 432,928: 17x25\n', '#313 @ 784,483: 22x23\n', '#314 @ 316,351: 23x21\n', '#315 @ 10,374: 20x20\n', '#316 @ 321,278: 22x10\n', '#317 @ 524,808: 21x17\n', '#318 @ 389,977: 15x10\n', '#319 @ 102,804: 20x19\n', '#320 @ 17,868: 19x15\n', '#321 @ 303,198: 16x11\n', '#322 @ 872,72: 20x10\n', '#323 @ 331,126: 21x27\n', '#324 @ 137,462: 19x23\n', '#325 @ 170,318: 21x29\n', '#326 @ 268,836: 19x10\n', '#327 @ 390,961: 13x23\n', '#328 @ 161,296: 10x29\n', '#329 @ 204,722: 18x20\n', '#330 @ 249,689: 11x11\n', '#331 @ 912,153: 20x29\n', '#332 @ 66,730: 10x15\n', '#333 @ 87,63: 29x14\n', '#334 @ 745,390: 19x20\n', '#335 @ 105,304: 14x12\n', '#336 @ 833,313: 29x12\n', '#337 @ 451,852: 27x17\n', '#338 @ 0,640: 25x14\n', '#339 @ 204,256: 21x13\n', '#340 @ 663,493: 15x18\n', '#341 @ 35,222: 22x26\n', '#342 @ 326,17: 21x14\n', '#343 @ 670,801: 18x11\n', '#344 @ 902,248: 12x21\n', '#345 @ 730,584: 19x13\n', '#346 @ 387,214: 20x25\n', '#347 @ 298,933: 25x12\n', '#348 @ 242,815: 19x21\n', '#349 @ 62,556: 27x28\n', '#350 @ 652,594: 20x10\n', '#351 @ 250,564: 25x28\n', '#352 @ 206,348: 24x14\n', '#353 @ 232,167: 21x11\n', '#354 @ 478,282: 26x13\n', '#355 @ 268,556: 18x13\n', '#356 @ 656,673: 11x21\n', '#357 @ 631,753: 23x29\n', '#358 @ 311,276: 12x27\n', '#359 @ 899,131: 23x11\n', '#360 @ 940,134: 26x28\n', '#361 @ 345,407: 20x16\n', '#362 @ 816,301: 19x12\n', '#363 @ 844,773: 17x23\n', '#364 @ 850,494: 15x28\n', '#365 @ 967,366: 17x19\n', '#366 @ 549,894: 11x10\n', '#367 @ 318,398: 28x21\n', '#368 @ 9,394: 24x15\n', '#369 @ 725,304: 11x27\n', '#370 @ 829,266: 13x12\n', '#371 @ 880,136: 25x21\n', '#372 @ 166,871: 19x10\n', '#373 @ 210,229: 14x18\n', '#374 @ 351,364: 17x13\n', '#375 @ 182,37: 23x21\n', '#376 @ 675,798: 12x14\n', '#377 @ 809,180: 16x19\n', '#378 @ 488,465: 15x10\n', '#379 @ 452,314: 29x24\n', '#380 @ 501,528: 20x23\n', '#381 @ 299,752: 13x15\n', '#382 @ 783,579: 22x22\n', '#383 @ 579,641: 12x23\n', '#384 @ 904,948: 17x16\n', '#385 @ 812,580: 10x27\n', '#386 @ 117,929: 11x14\n', '#387 @ 129,127: 28x20\n', '#388 @ 714,740: 25x22\n', '#389 @ 732,307: 26x11\n', '#390 @ 885,415: 15x18\n', '#391 @ 45,406: 28x13\n', '#392 @ 356,360: 29x26\n', '#393 @ 630,285: 20x28\n', '#394 @ 854,831: 14x19\n', '#395 @ 451,819: 26x24\n', '#396 @ 424,435: 22x24\n', '#397 @ 243,682: 20x13\n', '#398 @ 284,466: 22x16\n', '#399 @ 605,25: 25x11\n', '#400 @ 959,643: 24x12\n', '#401 @ 140,504: 23x17\n', '#402 @ 6,234: 16x25\n', '#403 @ 872,805: 14x13\n', '#404 @ 466,632: 14x19\n', '#405 @ 944,484: 17x16\n', '#406 @ 619,507: 10x27\n', '#407 @ 8,551: 28x26\n', '#408 @ 435,931: 8x10\n', '#409 @ 901,123: 21x25\n', '#410 @ 55,375: 10x19\n', '#411 @ 424,921: 10x11\n', '#412 @ 822,618: 28x17\n', '#413 @ 823,948: 15x25\n', '#414 @ 580,893: 6x18\n', '#415 @ 597,892: 14x26\n', '#416 @ 615,582: 27x24\n', '#417 @ 52,916: 20x11\n', '#418 @ 679,329: 22x14\n', '#419 @ 32,136: 20x12\n', '#420 @ 921,367: 27x21\n', '#421 @ 292,100: 23x11\n', '#422 @ 508,353: 13x13\n', '#423 @ 376,31: 24x11\n', '#424 @ 718,390: 26x24\n', '#425 @ 429,526: 26x26\n', '#426 @ 406,540: 17x19\n', '#427 @ 144,36: 22x25\n', '#428 @ 218,974: 18x24\n', '#429 @ 742,592: 12x22\n', '#430 @ 934,39: 15x10\n', '#431 @ 638,445: 21x14\n', '#432 @ 944,193: 24x23\n', '#433 @ 825,961: 17x22\n', '#434 @ 235,427: 23x14\n', '#435 @ 661,461: 29x26\n', '#436 @ 715,33: 29x11\n', '#437 @ 728,939: 21x10\n', '#438 @ 312,498: 27x28\n', '#439 @ 224,517: 24x21\n', '#440 @ 670,307: 22x16\n', '#441 @ 194,703: 15x14\n', '#442 @ 117,957: 17x20\n', '#443 @ 884,102: 20x12\n', '#444 @ 438,183: 18x17\n', '#445 @ 178,907: 28x23\n', '#446 @ 235,694: 14x28\n', '#447 @ 61,245: 25x12\n', '#448 @ 289,54: 15x23\n', '#449 @ 373,310: 17x13\n', '#450 @ 425,313: 28x15\n', '#451 @ 298,750: 11x14\n', '#452 @ 916,779: 27x28\n', '#453 @ 373,824: 17x24\n', '#454 @ 503,926: 16x16\n', '#455 @ 549,166: 18x28\n', '#456 @ 723,366: 14x20\n', '#457 @ 904,798: 18x10\n', '#458 @ 177,165: 13x24\n', '#459 @ 353,128: 12x29\n', '#460 @ 289,714: 14x21\n', '#461 @ 471,276: 17x23\n', '#462 @ 812,660: 14x26\n', '#463 @ 239,890: 10x21\n', '#464 @ 89,374: 24x12\n', '#465 @ 128,566: 11x19\n', '#466 @ 454,272: 12x11\n', '#467 @ 736,285: 29x28\n', '#468 @ 27,621: 20x21\n', '#469 @ 194,257: 26x17\n', '#470 @ 305,347: 25x16\n', '#471 @ 602,684: 21x15\n', '#472 @ 182,38: 28x29\n', '#473 @ 540,792: 22x28\n', '#474 @ 313,867: 23x10\n', '#475 @ 163,692: 16x23\n', '#476 @ 348,949: 25x10\n', '#477 @ 890,473: 18x21\n', '#478 @ 35,904: 24x15\n', '#479 @ 861,310: 19x11\n', '#480 @ 24,242: 17x29\n', '#481 @ 314,433: 28x14\n', '#482 @ 498,914: 10x29\n', '#483 @ 556,58: 15x22\n', '#484 @ 960,92: 11x29\n', '#485 @ 375,7: 27x16\n', '#486 @ 871,553: 20x28\n', '#487 @ 289,167: 11x24\n', '#488 @ 312,699: 10x29\n', '#489 @ 584,487: 16x23\n', '#490 @ 299,574: 21x19\n', '#491 @ 354,616: 17x25\n', '#492 @ 675,516: 11x5\n', '#493 @ 847,671: 11x18\n', '#494 @ 960,161: 28x29\n', '#495 @ 910,246: 19x14\n', '#496 @ 448,818: 13x20\n', '#497 @ 288,167: 16x25\n', '#498 @ 845,436: 18x18\n', '#499 @ 197,351: 13x18\n', '#500 @ 882,410: 13x16\n', '#501 @ 372,301: 25x28\n', '#502 @ 423,927: 21x10\n', '#503 @ 423,447: 17x24\n', '#504 @ 797,895: 20x20\n', '#505 @ 769,136: 22x10\n', '#506 @ 811,269: 20x26\n', '#507 @ 837,983: 19x12\n', '#508 @ 571,121: 12x23\n', '#509 @ 904,472: 13x11\n', '#510 @ 610,565: 20x10\n', '#511 @ 335,464: 23x14\n', '#512 @ 550,206: 22x16\n', '#513 @ 452,845: 23x20\n', '#514 @ 410,945: 18x16\n', '#515 @ 943,804: 19x28\n', '#516 @ 14,472: 26x21\n', '#517 @ 12,983: 16x13\n', '#518 @ 110,757: 28x19\n', '#519 @ 373,292: 24x22\n', '#520 @ 886,833: 26x25\n', '#521 @ 980,663: 13x19\n', '#522 @ 847,842: 29x14\n', '#523 @ 803,520: 11x26\n', '#524 @ 510,276: 15x15\n', '#525 @ 542,50: 28x26\n', '#526 @ 830,313: 10x28\n', '#527 @ 941,514: 13x20\n', '#528 @ 269,385: 11x20\n', '#529 @ 841,752: 28x26\n', '#530 @ 650,602: 23x21\n', '#531 @ 536,201: 24x13\n', '#532 @ 591,62: 18x20\n', '#533 @ 975,955: 20x23\n', '#534 @ 675,8: 18x17\n', '#535 @ 165,431: 27x16\n', '#536 @ 621,191: 18x17\n', '#537 @ 876,259: 24x23\n', '#538 @ 194,571: 24x15\n', '#539 @ 821,913: 24x29\n', '#540 @ 538,203: 11x8\n', '#541 @ 479,960: 21x17\n', '#542 @ 488,598: 15x13\n', '#543 @ 234,408: 21x15\n', '#544 @ 114,229: 24x12\n', '#545 @ 903,17: 13x12\n', '#546 @ 360,877: 11x16\n', '#547 @ 327,146: 11x27\n', '#548 @ 904,439: 11x25\n', '#549 @ 38,180: 16x27\n', '#550 @ 495,591: 26x12\n', '#551 @ 376,26: 29x14\n', '#552 @ 111,325: 12x16\n', '#553 @ 303,638: 27x17\n', '#554 @ 755,890: 17x11\n', '#555 @ 883,909: 11x16\n', '#556 @ 897,264: 10x17\n', '#557 @ 766,888: 22x15\n', '#558 @ 217,394: 19x28\n', '#559 @ 55,747: 11x25\n', '#560 @ 753,381: 19x24\n', '#561 @ 584,647: 23x19\n', '#562 @ 922,745: 21x29\n', '#563 @ 902,319: 24x11\n', '#564 @ 369,320: 13x19\n', '#565 @ 373,371: 12x16\n', '#566 @ 547,442: 16x28\n', '#567 @ 579,496: 27x23\n', '#568 @ 494,917: 17x17\n', '#569 @ 323,377: 20x16\n', '#570 @ 887,666: 24x25\n', '#571 @ 394,268: 23x26\n', '#572 @ 255,113: 17x28\n', '#573 @ 838,788: 19x14\n', '#574 @ 933,145: 14x16\n', '#575 @ 159,468: 26x19\n', '#576 @ 434,179: 12x19\n', '#577 @ 44,472: 27x17\n', '#578 @ 774,563: 24x27\n', '#579 @ 35,693: 28x14\n', '#580 @ 411,667: 21x10\n', '#581 @ 524,732: 23x12\n', '#582 @ 451,173: 25x12\n', '#583 @ 946,642: 17x20\n', '#584 @ 8,345: 25x29\n', '#585 @ 901,143: 29x12\n', '#586 @ 202,840: 14x10\n', '#587 @ 631,970: 21x17\n', '#588 @ 885,685: 14x12\n', '#589 @ 410,522: 24x27\n', '#590 @ 58,517: 25x28\n', '#591 @ 85,1: 22x20\n', '#592 @ 465,913: 29x22\n', '#593 @ 807,498: 11x29\n', '#594 @ 194,208: 14x18\n', '#595 @ 666,835: 16x22\n', '#596 @ 971,649: 13x18\n', '#597 @ 428,231: 22x22\n', '#598 @ 575,667: 18x27\n', '#599 @ 192,265: 18x15\n', '#600 @ 297,387: 22x24\n', '#601 @ 500,185: 14x17\n', '#602 @ 440,937: 20x25\n', '#603 @ 636,565: 10x4\n', '#604 @ 356,290: 20x11\n', '#605 @ 246,887: 19x12\n', '#606 @ 835,307: 18x21\n', '#607 @ 624,431: 17x26\n', '#608 @ 325,620: 25x14\n', '#609 @ 266,631: 27x10\n', '#610 @ 195,601: 13x24\n', '#611 @ 762,406: 6x17\n', '#612 @ 431,949: 18x14\n', '#613 @ 267,555: 24x19\n', '#614 @ 856,787: 28x13\n', '#615 @ 175,191: 20x12\n', '#616 @ 598,7: 21x26\n', '#617 @ 183,435: 12x17\n', '#618 @ 419,542: 17x20\n', '#619 @ 343,124: 15x15\n', '#620 @ 345,402: 17x26\n', '#621 @ 70,64: 12x13\n', '#622 @ 911,723: 3x4\n', '#623 @ 593,56: 13x12\n', '#624 @ 474,928: 18x26\n', '#625 @ 195,612: 14x27\n', '#626 @ 200,249: 22x17\n', '#627 @ 515,717: 13x29\n', '#628 @ 324,342: 12x18\n', '#629 @ 252,509: 24x19\n', '#630 @ 796,789: 11x12\n', '#631 @ 270,579: 15x14\n', '#632 @ 913,817: 16x17\n', '#633 @ 235,326: 27x21\n', '#634 @ 199,656: 17x20\n', '#635 @ 11,538: 16x18\n', '#636 @ 40,630: 15x21\n', '#637 @ 918,819: 6x12\n', '#638 @ 319,952: 18x13\n', '#639 @ 552,558: 24x29\n', '#640 @ 129,817: 28x22\n', '#641 @ 443,428: 11x13\n', '#642 @ 86,281: 14x10\n', '#643 @ 944,86: 14x25\n', '#644 @ 309,583: 21x25\n', '#645 @ 423,433: 27x12\n', '#646 @ 10,196: 10x17\n', '#647 @ 385,878: 10x24\n', '#648 @ 578,890: 14x26\n', '#649 @ 817,478: 13x11\n', '#650 @ 936,254: 23x14\n', '#651 @ 964,466: 24x17\n', '#652 @ 191,477: 26x12\n', '#653 @ 92,730: 23x20\n', '#654 @ 318,840: 22x17\n', '#655 @ 975,277: 25x18\n', '#656 @ 680,62: 14x28\n', '#657 @ 752,146: 27x27\n', '#658 @ 529,411: 20x19\n', '#659 @ 205,785: 12x14\n', '#660 @ 551,562: 28x15\n', '#661 @ 302,190: 29x13\n', '#662 @ 237,421: 27x11\n', '#663 @ 117,845: 22x11\n', '#664 @ 911,851: 12x22\n', '#665 @ 571,142: 15x12\n', '#666 @ 708,389: 22x18\n', '#667 @ 711,310: 20x23\n', '#668 @ 795,289: 13x27\n', '#669 @ 236,712: 16x27\n', '#670 @ 566,343: 10x15\n', '#671 @ 469,818: 27x27\n', '#672 @ 84,914: 21x16\n', '#673 @ 47,621: 10x19\n', '#674 @ 891,103: 10x29\n', '#675 @ 638,296: 15x18\n', '#676 @ 354,415: 29x27\n', '#677 @ 269,519: 14x15\n', '#678 @ 735,337: 24x19\n', '#679 @ 365,980: 17x16\n', '#680 @ 545,35: 20x11\n', '#681 @ 968,640: 22x23\n', '#682 @ 202,660: 7x12\n', '#683 @ 502,189: 22x20\n', '#684 @ 196,797: 20x16\n', '#685 @ 741,103: 27x12\n', '#686 @ 353,671: 11x23\n', '#687 @ 962,626: 27x26\n', '#688 @ 406,831: 20x28\n', '#689 @ 927,860: 26x15\n', '#690 @ 550,880: 26x11\n', '#691 @ 104,503: 18x27\n', '#692 @ 393,882: 16x29\n', '#693 @ 565,607: 10x20\n', '#694 @ 859,823: 19x26\n', '#695 @ 298,126: 10x21\n', '#696 @ 897,331: 20x26\n', '#697 @ 969,955: 21x21\n', '#698 @ 855,730: 16x11\n', '#699 @ 366,598: 18x10\n', '#700 @ 190,794: 23x10\n', '#701 @ 81,903: 17x19\n', '#702 @ 13,383: 10x24\n', '#703 @ 674,941: 20x18\n', '#704 @ 621,966: 23x19\n', '#705 @ 609,463: 26x11\n', '#706 @ 787,441: 26x27\n', '#707 @ 238,397: 29x15\n', '#708 @ 790,815: 10x26\n', '#709 @ 615,906: 22x10\n', '#710 @ 77,647: 11x28\n', '#711 @ 370,548: 29x15\n', '#712 @ 669,514: 21x10\n', '#713 @ 360,957: 28x18\n', '#714 @ 615,493: 16x29\n', '#715 @ 880,901: 26x17\n', '#716 @ 161,446: 12x25\n', '#717 @ 88,2: 18x11\n', '#718 @ 221,237: 15x29\n', '#719 @ 258,222: 25x16\n', '#720 @ 131,263: 22x10\n', '#721 @ 382,591: 21x24\n', '#722 @ 651,145: 20x12\n', '#723 @ 470,494: 12x25\n', '#724 @ 843,164: 17x25\n', '#725 @ 278,982: 23x13\n', '#726 @ 237,711: 19x20\n', '#727 @ 358,621: 28x22\n', '#728 @ 548,500: 19x16\n', '#729 @ 6,129: 29x17\n', '#730 @ 312,300: 26x21\n', '#731 @ 838,252: 19x27\n', '#732 @ 470,155: 16x28\n', '#733 @ 832,942: 14x12\n', '#734 @ 673,283: 26x29\n', '#735 @ 296,162: 17x22\n', '#736 @ 568,640: 26x23\n', '#737 @ 833,453: 13x15\n', '#738 @ 724,399: 13x24\n', '#739 @ 942,102: 12x18\n', '#740 @ 233,137: 19x20\n', '#741 @ 581,459: 17x19\n', '#742 @ 64,398: 21x11\n', '#743 @ 978,635: 13x21\n', '#744 @ 352,90: 20x21\n', '#745 @ 77,534: 24x28\n', '#746 @ 704,310: 27x20\n', '#747 @ 729,298: 15x25\n', '#748 @ 93,275: 27x12\n', '#749 @ 748,69: 11x15\n', '#750 @ 362,36: 16x29\n', '#751 @ 30,955: 13x19\n', '#752 @ 574,294: 22x23\n', '#753 @ 202,305: 11x13\n', '#754 @ 318,504: 13x12\n', '#755 @ 760,556: 21x27\n', '#756 @ 930,474: 28x11\n', '#757 @ 445,743: 19x18\n', '#758 @ 406,674: 27x27\n', '#759 @ 380,594: 22x20\n', '#760 @ 273,162: 29x24\n', '#761 @ 305,845: 26x12\n', '#762 @ 177,233: 23x10\n', '#763 @ 458,197: 26x18\n', '#764 @ 25,434: 21x28\n', '#765 @ 322,792: 17x22\n', '#766 @ 209,734: 10x25\n', '#767 @ 623,904: 18x14\n', '#768 @ 795,9: 14x27\n', '#769 @ 316,625: 21x21\n', '#770 @ 733,72: 29x25\n', '#771 @ 113,809: 19x15\n', '#772 @ 548,504: 18x18\n', '#773 @ 884,460: 12x18\n', '#774 @ 583,275: 20x25\n', '#775 @ 714,134: 13x13\n', '#776 @ 375,135: 11x18\n', '#777 @ 33,275: 16x17\n', '#778 @ 468,204: 16x13\n', '#779 @ 244,554: 21x15\n', '#780 @ 850,446: 12x16\n', '#781 @ 908,346: 21x25\n', '#782 @ 158,324: 16x14\n', '#783 @ 689,478: 17x12\n', '#784 @ 484,724: 14x16\n', '#785 @ 604,599: 24x13\n', '#786 @ 657,717: 19x11\n', '#787 @ 475,724: 13x10\n', '#788 @ 169,75: 29x25\n', '#789 @ 439,597: 13x13\n', '#790 @ 826,466: 22x24\n', '#791 @ 306,939: 11x22\n', '#792 @ 858,502: 16x28\n', '#793 @ 114,609: 26x29\n', '#794 @ 667,800: 29x21\n', '#795 @ 842,33: 19x18\n', '#796 @ 20,859: 10x17\n', '#797 @ 304,957: 22x23\n', '#798 @ 755,358: 28x23\n', '#799 @ 20,951: 16x24\n', '#800 @ 100,10: 15x28\n', '#801 @ 779,139: 20x12\n', '#802 @ 786,25: 18x24\n', '#803 @ 40,581: 20x10\n', '#804 @ 804,599: 23x15\n', '#805 @ 676,980: 11x11\n', '#806 @ 736,434: 22x21\n', '#807 @ 435,714: 14x25\n', '#808 @ 124,30: 22x26\n', '#809 @ 620,428: 11x21\n', '#810 @ 364,216: 26x23\n', '#811 @ 457,12: 28x22\n', '#812 @ 46,121: 18x29\n', '#813 @ 530,810: 21x14\n', '#814 @ 404,800: 10x27\n', '#815 @ 84,323: 19x25\n', '#816 @ 693,129: 21x11\n', '#817 @ 532,21: 11x20\n', '#818 @ 256,133: 20x28\n', '#819 @ 476,10: 23x16\n', '#820 @ 953,255: 27x13\n', '#821 @ 766,505: 14x10\n', '#822 @ 127,541: 16x20\n', '#823 @ 900,854: 16x23\n', '#824 @ 80,918: 15x26\n', '#825 @ 169,347: 25x26\n', '#826 @ 941,810: 12x20\n', '#827 @ 543,776: 27x21\n', '#828 @ 82,845: 28x28\n', '#829 @ 824,939: 24x20\n', '#830 @ 168,272: 16x17\n', '#831 @ 554,821: 16x17\n', '#832 @ 304,78: 17x20\n', '#833 @ 575,460: 13x21\n', '#834 @ 682,539: 11x24\n', '#835 @ 583,73: 16x14\n', '#836 @ 271,780: 22x27\n', '#837 @ 628,518: 10x20\n', '#838 @ 166,262: 26x17\n', '#839 @ 801,784: 24x16\n', '#840 @ 716,370: 25x25\n', '#841 @ 880,866: 13x22\n', '#842 @ 871,9: 24x24\n', '#843 @ 817,474: 26x13\n', '#844 @ 254,220: 10x16\n', '#845 @ 939,200: 11x22\n', '#846 @ 141,224: 14x14\n', '#847 @ 588,507: 24x23\n', '#848 @ 649,313: 24x28\n', '#849 @ 85,474: 11x28\n', '#850 @ 258,612: 15x21\n', '#851 @ 69,463: 26x21\n', '#852 @ 697,62: 28x23\n', '#853 @ 718,214: 27x24\n', '#854 @ 665,837: 17x22\n', '#855 @ 494,583: 25x19\n', '#856 @ 317,194: 22x27\n', '#857 @ 650,701: 18x17\n', '#858 @ 472,960: 20x26\n', '#859 @ 560,652: 27x14\n', '#860 @ 348,366: 11x16\n', '#861 @ 909,719: 11x15\n', '#862 @ 586,701: 19x20\n', '#863 @ 549,237: 18x15\n', '#864 @ 618,149: 27x17\n', '#865 @ 349,263: 12x12\n', '#866 @ 352,74: 16x18\n', '#867 @ 91,219: 26x19\n', '#868 @ 463,256: 19x23\n', '#869 @ 697,436: 25x29\n', '#870 @ 299,727: 10x11\n', '#871 @ 628,286: 29x28\n', '#872 @ 93,370: 24x20\n', '#873 @ 116,753: 16x15\n', '#874 @ 67,261: 15x10\n', '#875 @ 755,166: 19x12\n', '#876 @ 114,449: 27x14\n', '#877 @ 296,178: 27x26\n', '#878 @ 257,126: 12x9\n', '#879 @ 597,77: 14x18\n', '#880 @ 579,652: 17x27\n', '#881 @ 355,533: 27x29\n', '#882 @ 445,56: 25x22\n', '#883 @ 431,350: 25x25\n', '#884 @ 244,147: 20x23\n', '#885 @ 161,348: 22x26\n', '#886 @ 342,526: 5x3\n', '#887 @ 949,964: 24x19\n', '#888 @ 803,238: 18x18\n', '#889 @ 647,422: 17x28\n', '#890 @ 651,16: 14x17\n', '#891 @ 495,351: 17x15\n', '#892 @ 160,851: 27x23\n', '#893 @ 108,224: 25x28\n', '#894 @ 312,85: 27x24\n', '#895 @ 128,833: 12x18\n', '#896 @ 659,308: 25x15\n', '#897 @ 586,321: 10x28\n', '#898 @ 242,124: 25x19\n', '#899 @ 297,134: 19x17\n', '#900 @ 487,119: 25x26\n', '#901 @ 838,535: 29x21\n', '#902 @ 289,66: 10x28\n', '#903 @ 903,278: 26x13\n', '#904 @ 59,247: 22x19\n', '#905 @ 175,690: 11x12\n', '#906 @ 521,116: 29x27\n', '#907 @ 379,92: 17x10\n', '#908 @ 92,520: 16x26\n', '#909 @ 513,30: 18x12\n', '#910 @ 922,760: 14x15\n', '#911 @ 181,832: 22x20\n', '#912 @ 944,943: 25x25\n', '#913 @ 317,807: 12x22\n', '#914 @ 942,483: 17x10\n', '#915 @ 711,359: 22x29\n', '#916 @ 516,543: 13x29\n', '#917 @ 546,609: 24x23\n', '#918 @ 409,574: 24x12\n', '#919 @ 685,940: 21x21\n', '#920 @ 648,656: 10x29\n', '#921 @ 794,729: 27x23\n', '#922 @ 737,578: 26x18\n', '#923 @ 716,309: 21x24\n', '#924 @ 160,844: 17x21\n', '#925 @ 176,968: 12x16\n', '#926 @ 552,876: 12x25\n', '#927 @ 9,802: 18x26\n', '#928 @ 527,746: 21x16\n', '#929 @ 61,456: 17x17\n', '#930 @ 939,14: 12x29\n', '#931 @ 363,401: 19x19\n', '#932 @ 530,426: 23x21\n', '#933 @ 33,411: 29x21\n', '#934 @ 542,68: 29x16\n', '#935 @ 734,577: 12x15\n', '#936 @ 299,64: 24x19\n', '#937 @ 899,356: 17x10\n', '#938 @ 181,342: 21x17\n', '#939 @ 370,594: 20x16\n', '#940 @ 52,721: 16x23\n', '#941 @ 321,385: 26x15\n', '#942 @ 848,159: 12x27\n', '#943 @ 814,291: 23x24\n', '#944 @ 18,803: 25x25\n', '#945 @ 834,458: 14x17\n', '#946 @ 440,543: 22x18\n', '#947 @ 417,377: 20x28\n', '#948 @ 181,263: 19x20\n', '#949 @ 307,69: 17x29\n', '#950 @ 890,412: 13x29\n', '#951 @ 947,856: 17x19\n', '#952 @ 367,841: 16x17\n', '#953 @ 221,945: 24x14\n', '#954 @ 217,449: 26x19\n', '#955 @ 27,695: 15x26\n', '#956 @ 366,866: 16x17\n', '#957 @ 506,273: 12x20\n', '#958 @ 874,65: 27x13\n', '#959 @ 402,442: 24x20\n', '#960 @ 344,381: 18x15\n', '#961 @ 345,427: 11x22\n', '#962 @ 10,975: 19x22\n', '#963 @ 354,464: 16x27\n', '#964 @ 6,335: 10x16\n', '#965 @ 60,730: 21x17\n', '#966 @ 376,90: 26x17\n', '#967 @ 528,109: 18x26\n', '#968 @ 482,924: 29x12\n', '#969 @ 494,376: 20x22\n', '#970 @ 464,823: 13x26\n', '#971 @ 83,628: 28x27\n', '#972 @ 854,577: 13x19\n', '#973 @ 261,614: 13x21\n', '#974 @ 952,93: 15x15\n', '#975 @ 250,308: 10x19\n', '#976 @ 19,209: 22x14\n', '#977 @ 274,184: 14x16\n', '#978 @ 330,856: 26x24\n', '#979 @ 257,930: 19x14\n', '#980 @ 844,508: 26x12\n', '#981 @ 250,806: 15x20\n', '#982 @ 752,483: 22x26\n', '#983 @ 334,385: 25x13\n', '#984 @ 650,464: 19x20\n', '#985 @ 927,815: 17x27\n', '#986 @ 913,735: 21x11\n', '#987 @ 269,549: 25x12\n', '#988 @ 116,544: 18x26\n', '#989 @ 84,953: 26x21\n', '#990 @ 752,182: 29x19\n', '#991 @ 796,769: 21x18\n', '#992 @ 800,799: 11x20\n', '#993 @ 79,711: 21x23\n', '#994 @ 683,293: 28x19\n', '#995 @ 526,427: 16x28\n', '#996 @ 671,242: 16x14\n', '#997 @ 293,393: 11x25\n', '#998 @ 165,697: 9x6\n', '#999 @ 854,966: 29x11\n', '#1000 @ 63,738: 26x14\n', '#1001 @ 213,956: 20x29\n', '#1002 @ 580,649: 25x10\n', '#1003 @ 536,335: 15x11\n', '#1004 @ 544,187: 27x18\n', '#1005 @ 850,608: 15x22\n', '#1006 @ 384,931: 19x19\n', '#1007 @ 29,649: 26x19\n', '#1008 @ 366,624: 26x10\n', '#1009 @ 671,825: 23x16\n', '#1010 @ 873,250: 28x16\n', '#1011 @ 780,822: 20x28\n', '#1012 @ 944,396: 12x28\n', '#1013 @ 937,20: 13x23\n', '#1014 @ 685,73: 3x7\n', '#1015 @ 662,287: 25x12\n', '#1016 @ 946,406: 14x28\n', '#1017 @ 186,895: 19x13\n', '#1018 @ 84,36: 19x12\n', '#1019 @ 650,150: 26x12\n', '#1020 @ 98,212: 13x19\n', '#1021 @ 413,441: 14x29\n', '#1022 @ 256,977: 15x10\n', '#1023 @ 975,651: 5x11\n', '#1024 @ 338,52: 29x16\n', '#1025 @ 876,271: 21x15\n', '#1026 @ 88,71: 16x14\n', '#1027 @ 434,603: 10x27\n', '#1028 @ 974,470: 21x25\n', '#1029 @ 84,768: 25x21\n', '#1030 @ 886,324: 21x12\n', '#1031 @ 248,710: 28x20\n', '#1032 @ 437,209: 10x27\n', '#1033 @ 272,835: 18x17\n', '#1034 @ 47,589: 21x17\n', '#1035 @ 71,459: 26x22\n', '#1036 @ 229,360: 23x29\n', '#1037 @ 523,395: 26x18\n', '#1038 @ 451,956: 27x19\n', '#1039 @ 360,93: 13x10\n', '#1040 @ 420,947: 22x24\n', '#1041 @ 439,478: 27x21\n', '#1042 @ 510,544: 13x20\n', '#1043 @ 304,520: 15x26\n', '#1044 @ 181,254: 27x11\n', '#1045 @ 87,313: 26x19\n', '#1046 @ 712,386: 11x18\n', '#1047 @ 142,144: 14x22\n', '#1048 @ 654,467: 20x10\n', '#1049 @ 50,73: 23x27\n', '#1050 @ 510,759: 21x29\n', '#1051 @ 776,581: 11x15\n', '#1052 @ 951,378: 24x22\n', '#1053 @ 18,436: 14x26\n', '#1054 @ 518,59: 26x14\n', '#1055 @ 955,88: 16x17\n', '#1056 @ 35,628: 27x22\n', '#1057 @ 491,965: 29x29\n', '#1058 @ 169,983: 19x12\n', '#1059 @ 23,475: 24x15\n', '#1060 @ 886,112: 28x14\n', '#1061 @ 402,315: 25x20\n', '#1062 @ 213,203: 22x17\n', '#1063 @ 129,521: 16x17\n', '#1064 @ 336,523: 18x17\n', '#1065 @ 102,775: 28x12\n', '#1066 @ 282,660: 15x26\n', '#1067 @ 902,345: 10x17\n', '#1068 @ 233,969: 29x20\n', '#1069 @ 666,317: 3x13\n', '#1070 @ 341,205: 16x24\n', '#1071 @ 337,964: 27x12\n', '#1072 @ 607,675: 14x20\n', '#1073 @ 690,445: 12x29\n', '#1074 @ 926,532: 26x20\n', '#1075 @ 937,466: 29x11\n', '#1076 @ 570,714: 25x14\n', '#1077 @ 678,520: 19x27\n', '#1078 @ 307,351: 27x10\n', '#1079 @ 526,34: 29x29\n', '#1080 @ 74,684: 18x16\n', '#1081 @ 450,752: 23x15\n', '#1082 @ 755,795: 22x27\n', '#1083 @ 260,138: 21x29\n', '#1084 @ 321,315: 19x29\n', '#1085 @ 188,214: 17x22\n', '#1086 @ 784,712: 21x18\n', '#1087 @ 458,550: 14x28\n', '#1088 @ 796,582: 27x13\n', '#1089 @ 321,230: 21x29\n', '#1090 @ 898,470: 22x20\n', '#1091 @ 138,370: 11x12\n', '#1092 @ 345,361: 10x10\n', '#1093 @ 177,882: 19x16\n', '#1094 @ 946,702: 26x26\n', '#1095 @ 619,490: 24x19\n', '#1096 @ 133,506: 20x20\n', '#1097 @ 266,869: 25x21\n', '#1098 @ 387,970: 19x21\n', '#1099 @ 311,323: 17x24\n', '#1100 @ 310,488: 28x22\n', '#1101 @ 770,651: 13x16\n', '#1102 @ 965,301: 28x11\n', '#1103 @ 466,826: 19x15\n', '#1104 @ 88,632: 17x10\n', '#1105 @ 902,137: 25x19\n', '#1106 @ 752,329: 18x26\n', '#1107 @ 182,164: 23x17\n', '#1108 @ 289,679: 14x28\n', '#1109 @ 176,502: 18x18\n', '#1110 @ 214,971: 12x27\n', '#1111 @ 389,207: 28x28\n', '#1112 @ 331,19: 4x8\n', '#1113 @ 312,635: 25x29\n', '#1114 @ 509,141: 14x21\n', '#1115 @ 392,798: 13x24\n', '#1116 @ 876,419: 27x12\n', '#1117 @ 636,613: 28x14\n', '#1118 @ 681,326: 11x25\n', '#1119 @ 787,707: 20x27\n', '#1120 @ 31,11: 25x21\n', '#1121 @ 270,551: 20x21\n', '#1122 @ 353,134: 17x27\n', '#1123 @ 752,773: 17x25\n', '#1124 @ 648,692: 12x28\n', '#1125 @ 495,632: 27x27\n', '#1126 @ 860,171: 14x20\n', '#1127 @ 253,507: 20x22\n', '#1128 @ 316,494: 16x10\n', '#1129 @ 524,569: 29x29\n', '#1130 @ 238,309: 20x13\n', '#1131 @ 783,542: 15x29\n', '#1132 @ 553,681: 23x11\n', '#1133 @ 884,495: 10x25\n', '#1134 @ 910,18: 17x12\n', '#1135 @ 436,127: 14x10\n', '#1136 @ 61,738: 12x24\n', '#1137 @ 966,288: 12x27\n', '#1138 @ 722,117: 7x3\n', '#1139 @ 95,933: 28x29\n', '#1140 @ 336,683: 25x24\n', '#1141 @ 681,946: 25x17\n', '#1142 @ 359,61: 22x20\n', '#1143 @ 37,637: 22x18\n', '#1144 @ 768,578: 20x13\n', '#1145 @ 855,666: 15x26\n', '#1146 @ 255,689: 10x27\n', '#1147 @ 599,478: 20x24\n', '#1148 @ 195,715: 18x23\n', '#1149 @ 478,641: 21x14\n', '#1150 @ 882,180: 27x20\n', '#1151 @ 851,302: 28x21\n', '#1152 @ 363,300: 27x26\n', '#1153 @ 309,631: 4x3\n', '#1154 @ 199,224: 12x17\n', '#1155 @ 228,153: 19x13\n', '#1156 @ 487,22: 14x27\n', '#1157 @ 682,302: 17x15\n', '#1158 @ 187,487: 16x21\n', '#1159 @ 210,315: 19x26\n', '#1160 @ 376,789: 18x29\n', '#1161 @ 67,567: 13x17\n', '#1162 @ 221,515: 14x29\n', '#1163 @ 397,514: 12x26\n', '#1164 @ 384,371: 18x23\n', '#1165 @ 882,953: 27x29\n', '#1166 @ 287,88: 28x12\n', '#1167 @ 884,89: 21x21\n', '#1168 @ 99,820: 17x13\n', '#1169 @ 492,656: 21x14\n', '#1170 @ 147,831: 29x21\n', '#1171 @ 128,256: 10x13\n', '#1172 @ 841,476: 24x16\n', '#1173 @ 328,17: 11x14\n', '#1174 @ 109,287: 20x12\n', '#1175 @ 113,311: 12x27\n', '#1176 @ 856,917: 18x13\n', '#1177 @ 466,556: 24x10\n', '#1178 @ 486,585: 19x16\n', '#1179 @ 711,226: 10x13\n', '#1180 @ 108,254: 26x24\n', '#1181 @ 725,313: 10x24\n', '#1182 @ 365,127: 23x25\n', '#1183 @ 488,371: 22x14\n', '#1184 @ 381,502: 16x21\n', '#1185 @ 322,567: 17x24\n', '#1186 @ 210,564: 12x29\n', '#1187 @ 525,797: 21x24\n', '#1188 @ 58,431: 29x25\n', '#1189 @ 661,24: 20x15\n', '#1190 @ 797,234: 17x18\n', '#1191 @ 851,38: 13x21\n', '#1192 @ 962,75: 11x27\n', '#1193 @ 568,200: 16x23\n', '#1194 @ 863,319: 12x18\n', '#1195 @ 25,704: 27x24\n', '#1196 @ 835,510: 29x14\n', '#1197 @ 427,904: 23x25\n', '#1198 @ 327,956: 18x27\n', '#1199 @ 168,609: 16x23\n', '#1200 @ 591,31: 16x26\n', '#1201 @ 428,374: 13x16\n', '#1202 @ 183,332: 6x7\n', '#1203 @ 139,266: 12x12\n', '#1204 @ 616,33: 19x28\n', '#1205 @ 479,470: 18x10\n', '#1206 @ 483,910: 19x25\n', '#1207 @ 38,760: 28x21\n', '#1208 @ 307,727: 10x27\n', '#1209 @ 607,19: 28x29\n', '#1210 @ 760,404: 12x25\n', '#1211 @ 541,23: 10x18\n', '#1212 @ 457,555: 14x23\n', '#1213 @ 307,693: 12x12\n', '#1214 @ 176,965: 11x15\n', '#1215 @ 880,555: 3x12\n', '#1216 @ 365,261: 21x25\n', '#1217 @ 900,338: 24x18\n', '#1218 @ 796,796: 15x12\n', '#1219 @ 94,64: 12x11\n', '#1220 @ 398,1: 28x10\n', '#1221 @ 511,944: 11x29\n', '#1222 @ 432,174: 17x29\n', '#1223 @ 619,427: 19x16\n', '#1224 @ 978,670: 19x12\n', '#1225 @ 330,384: 26x20\n', '#1226 @ 233,701: 16x14\n', '#1227 @ 264,870: 21x12\n', '#1228 @ 457,889: 23x29\n', '#1229 @ 614,202: 25x29\n', '#1230 @ 744,689: 26x27\n', '#1231 @ 484,912: 16x11\n', '#1232 @ 912,679: 21x26\n', '#1233 @ 509,20: 24x14\n', '#1234 @ 679,847: 21x29\n', '#1235 @ 897,950: 14x17\n', '#1236 @ 449,85: 25x28\n', '#1237 @ 907,821: 25x17\n', '#1238 @ 685,967: 19x20\n', '#1239 @ 104,16: 22x28\n', '#1240 @ 363,95: 5x5\n', '#1241 @ 629,755: 23x18\n', '#1242 @ 570,345: 15x28\n', '#1243 @ 270,193: 23x11\n', '#1244 @ 43,348: 12x21\n', '#1245 @ 903,482: 22x29\n', '#1246 @ 915,179: 27x24\n', '#1247 @ 76,26: 16x14\n', '#1248 @ 874,197: 16x23\n', '#1249 @ 869,728: 26x14\n', '#1250 @ 158,377: 10x11\n', '#1251 @ 379,138: 26x17\n', '#1252 @ 298,977: 21x12\n', '#1253 @ 914,737: 27x26\n', '#1254 @ 153,123: 21x27\n', '#1255 @ 842,731: 20x24\n', '#1256 @ 885,852: 24x26\n', '#1257 @ 707,747: 23x18\n', '#1258 @ 729,387: 19x23\n', '#1259 @ 238,452: 24x20\n']
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 7, in <module>
    for x in claim:
NameError: name 'claim' is not defined
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1', '@', '749,666:', '27x15']
['#2', '@', '118,560:', '22x18']
['#3', '@', '194,731:', '16x29']
['#4', '@', '295,407:', '21x29']
['#5', '@', '717,30:', '29x24']
['#6', '@', '969,722:', '11x25']
['#7', '@', '117,596:', '20x22']
['#8', '@', '557,190:', '19x17']
['#9', '@', '445,84:', '22x24']
['#10', '@', '527,900:', '28x12']
['#11', '@', '48,71:', '20x17']
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 9, in <module>
    print(y)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 8, in <module>
    claim = x.split()
NameError: name 'x' is not defined
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
749
118
194
295
717
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 11, in <module>
    print(x)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
749 749
118 118
194 194
295 295
717 717
969 969
117 117
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 12, in <module>
    print(x,y)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1', '@', '749,666:', '27x15']
749 749 27 15
['#2', '@', '118,560:', '22x18']
118 118 22 18
['#3', '@', '194,731:', '16x29']
194 194 16 29
['#4', '@', '295,407:', '21x29']
295 295 21 29
['#5', '@', '717,30:', '29x24']
717 717 29 24
['#6', '@', '969,722:', '11x25']
969 969 11 25Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 15, in <module>
    print(x,y, width, height)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1', '@', '749,666:', '27x15']
749 666 27 15
['#2', '@', '118,560:', '22x18']
118 560 22 18
['#3', '@', '194,731:', '16x29']
194 731 16 29
['#4', '@', '295,407:', '21x29']
295 407 21 29
['#5', '@', '717,30:', '29x24']
717 30 29 24
['#6', '@', '969,722:', '11x25']
969 722 11 25
['#7', '@', '117,596:', '20x22']
117 596 20 22
['#8', '@', '557,190:', '19x17']
557 190 19 17
['#9', '@', '445,84:', '22x24']
445 84 22 24
['#10', '@', '527,900:', '28x12']
527 900 28 12
['#11', '@', '48,71:', '20x17']
48 71 20 17
['#12', '@', '644,603:', '29x16']
644 603 29 16
['#13', '@', '786,478:', '19x10']
786 478 19 10
['#14', '@', '40,483:', '14x15']
40 483 14 Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 15, in <module>
    print(x,y, width, height)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 18, in <module>
    for j in range(width):
TypeError: 'str' object cannot be interpreted as an integer
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 20, in <module>
    for j in range(width):
TypeError: 'str' object cannot be interpreted as an integer
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
0
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 23, in <module>
    jx = x+j
TypeError: can only concatenate str (not "int") to str
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
0
1
2
3
4
5
6
7Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 21, in <module>
    print(j)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
0 27
1 27
2 27
3 27
4 27
5 27
6 27
7 27
8 27
9 27
10 27
11 27
12 27
13 27
14 27
15 27
16 27
17 27
18 27
19 27
20 27
21 27
22 27
23 27
24 27
25 27
26 27
0 22
1 22
2 22
3 22
4 22
5 22
6 Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 21, in <module>
    print(j, width)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
0 27
1 27
2 27
3 27
4 27
5 27
6 27
7 27
8 27
9 27
10 27
11 27
12 27
13 27
14 27
15 27
16 27
17 27
18 27
19 27
20 27
21 27
22 27
23 27
24 27
25 27
26 27
27 27
0 22
1 22
2 22
3 22
4 22
5 22
6 22
7 Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 21, in <module>
    print(j, width)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
0 27
1 27
2 27
3 27
4 27
5 27
6 27
7 27
8 27
9 27
10 27
11 27
12 27
13 27
14 27
15 27
16 27
17 27
18 27
19 27
20 27
21 27
22 27
23 27
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 19, in <module>
    print(j, width)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 23, in <module>
    fabric = fabric + [(jx, ky)]
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1', '@', '749,666:', '27x15']
['#2', '@', '118,560:', '22x18']
['#3', '@', '194,731:', '16x29']
['#4', '@', '295,407:', '21x29']
['#5', '@', '717,30:', '29x24']
['#6', '@', '969,722:', '11x25']
['#7', '@', '117,596:', '20x22']
['#8', '@', '557,190:', '19x17']
['#9', '@', '445,84:', '22x24']
['#10', '@', '527,900:', '28x12']
['#11', '@', '48,71:', '20x17']
['#12', '@', '644,603:', '29x16']
['#13', '@', '786,478:', '19x10']
['#14', '@', '40,483:', '14x15']
['#15', '@', '683,475:', '22x13']
['#16', '@', '173,683:', '10x10']
['#17', '@', '862,778:', '12x29']
['#18', '@', '169,513:', '20x13']
['#19', '@', '151,719:', '28x13']
['#20', '@', '49,342:', '15x29']
['#21', '@', '678,900:', '13x29']
['#22', '@', '97,522:', '6x16']
['#23', '@', '888,500:', '11x21']
['#24', '@', '781,576:', '12x22']
['#25', '@', '122,367:', '28x18']
['#26', '@', '625,149:', '22x27']
['#27', '@', '668,803:', '15x11']
['#28', '@', '822,317:', '26x15']
['#29', '@', '685,945:', '19x11']
['#30', '@', '786,296:', '13x18']
['#31', '@', '848,839:', '15x16']
['#32', '@', '663,448:', '28x24']
['#33', '@', '941,785:', '13x24']
['#34', '@', '579,902:', '26x11']
['#35', '@', '343,206:', '19x11']
['#36', '@', '301,174:', '27x12']
['#37', '@', '539,52:', '16x20']
['#38', '@', '740,676:', '17x26']
['#39', '@', '771,191:', '11x18']
['#40', '@', '80,930:', '22x29']
['#41', '@', '402,979:', '16x18']
['#42', '@', '978,896:', '14x27']
['#43', '@', '299,185:', '20x24']
['#44', '@', '885,32:', '20x25']
['#45', '@', '28,376:', '13x26']
['#46', '@', '103,323:', '22x22']
['#47', '@', '495,160:', '18x14']
['#48', '@', '318,567:', '13x20']
['#49', '@', '206,353:', '11x13']
['#50', '@', '763,100:', '21x13']
['#51', '@', '852,973:', '18x12']
['#52', '@', '50,249:', '20x26']
['#53', '@', '329,579:', '11x11']
['#54', '@', '546,884:', '12x16']
['#55', '@', '425,681:', '18x18']
['#56', '@', '152,610:', '17x16']
['#57', '@', '802,735:', '29x21']
['#58', '@', '113,567:', '22x18']
['#59', '@', '361,386:', '27x25']
['#60', '@', '921,9:', '25x19']
['#61', '@', '68,903:', '23x21']
['#62', '@', '368,599:', '16x25']
['#63', '@', '553,182:', '11x16']
['#64', '@', '391,822:', '26x28']
['#65', '@', '589,207:', '12x20']
['#66', '@', '188,348:', '23x22']
['#67', '@', '499,43:', '16x21']
['#68', '@', '849,175:', '14x10']
['#69', '@', '650,527:', '20x10']
['#70', '@', '108,72:', '11x25']
['#71', '@', '685,124:', '12x29']
['#72', '@', '364,370:', '25x10']
['#73', '@', '578,357:', '18x24']
['#74', '@', '514,961:', '25x28']
['#75', '@', '376,981:', '22x11']
['#76', '@', '96,496:', '16x17']
['#77', '@', '682,6:', '14x13']
['#78', '@', '191,804:', '17x19']
['#79', '@', '202,556:', '28x23']
['#80', '@', '390,525:', '11x20']
['#81', '@', '836,610:', '22x20']
['#82', '@', '566,79:', '22x28']
['#83', '@', '441,68:', '16x12']
['#84', '@', '270,609:', '12x10']
['#85', '@', '520,392:', '20x16']
['#86', '@', '104,416:', '23x26']
['#87', '@', '104,763:', '22x16']
['#88', '@', '669,877:', '11x24']
['#89', '@', '277,658:', '27x12']
['#90', '@', '909,134:', '25x14']
['#91', '@', '414,925:', '29x28']
['#92', '@', '304,618:', '15x23']
['#93', '@', '838,975:', '23x14']
['#94', '@', '761,377:', '19x26']
['#95', '@', '923,178:', '11x10']
['#96', '@', '901,945:', '22x20']
['#97', '@', '179,325:', '18x24']
['#98', '@', '877,792:', '27x17']
['#99', '@', '870,233:', '24x24']
['#100', '@', '945,390:', '13x14']
['#101', '@', '697,868:', '10x19']
['#102', '@', '823,154:', '19x27']
['#103', '@', '444,900:', '16x27']
['#104', '@', '538,45:', '25x14']
['#105', '@', '90,423:', '15x10']
['#106', '@', '425,822:', '26x19']
['#107', '@', '968,167:', '20x21']
['#108', '@', '721,420:', '25x12']
['#109', '@', '516,30:', '27x29']
['#110', '@', '316,565:', '11x13']
['#111', '@', '379,278:', '26x16']
['#112', '@', '940,770:', '13x24']
['#113', '@', '429,913:', '16x18']
['#114', '@', '278,174:', '25x20']
['#115', '@', '659,232:', '22x16']
['#116', '@', '482,36:', '20x10']
['#117', '@', '162,410:', '19x11']
['#118', '@', '160,949:', '21x27']
['#119', '@', '48,268:', '15x17']
['#120', '@', '50,512:', '12x27']
['#121', '@', '215,330:', '26x12']
['#122', '@', '504,400:', '28x28']
['#123', '@', '129,529:', '21x18']
['#124', '@', '160,370:', '26x19']
['#125', '@', '955,275:', '21x29']
['#126', '@', '576,320:', '13x28']
['#127', '@', '492,955:', '24x29']
['#128', '@', '111,918:', '24x17']
['#129', '@', '654,910:', '13x10']
['#130', '@', '390,607:', '21x23']
['#131', '@', '498,581:', '16x21']
['#132', '@', '1,126:', '20x24']
['#133', '@', '108,809:', '4x3']
['#134', '@', '600,572:', '13x29']
['#135', '@', '67,717:', '21x27']
['#136', '@', '387,392:', '21x15']
['#137', '@', '510,44:', '10x15']
['#138', '@', '940,137:', '10x26']
['#139', '@', '375,506:', '18x10']
['#140', '@', '825,669:', '18x10']
['#141', '@', '528,338:', '24x13']
['#142', '@', '657,492:', '20x28']
['#143', '@', '659,677:', '3x6']
['#144', '@', '885,878:', '16x24']
['#145', '@', '310,214:', '26x27']
['#146', '@', '947,823:', '13x17']
['#147', '@', '10,222:', '18x26']
['#148', '@', '56,575:', '24x16']
['#149', '@', '646,914:', '16x20']
['#150', '@', '313,512:', '18x16']
['#151', '@', '321,622:', '24x17']
['#152', '@', '937,195:', '21x14']
['#153', '@', '386,23:', '18x26']
['#154', '@', '922,148:', '18x29']
['#155', '@', '126,45:', '20x27']
['#156', '@', '590,14:', '13x11']
['#157', '@', '538,739:', '22x18']
['#158', '@', '497,171:', '24x21']
['#159', '@', '824,484:', '12x21']
['#160', '@', '329,843:', '23x28']
['#161', '@', '163,179:', '22x18']
['#162', '@', '160,98:', '18x22']
['#163', '@', '664,1:', '24x17']
['#164', '@', '414,502:', '21x12']
['#165', '@', '15,792:', '11x20']
['#166', '@', '454,169:', '12x27']
['#167', '@', '260,924:', '24x14']
['#168', '@', '565,223:', '13x15']
['#169', '@', '247,165:', '20x13']
['#170', '@', '72,41:', '23x26']
['#171', '@', '640,265:', '28x24']
['#172', '@', '150,867:', '28x18']
['#173', '@', '478,577:', '21x29']
['#174', '@', '654,695:', '13x25']
['#175', '@', '426,674:', '23x17']
['#176', '@', '664,290:', '19x5']
['#177', '@', '427,509:', '10x14']
['#178', '@', '349,382:', '21x21']
['#179', '@', '416,582:', '17x25']
['#180', '@', '340,270:', '22x10']
['#181', '@', '835,750:', '15x12']
['#182', '@', '944,548:', '11x22']
['#183', '@', '590,509:', '17x11']
['#184', '@', '378,224:', '13x15']
['#185', '@', '682,283:', '28x19']
['#186', '@', '607,82:', '26x15']
['#187', '@', '604,468:', '28x15']
['#188', '@', '719,127:', '29x28']
['#189', '@', '319,15:', '22x26']
['#190', '@', '119,285:', '13x14']
['#191', '@', '235,512:', '26x24']
['#192', '@', '191,473:', '11x20']
['#193', '@', '0,840:', '10x27']
['#194', '@', '617,528:', '21x16']
['#195', '@', '206,474:', '24x11']
['#196', '@', '285,197:', '20x19']
['#197', '@', '347,352:', '15x22']
['#198', '@', '412,735:', '26x20']
['#199', '@', '372,931:', '23x15']
['#200', '@', '461,497:', '13x28']
['#201', '@', '689,943:', '28x12']
['#202', '@', '621,93:', '26x25']
['#203', '@', '897,795:', '12x13']
['#204', '@', '652,648:', '11x21']
['#205', '@', '259,367:', '11x26']
['#206', '@', '43,187:', '26x22']
['#207', '@', '170,194:', '27x29']
['#208', '@', '539,760:', '22x22']
['#209', '@', '404,291:', '20x29']
['#210', '@', '782,419:', '25x27']
['#211', '@', '613,61:', '3x10']
['#212', '@', '821,325:', '16x21']
['#213', '@', '65,689:', '12x11']
['#214', '@', '303,270:', '24x24']
['#215', '@', '836,463:', '17x17']
['#216', '@', '1,643:', '23x15']
['#217', '@', '953,540:', '13x28']
['#218', '@', '140,530:', '28x27']
['#219', '@', '625,447:', '12x13']
['#220', '@', '492,638:', '26x21']
['#221', '@', '156,711:', '10x12']
['#222', '@', '35,699:', '17x27']
['#223', '@', '301,187:', '14x24']
['#224', '@', '805,618:', '23x11']
['#225', '@', '550,881:', '11x21']
['#226', '@', '209,536:', '24x20']
['#227', '@', '181,331:', '14x26']
['#228', '@', '849,922:', '15x19']
['#229', '@', '100,832:', '12x18']
['#230', '@', '224,410:', '6x6']
['#231', '@', '437,952:', '17x25']
['#232', '@', '299,494:', '16x22']
['#233', '@', '37,9:', '14x19']
['#234', '@', '177,563:', '22x18']
['#235', '@', '152,230:', '17x11']
['#236', '@', '18,250:', '16x28']
['#237', '@', '759,373:', '28x24']
['#238', '@', '202,724:', '24x18']
['#239', '@', '291,769:', '10x12']
['#240', '@', '816,908:', '27x21']
['#241', '@', '228,198:', '11x18']
['#242', '@', '164,233:', '27x11']
['#243', '@', '957,624:', '27x24']
['#244', '@', '840,726:', '29x24']
['#245', '@', '4,797:', '24x12']
['#246', '@', '172,879:', '15x17']
['#247', '@', '972,905:', '14x27']
['#248', '@', '674,845:', '10x15']
['#249', '@', '846,573:', '21x21']
['#250', '@', '806,277:', '20x29']
['#251', '@', '812,900:', '22x12']
['#252', '@', '147,361:', '24x20']
['#253', '@', '865,723:', '18x18']
['#254', '@', '416,125:', '21x22']
['#255', '@', '899,831:', '13x18']
['#256', '@', '570,189:', '20x21']
['#257', '@', '302,498:', '15x28']
['#258', '@', '360,65:', '15x14']
['#259', '@', '178,394:', '18x25']
['#260', '@', '543,744:', '13x24']
['#261', '@', '746,590:', '23x12']
['#262', '@', '803,586:', '26x26']
['#263', '@', '381,559:', '26x14']
['#264', '@', '513,391:', '14x19']
['#265', '@', '647,20:', '17x21']
['#266', '@', '611,53:', '11x26']
['#267', '@', '60,387:', '22x21']
['#268', '@', '118,142:', '19x11']
['#269', '@', '550,816:', '25x19']
['#270', '@', '249,538:', '24x29']
['#271', '@', '423,966:', '20x13']
['#272', '@', '921,676:', '20x12']
['#273', '@', '238,145:', '14x12']
['#274', '@', '278,650:', '24x24']
['#275', '@', '629,561:', '23x15']
['#276', '@', '98,784:', '11x12']
['#277', '@', '281,169:', '18x29']
['#278', '@', '929,427:', '29x19']
['#279', '@', '164,384:', '20x12']
['#280', '@', '145,46:', '28x26']
['#281', '@', '717,115:', '20x11']
['#282', '@', '929,798:', '25x11']
['#283', '@', '275,457:', '21x12']
['#284', '@', '898,437:', '16x17']
['#285', '@', '466,643:', '20x16']
['#286', '@', '744,930:', '22x11']
['#287', '@', '857,719:', '26x20']
['#288', '@', '860,527:', '17x21']
['#289', '@', '212,530:', '18x27']
['#290', '@', '328,630:', '25x10']
['#291', '@', '476,7:', '23x29']
['#292', '@', '787,796:', '22x12']
['#293', '@', '18,243:', '26x10']
['#294', '@', '389,25:', '21x15']
['#295', '@', '687,942:', '25x10']
['#296', '@', '380,626:', '13x11']
['#297', '@', '357,559:', '15x29']
['#298', '@', '1,849:', '25x14']
['#299', '@', '457,819:', '13x21']
['#300', '@', '719,52:', '20x25']
['#301', '@', '895,473:', '10x22']
['#302', '@', '301,196:', '11x15']
['#303', '@', '432,392:', '25x22']
['#304', '@', '591,11:', '25x25']
['#305', '@', '101,628:', '29x14']
['#306', '@', '322,860:', '10x10']
['#307', '@', '300,754:', '5x5']
['#308', '@', '437,297:', '29x21']
['#309', '@', '451,518:', '24x16']
['#310', '@', '649,518:', '22x15']
['#311', '@', '558,368:', '27x20']
['#312', '@', '432,928:', '17x25']
['#313', '@', '784,483:', '22x23']
['#314', '@', '316,351:', '23x21']
['#315', '@', '10,374:', '20x20']
['#316', '@', '321,278:', '22x10']
['#317', '@', '524,808:', '21x17']
['#318', '@', '389,977:', '15x10']
['#319', '@', '102,804:', '20x19']
['#320', '@', '17,868:', '19x15']
['#321', '@', '303,198:', '16x11']
['#322', '@', '872,72:', '20x10']
['#323', '@', '331,126:', '21x27']
['#324', '@', '137,462:', '19x23']
['#325', '@', '170,318:', '21x29']
['#326', '@', '268,836:', '19x10']
['#327', '@', '390,961:', '13x23']
['#328', '@', '161,296:', '10x29']
['#329', '@', '204,722:', '18x20']
['#330', '@', '249,689:', '11x11']
['#331', '@', '912,153:', '20x29']
['#332', '@', '66,730:', '10x15']
['#333', '@', '87,63:', '29x14']
['#334', '@', '745,390:', '19x20']
['#335', '@', '105,304:', '14x12']
['#336', '@', '833,313:', '29x12']
['#337', '@', '451,852:', '27x17']
['#338', '@', '0,640:', '25x14']
['#339', '@', '204,256:', '21x13']
['#340', '@', '663,493:', '15x18']
['#341', '@', '35,222:', '22x26']
['#342', '@', '326,17:', '21x14']
['#343', '@', '670,801:', '18x11']
['#344', '@', '902,248:', '12x21']
['#345', '@', '730,584:', '19x13']
['#346', '@', '387,214:', '20x25']
['#347', '@', '298,933:', '25x12']
['#348', '@', '242,815:', '19x21']
['#349', '@', '62,556:', '27x28']
['#350', '@', '652,594:', '20x10']
['#351', '@', '250,564:', '25x28']
['#352', '@', '206,348:', '24x14']
['#353', '@', '232,167:', '21x11']
['#354', '@', '478,282:', '26x13']
['#355', '@', '268,556:', '18x13']
['#356', '@', '656,673:', '11x21']
['#357', '@', '631,753:', '23x29']
['#358', '@', '311,276:', '12x27']
['#359', '@', '899,131:', '23x11']
['#360', '@', '940,134:', '26x28']
['#361', '@', '345,407:', '20x16']
['#362', '@', '816,301:', '19x12']
['#363', '@', '844,773:', '17x23']
['#364', '@', '850,494:', '15x28']
['#365', '@', '967,366:', '17x19']
['#366', '@', '549,894:', '11x10']
['#367', '@', '318,398:', '28x21']
['#368', '@', '9,394:', '24x15']
['#369', '@', '725,304:', '11x27']
['#370', '@', '829,266:', '13x12']
['#371', '@', '880,136:', '25x21']
['#372', '@', '166,871:', '19x10']
['#373', '@', '210,229:', '14x18']
['#374', '@', '351,364:', '17x13']
['#375', '@', '182,37:', '23x21']
['#376', '@', '675,798:', '12x14']
['#377', '@', '809,180:', '16x19']
['#378', '@', '488,465:', '15x10']
['#379', '@', '452,314:', '29x24']
['#380', '@', '501,528:', '20x23']
['#381', '@', '299,752:', '13x15']
['#382', '@', '783,579:', '22x22']
['#383', '@', '579,641:', '12x23']
['#384', '@', '904,948:', '17x16']
['#385', '@', '812,580:', '10x27']
['#386', '@', '117,929:', '11x14']
['#387', '@', '129,127:', '28x20']
['#388', '@', '714,740:', '25x22']
['#389', '@', '732,307:', '26x11']
['#390', '@', '885,415:', '15x18']
['#391', '@', '45,406:', '28x13']
['#392', '@', '356,360:', '29x26']
['#393', '@', '630,285:', '20x28']
['#394', '@', '854,831:', '14x19']
['#395', '@', '451,819:', '26x24']
['#396', '@', '424,435:', '22x24']
['#397', '@', '243,682:', '20x13']
['#398', '@', '284,466:', '22x16']
['#399', '@', '605,25:', '25x11']
['#400', '@', '959,643:', '24x12']
['#401', '@', '140,504:', '23x17']
['#402', '@', '6,234:', '16x25']
['#403', '@', '872,805:', '14x13']
['#404', '@', '466,632:', '14x19']
['#405', '@', '944,484:', '17x16']
['#406', '@', '619,507:', '10x27']
['#407', '@', '8,551:', '28x26']
['#408', '@', '435,931:', '8x10']
['#409', '@', '901,123:', '21x25']
['#410', '@', '55,375:', '10x19']
['#411', '@', '424,921:', '10x11']
['#412', '@', '822,618:', '28x17']
['#413', '@', '823,948:', '15x25']
['#414', '@', '580,893:', '6x18']
['#415', '@', '597,892:', '14x26']
['#416', '@', '615,582:', '27x24']
['#417', '@', '52,916:', '20x11']
['#418', '@', '679,329:', '22x14']
['#419', '@', '32,136:', '20x12']
['#420', '@', '921,367:', '27x21']
['#421', '@', '292,100:', '23x11']
['#422', '@', '508,353:', '13x13']
['#423', '@', '376,31:', '24x11']
['#424', '@', '718,390:', '26x24']
['#425', '@', '429,526:', '26x26']
['#426', '@', '406,540:', '17x19']
['#427', '@', '144,36:', '22x25']
['#428', '@', '218,974:', '18x24']
['#429', '@', '742,592:', '12x22']
['#430', '@', '934,39:', '15x10']
['#431', '@', '638,445:', '21x14']
['#432', '@', '944,193:', '24x23']
['#433', '@', '825,961:', '17x22']
['#434', '@', '235,427:', '23x14']
['#435', '@', '661,461:', '29x26']
['#436', '@', '715,33:', '29x11']
['#437', '@', '728,939:', '21x10']
['#438', '@', '312,498:', '27x28']
['#439', '@', '224,517:', '24x21']
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 23, in <module>
    fabric = fabric + [(jx, ky)]
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1', '@', '749,666:', '27x15']
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 32, in <module>
    if patch < 0:
TypeError: '<' not supported between instances of 'NoneType' and 'int'
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1', '@', '749,666:', '27x15']
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 33, in <module>
    if patch < 0:
TypeError: '<' not supported between instances of 'NoneType' and 'int'
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1', '@', '749,666:', '27x15']
patch None
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 34, in <module>
    if patch < 0:
TypeError: '<' not supported between instances of 'NoneType' and 'int'
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1', '@', '749,666:', '27x15']
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch -1
patch Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 35, in <module>
    print("patch", patch)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1', '@', '749,666:', '27x15']
['#2', '@', '118,560:', '22x18']
['#3', '@', '194,731:', '16x29']
['#4', '@', '295,407:', '21x29']
['#5', '@', '717,30:', '29x24']
['#6', '@', '969,722:', '11x25']
['#7', '@', '117,596:', '20x22']
['#8', '@', '557,190:', '19x17']
['#9', '@', '445,84:', '22x24']
['#10', '@', '527,900:', '28x12']
['#11', '@', '48,71:', '20x17']
['#12', '@', '644,603:', '29x16']
['#13', '@', '786,478:', '19x10']
['#14', '@', '40,483:', '14x15']
['#15', '@', '683,475:', '22x13']
['#16', '@', '173,683:', '10x10']
['#17', '@', '862,778:', '12x29']
['#18', '@', '169,513:', '20x13']
['#19', '@', '151,719:', '28x13']
['#20', '@', '49,342:', '15x29']
['#21', '@', '678,900:', '13x29']
['#22', '@', '97,522:', '6x16']
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 27, in <module>
    print(claim)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1', '@', '749,666:', '27x15']
['#2', '@', '118,560:', '22x18']
['#3', '@', '194,731:', '16x29']
['#4', '@', '295,407:', '21x29']
['#5', '@', '717,30:', '29x24']
['#6', '@', '969,722:', '11x25']
['#7', '@', '117,596:', '20x22']
['#8', '@', '557,190:', '19x17']
['#9', '@', '445,84:', '22x24']
['#10', '@', '527,900:', '28x12']
['#11', '@', '48,71:', '20x17']
['#12', '@', '644,603:', '29x16']
['#13', '@', '786,478:', '19x10']
['#14', '@', '40,483:', '14x15']
['#15', '@', '683,475:', '22x13']
['#16', '@', '173,683:', '10x10']
['#17', '@', '862,778:', '12x29']
['#18', '@', '169,513:', '20x13']
['#19', '@', '151,719:', '28x13']
['#20', '@', '49,342:', '15x29']
['#21', '@', '678,900:', '13x29']
['#22', '@', '97,522:', '6x16']
['#23', '@', '888,500:', '11x21']
['#24', '@', '781,576:', '12x22']
['#25', '@', '122,367:', '28x18']
['#26', '@', '625,149:', '22x27']
['#27', '@', '668,803:', '15x11']
['#28', '@', '822,317:', '26x15']
['#29', '@', '685,945:', '19x11']
['#30', '@', '786,296:', '13x18']
['#31', '@', '848,839:', '15x16']
['#32', '@', '663,448:', '28x24']
['#33', '@', '941,785:', '13x24']Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 27, in <module>
    print(claim)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1', '@', '749,666:', '27x15']
tomt tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tygTraceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 36, in <module>
    patch = findpatch(jx,ky)
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 19, in findpatch
    print("finns inte på tyg")
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1', '@', '749,666:', '27x15']
tomt tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
16
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
32
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
48
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
64
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tygTraceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 36, in <module>
    patch = findpatch(jx,ky)
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 19, in findpatch
    print("finns inte på tyg")
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1', '@', '749,666:', '27x15']
['#2', '@', '118,560:', '22x18']
['#3', '@', '194,731:', '16x29']
['#4', '@', '295,407:', '21x29']
['#5', '@', '717,30:', '29x24']
['#6', '@', '969,722:', '11x25']
['#7', '@', '117,596:', '20x22']
['#8', '@', '557,190:', '19x17']
['#9', '@', '445,84:', '22x24']
['#10', '@', '527,900:', '28x12']
['#11', '@', '48,71:', '20x17']
['#12', '@', '644,603:', '29x16']
['#13', '@', '786,478:', '19x10']
['#14', '@', '40,483:', '14x15']
['#15', '@', '683,475:', '22x13']
['#16', '@', '173,683:', '10x10']
['#17', '@', '862,778:', '12x29']
['#18', '@', '169,513:', '20x13']
['#19', '@', '151,719:', '28x13']
['#20', '@', '49,342:', '15x29']
['#21', '@', '678,900:', '13x29']
['#22', '@', '97,522:', '6x16']
['#23', '@', '888,500:', '11x21']
['#24', '@', '781,576:', '12x22']
['#25', '@', '122,367:', '28x18']
['#26', '@', '625,149:', '22x27']
['#27', '@', '668,803:', '15x11']
['#28', '@', '822,317:', '26x15']
['#29', '@', '685,945:', '19x11']
['#30', '@', '786,296:', '13x18']
['#31', '@', '848,839:', '15x16']
['#32', '@', '663,448:', '28x24']
['#33', '@', '941,785:', '13x24']
['#34', '@', '579,902:', '26x11']
['#35', '@', '343,206:', '19x11']Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 29, in <module>
    print(claim)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 41, in <module>
    antal = fabric[patch[2]]
TypeError: 'int' object is not subscriptable
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
patch: 0
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 42, in <module>
    antal = fabric.index[patch[2]]
TypeError: 'int' object is not subscriptable
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
patch: 0
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 43, in <module>
    fabric[patch][2] = antal + 1
TypeError: 'tuple' object does not support item assignment
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 45, in <module>
    fabric[patch][2] = antal + 1
TypeError: 'tuple' object does not support item assignment
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================

=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
#1 of 1259
#2 of 1259
#3 of 1259
#4 of 1259
#5 of 1259
#6 of 1259
#7 of 1259
#8 of 1259
#9 of 1259
#10 of 1259
#11 of 1259
#12 of 1259
#13 of 1259
#14 of 1259
#15 of 1259
#16 of 1259
#17 of 1259
#18 of 1259
#19 of 1259
#20 of 1259
#21 of 1259
#22 of 1259
#23 of 1259
#24 of 1259
#25 of 1259
#26 of 1259
#27 of 1259
#28 of 1259
#29 of 1259
#30 of 1259
#31 of 1259
#32 of 1259
#33 of 1259
#34 of 1259
#35 of 1259
#36 of 1259
#37 of 1259
#38 of 1259
#39 of 1259
#40 of 1259
#41 of 1259
#42 of 1259
#43 of 1259
#44 of 1259
#45 of 1259
#46 of 1259
#47 of 1259
#48 of 1259
#49 of 1259
#50 of 1259
#51 of 1259
#52 of 1259
#53 of 1259
#54 of 1259
#55 of 1259
#56 of 1259
#57 of 1259
#58 of 1259
#59 of 1259
#60 of 1259
#61 of 1259
#62 of 1259
#63 of 1259
#64 of 1259
#65 of 1259
#66 of 1259
#67 of 1259
#68 of 1259
#69 of 1259
#70 of 1259
#71 of 1259
#72 of 1259
#73 of 1259
#74 of 1259
#75 of 1259
#76 of 1259
#77 of 1259
#78 of 1259
#79 of 1259
#80 of 1259
#81 of 1259
#82 of 1259
#83 of 1259
#84 of 1259
#85 of 1259
#86 of 1259
#87 of 1259
#88 of 1259
#89 of 1259
#90 of 1259
#91 of 1259
#92 of 1259
#93 of 1259
#94 of 1259
#95 of 1259
#96 of 1259
#97 of 1259
#98 of 1259
#99 of 1259
#100 of 1259
#101 of 1259
#102 of 1259
#103 of 1259
#104 of 1259
#105 of 1259
#106 of 1259
#107 of 1259
#108 of 1259
#109 of 1259
#110 of 1259
#111 of 1259
#112 of 1259
#113 of 1259
#114 of 1259
#115 of 1259
#116 of 1259
#117 of 1259
#118 of 1259
#119 of 1259
#120 of 1259
#121 of 1259
#122 of 1259
#123 of 1259
#124 of 1259
#125 of 1259
#126 of 1259
#127 of 1259
#128 of 1259
#129 of 1259
#130 of 1259
#131 of 1259
#132 of 1259
#133 of 1259
#134 of 1259
#135 of 1259
#136 of 1259
#137 of 1259
#138 of 1259
#139 of 1259
#140 of 1259
#141 of 1259
#142 of 1259
#143 of 1259
#144 of 1259
#145 of 1259
#146 of 1259
#147 of 1259
#148 of 1259
#149 of 1259
#150 of 1259
#151 of 1259
#152 of 1259
#153 of 1259
#154 of 1259
#155 of 1259
#156 of 1259
#157 of 1259
#158 of 1259
#159 of 1259
#160 of 1259
#161 of 1259
#162 of 1259
#163 of 1259
#164 of 1259
#165 of 1259
#166 of 1259
#167 of 1259
#168 of 1259
#169 of 1259
#170 of 1259
#171 of 1259
#172 of 1259
#173 of 1259
#174 of 1259
#175 of 1259
#176 of 1259
#177 of 1259
#178 of 1259
#179 of 1259
#180 of 1259
#181 of 1259
#182 of 1259
#183 of 1259
#184 of 1259
#185 of 1259
#186 of 1259
#187 of 1259
#188 of 1259
#189 of 1259
#190 of 1259
#191 of 1259
#192 of 1259
#193 of 1259
#194 of 1259
#195 of 1259
#196 of 1259
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 40, in <module>
    fabric = fabric + [(jx, ky, 1)]
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
#1 of 1259 fabric size 0
#2 of 1259 fabric size 448
#3 of 1259 fabric size 885
#4 of 1259 fabric size 1395
#5 of 1259 fabric size 2055
#6 of 1259 fabric size 2805
#7 of 1259 fabric size 3117
#8 of 1259 fabric size 3600
#9 of 1259 fabric size 3960
#10 of 1259 fabric size 4535
#11 of 1259 fabric size 4912
#12 of 1259 fabric size 5290
#13 of 1259 fabric size 5800
#14 of 1259 fabric size 6020
#15 of 1259 fabric size 6260
#16 of 1259 fabric size 6582
#17 of 1259 fabric size 6703
#18 of 1259 fabric size 7093
#19 of 1259 fabric size 7387
#20 of 1259 fabric size 7793
#21 of 1259 fabric size 8273
#22 of 1259 fabric size 8693
#23 of 1259 fabric size 8812
#24 of 1259 fabric size 9076
#25 of 1259 fabric size 9375
#26 of 1259 fabric size 9926
#27 of 1259 fabric size 10570
#28 of 1259 fabric size 10762
#29 of 1259 fabric size 11194
#30 of 1259 fabric size 11434
#31 of 1259 fabric size 11700
#32 of 1259 fabric size 11972
#33 of 1259 fabric size 12697
#34 of 1259 fabric size 13047
#35 of 1259 fabric size 13371
#36 of 1259 fabric size 13611
#37 of 1259 fabric size 13975
#38 of 1259 fabric size 14332
#39 of 1259 fabric size 14817
#40 of 1259 fabric size 15045
#41 of 1259 fabric size 15735
#42 of 1259 fabric size 16058
#43 of 1259 fabric size 16478
#44 of 1259 fabric size 17003
#45 of 1259 fabric size 17549
#46 of 1259 fabric size 17927
#47 of 1259 fabric size 18456
#48 of 1259 fabric size 18741
#49 of 1259 fabric size 19035
#50 of 1259 fabric size 19203
#51 of 1259 fabric size 19511
#52 of 1259 fabric size 19758
#53 of 1259 fabric size 20325
#54 of 1259 fabric size 20469
#55 of 1259 fabric size 20690
#56 of 1259 fabric size 21051
#57 of 1259 fabric size 21357
#58 of 1259 fabric size 22017
#59 of 1259 fabric size 22454
#60 of 1259 fabric size 23182
#61 of 1259 fabric size 23702
#62 of 1259 fabric size 24230
#63 of 1259 fabric size 24672
#64 of 1259 fabric size 24876
#65 of 1259 fabric size 25659
#66 of 1259 fabric size 25932
#67 of 1259 fabric size 26484
#68 of 1259 fabric size 26858
#69 of 1259 fabric size 27023
#70 of 1259 fabric size 27254
#71 of 1259 fabric size 27566
#72 of 1259 fabric size 27956
#73 of 1259 fabric size 28242
#74 of 1259 fabric size 28717
#75 of 1259 fabric size 29471
#76 of 1259 fabric size 29747
#77 of 1259 fabric size 30053
#78 of 1259 fabric size 30263
#79 of 1259 fabric size 30623
#80 of 1259 fabric size 31319
#81 of 1259 fabric size 31571
#82 of 1259 fabric size 32054
#83 of 1259 fabric size 32721
#84 of 1259 fabric size 32942
#85 of 1259 fabric size 33085
#86 of 1259 fabric size 33442
#87 of 1259 fabric size 34090
#88 of 1259 fabric size 34481
#89 of 1259 fabric size 34781
#90 of 1259 fabric size 35145
#91 of 1259 fabric size 35535
#92 of 1259 fabric size 36405
#93 of 1259 fabric size 36789
#94 of 1259 fabric size 37149
#95 of 1259 fabric size 37689
#96 of 1259 fabric size 37821
#97 of 1259 fabric size 38304
#98 of 1259 fabric size 38779
#99 of 1259 fabric size 39283
#100Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 25, in <module>
    print(idnum, "of", len(claims), "fabric size", len(fabric))
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 40, in <module>
    fabric = fabric + [(jx, ky, 1)]
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
(749, 0, 1) 749 2
(749, 0, 1) 749 4
(749, 0, 1) 749 6
(749, 0, 1) 749 8
(749, 0, 1) 749 10
(749, 0, 1) 749 12
(749, 0, 1) 749 14
(749, 0, 1) 749 16
(749, 0, 1) 749 18
(749, 0, 1) 749 20
(749, 0, 1) 749 22
(749, 0, 1) 749 24
(749, 0, 1) 749 26
(749, 0, 1) 749 28
(749, 0, 1) 749 30
(749, 0, 1) 750 0
(749, 0, 1) 750 2
(749, 0, 1) 750 4
(749, 0, 1) 750 6
(749, 0, 1) 750 8
(749, 0, 1) 750 10
(749, 0, 1) 750 12
(749, 0, 1) 750 14
(749, 0, 1) 750 16
(749, 0, 1) 750 18
(749, 0, 1) 750 20
(749, 0, 1) 750 22
(749, 0, 1) 750 24
(749, 0, 1) 750 26
(749, 0, 1) 750 28
(749, 0, 1) 750 30
(749, 0, 1) 751 0
(749, 0, 1) 751 2
(749, 0, 1) 751 4
(749, 0, 1) 751 6
(749, 0, 1) 751 8
(749, 0, 1) 751 10
(749, 0, 1) 751 12
(749, 0, 1) 751 14
(749, 0, 1) 751 16
(749, 0, 1) 751 Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 38, in <module>
    patch = findpatch(jx,ky)
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 15, in findpatch
    print(apa, a, b)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
[(749, 0, 1)]
(749, 0, 1) 749 2
[(749, 0, 1), (749, 2, 1)]
(749, 0, 1) 749 4
[(749, 0, 1), (749, 2, 1), (749, 4, 1)]
(749, 0, 1) 749 6
[(749, 0, 1), (749, 2, 1), (749, 4, 1), (749, 6, 1)]
(749, 0, 1) 749 8
[(749, 0, 1), (749, 2, 1), (749, 4, 1), (749, 6, 1), (749, 8, 1)]
(749, 0, 1) 749 10
[(749, 0, 1), (749, 2, 1), (749, 4, 1), (749, 6, 1), (749, 8, 1), (749, 10, 1)]
(749, 0, 1) 749 12
[(749, 0, 1), (749, 2, 1), (749, 4, 1), (749, 6, 1), (749, 8, 1), (749, 10, 1), (749, 12, 1)]
(749, 0, 1) 749 14
[(749, 0, 1), (749, 2, 1), (749, 4, 1), (749, 6, 1), (749, 8, 1), (749, 10, 1), (749, 12, 1), (749, 14, 1)]
(749, 0, 1) 749 16
[(749, 0, 1), (749, 2, 1), (749, 4, 1), (749, 6, 1), (749, 8, 1), (749, 10, 1), (749, 12, 1), (749, 14, 1), (749, 16, 1)]
(749, 0, 1) 749 18
[(749, 0, 1), (749, 2, 1), (749, 4, 1), (749, 6, 1), (749, 8, 1), (749, 10, 1), (749, 12, 1), (749, 14, 1), (749, 16, 1), (749, 18, 1)]
(749, 0, 1) 749 20
[(749, 0, 1), (749, 2, 1), (749, 4, 1), (749, 6, 1), (749, 8, 1), (749, 10, 1), (749, 12, 1), (749, 14, 1), (749, 16, 1), (749, 18, 1), (749, 20, 1)]
(749, 0, 1) 749 Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 38, in <module>
    patch = findpatch(jx,ky)
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 15, in findpatch
    print(apa, a, b)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1', '@', '749,666:', '27x15']
749 666 27 15
(749, 0, 1) 749 2
(749, 0, 1) 749 4
(749, 0, 1) 749 6
(749, 0, 1) 749 8
(749, 0, 1) 749 10
(749, 0, 1) 749 12
(749, 0, 1) 749 14
(749, 0, 1) 749 16
(749, 0, 1) 749 18
(749, 0, 1) 749 20
(749, 0, 1) 749 22
(749, 0, 1) 749 24
(749, 0, 1) 749 26
(749, 0, 1) 749 28
(749, 0, 1) 749 30
(749, 0, 1) 750 0
(749, 0, 1) 750 2
(749, 0, 1) 750 4
(749, 0, 1) 750Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 38, in <module>
    patch = findpatch(jx,ky)
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 15, in findpatch
    print(apa, a, b)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1', '@', '749,666:', '27x15']
x, y, width, height 749 666 27 15
koord: 749 0
koord: 749 2
(749, 0, 1) 749 2
koord: 749 4
(749, 0, 1) 749 4
koord: 749 6
(749, 0, 1) 749 6
koord: 749 8
(749, 0, 1) 749 8
koord: 749 10
(749, 0, 1) 749 10
koord: 749 12
(749, 0, 1) 749 12
koord: 749 14
(749, 0, 1) 749 14
koord: 749 16
(749, 0, 1) 749 16
koord: 749 18
(749, 0, 1) 749 18
koord: 749 20
(749, 0, 1) 749 20
koord: 749 22
(749, 0, 1) 749 22
koord: 749 24
(749, 0, 1) 749 24
koord: 749 26
(749, 0, 1) 749 26
koord: 749 Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 38, in <module>
    print("koord:", jx, ky)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1', '@', '749,666:', '27x15']
x, y, width, height 749 666 27 15
koord: 749 0
koord: 749 2
(749, 0, 1) 749 2
koord: 749 4
(749, 0, 1) 749 4
koord: 749 6
(749, 0, 1) 749 6
koord: 749 8
(749, 0, 1) 749 8
koord: 749 10
(749, 0, 1) 749 10
koord: 749 12
(749, 0, 1) 749 12
koord: 749 14
(749, 0, 1) 749 14
koord: 749 16
(749, 0, 1) 749 16
koord: 749 18
(749, 0, 1) 749 18
koord: 749 20
(749, 0, 1) 749 20
koord: 749 22
(749, 0, 1) 749 22
koord: 749 24
(749, 0, 1) 749Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 39, in <module>
    patch = findpatch(jx,ky)
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 15, in findpatch
    print(apa, a, b)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1', '@', '749,666:', '27x15']
x, y, width, height 749 666 27 15
koord: 749 0 0 666
koord: 749 2 1 666
(749, 0, 1) 749 2
koord: 749 4 2 666
(749, 0, 1) 749 4
koord: 749 6 3 666
(749, 0, 1) 749 6
koord: 749 8 4 666
(749, 0, 1) 749 8
koord: 749 10 5 666
(749, 0, 1) 749 10
koord: 749 12 6 666
(749, 0, 1) 749 12
koord: 749 14 7 666
(749, 0, 1) 749 14
koord: 749 16 8 666
(749, 0, 1) 749 16
koord: 749 18 9Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 38, in <module>
    print("koord:", jx, ky, k, y)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1', '@', '749,666:', '27x15']
x, y, width, height 749 666 27 15
koord: 749 0 0 0
koord: 749 2 0 1
(749, 0, 1) 749 2
koord: 749 4 0 2
(749, 0, 1) 749 4
koord: 749 6 0 3
(749, 0, 1) 749 6
koord: 749 8 0 4
(749, 0, 1) 749 8
koord: 749 10 0 5
(749, 0, 1) 749 10
koord: 749 12 0 6
(749, 0, 1) 749 12
koord: 749 14 0 7
(749, 0, 1) 749 14
koord: 749 16Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 38, in <module>
    print("koord:", jx, ky, j, k)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
(749, 0, 1) 749 2
(749, 0, 1) 749 4
(749, 0, 1) 749 6
(749, 0, 1) 749 8
(749, 0, 1) 749 10
(749, 0, 1) 749 12
(749, 0, 1) 749 14
(749, 0, 1) 749 16
(749, 0, 1) 749 18
(749, 0, 1) 749 20
(749, 0, 1) 749 22
(749, 0, 1) 749 24
(749, 0, 1) 749 26
(749, 0, 1) 749 28
(749, 0, 1) 749 30
(749, 0, 1) 750 0
(749, 0, 1) 750 2
(749, 0, 1) 750 4
(749, 0, 1) 750 6
(749, 0, 1) 750 8
(749, 0, 1) 750 10
(749, 0, 1) 750 12
(749, 0, 1) 750 14
(749, 0, 1) 750 16
(749, 0, 1) 750 18
(749, 0, 1) 750 20
(749, 0, 1) 750 22
(749, 0, 1) 750 24
(749, 0, 1) 750 26
(749, 0, 1) 750 28
(749, 0, 1) 750 30
(749, 0, 1) 751 0
(749, 0, 1) 751 2
(749, 0, 1) 751 4
(749, 0, 1) 751 6
(749, 0, 1) 751 8
(749, 0, 1) 751 10
(749, 0, 1) 751 12
(749, 0, 1) 751 14
(749, 0, 1) 751 16
(749, 0, 1) 751 18
(749, 0, 1) 751 20
(749, 0, 1) 751 22
(749, 0, 1) 751 24
(749, 0, 1) 751 26
(749, 0, 1) 751 28
(749, 0, 1) 751 30
(749, 0, 1) 752 0
(749, 0, 1) 752 2
(749, 0, 1) 752 4
(749, 0, 1) 752 6
(749, 0, 1) 752 8
(749, 0, 1) 752 10
(749, 0, 1) 752 12
(749, 0, 1) 752 14
(749, 0, 1) 752 16
(749, 0, 1) 752 18
(749, 0, 1) 752 20
(749, 0, 1) 752 22
(749, 0, 1) 752Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 39, in <module>
    patch = findpatch(jx,ky)
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 15, in findpatch
    print(apa, a, b)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
749 666 0 0
749 666 0 1
749 666 0 2
749 666 0 3
749 666 0 4
749 666 0 5
749 666 0 6
749 666 0 7
749 666 0 8
749 666 0 9
749 666 0 10
749 666 0 11
749 666 0 12
749 666 0 13
749 666 0 14
749 666 0 15
749 666 1 0
749 666 1 1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 36, in <module>
    print(x,y,j,k)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
749 666 0 0
koord: 749 0
749 666 0 1
koord: 749 2
749 666 0 2
koord: 749 4
749 666 0 3
koord: 749 6
749 666 0 4
koord: 749 8
749 666 0 5
koord: 749 10
749 666 0 6
koord: 749 12
749 666 0 7
koord: 749 14
749 666 0 8
koord: 749 16
749 666 0 9
koord: 749 18
749Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 36, in <module>
    print(x,y,j,k)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
749 666 0 0
koord: 749 666
749 666 0 1
koord: 749 667
749 666 0 2
koord: 749 668
749 666 0 3
koord: 749 669
749 666 0 4
koord: 749 670
749 666 0 5
koord: 749 671
749 666 0 6
koord: 749 672
749 666 0 7
koord: Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 39, in <module>
    print("koord:", jx, ky)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 42, in <module>
    fabric = fabric + [(jx, ky, 1)]
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 47, in <module>
    print(len(fabric))
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
16
32
48
64
80
96
112
128
144
160
176
192
208
224
240
256
272
288
304
320
336
352
368
384
400
416
432
448
467
486
505
524
543
562
581
600
619
638
657
676
695
714
733
752
771
790
809
828
847
866
885
915
945
975
1005
1035
1065
1095
1125
1155
1185
1215
1245
1275
1305
1335
1365
1395
1425
1455
1485
1515
1545
1575
1605
1635
1665
1695
1725
1755
1785
1815
1845
1875
1905
1935
1965
1995
2025
2055
2080
2105
2130
2155
2180
2205
2230
2255
2280
2305
2330
2355
2380
2405
2430
2455
2480
2505
2530
2555
2580
2605
2630
2655
2680
2705
2730
2755
2780
2805
2831
2857
2883
2909
2935
2961
2987
3013
3039
3065
3091
3117
3140
3163
3186
3209
3232
3255
3278
3301
3324
3347
3370
3393
3416
3439
3462
3485
3508
3531
3554
3577
3600
3618
3636
3654
3672
3690
3708
3726
3744
3762
3780
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 47, in <module>
    print(len(fabric))
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
448
885
1395
2055
2805
3117
3600
3960
4535
4912
5290
5800
6020
6260
6582
6703
7093
7387
7793
8273
8693
8812
9076
9375
9926
10570
10762
11194
11434
11700
11972
12697
13047
13371
13611
13975
14332
14818
15046
15736
16059
16479
17004
17550
17928
18457
18742
19036
19204
19512
19759
20326
20470
20691
21052
21358
22018
22455
23183
23703
24231
24673
24877
25660
25933
26485
26859
27024
27255
27567
27957
28243
28718
29472
29748
30054
30264
30624
31320
31572
32055
32722
32943
33086
33443
34091
34482
34782
35146
35536
36406
36790
37150
37690
37822
38305
38780
39284
39909
40119
40339
40899
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 47, in <module>
    print(len(fabric))
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
448 #1 @ 749,666: 27x15
 of 1259
885 #2 @ 118,560: 22x18
 of 1259
1395 #3 @ 194,731: 16x29
 of 1259
2055 #4 @ 295,407: 21x29
 of 1259
2805 #5 @ 717,30: 29x24
 of 1259
3117 #6 @ 969,722: 11x25
 of 1259
3600 #7 @ 117,596: 20x22
 of 1259
3960 #8 @ 557,190: 19x17
 of 1259
4535 #9 @ 445,84: 22x24
 of 1259
4912 #10 @ 527,900: 28x12
 of 1259
5290 #11 @ 48,71: 20x17
 of 1259
5800 #12 @ 644,603: 29x16
 of 1259
6020 #13 @ 786,478: 19x10
 of 1259
6260 #14 @ 40,483: 14x15
 of 1259
6582 #15 @ 683,475: 22x13
 of 1259
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 47, in <module>
    print(len(fabric), i, "of", len(claims))
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
448 #1 of 1259
885 #2 of 1259
1395 #3 of 1259
2055 #4 of 1259
2805 #5 of 1259
3117 #6 of 1259
3600 #7 of 1259
3960 #8 of 1259
4535 #9 of 1259
4912 #10 of 1259
5290 #11 of 1259
5800 #12 of 1259
6020 #13 of 1259
6260 #14 of 1259
6582 #15 of 1259
6703 #16 of 1259
7093 #17 of 1259
7387 #18 of 1259
7793 #19 of 1259
8273 #20 of 1259
8693 #21 of 1259
8812 #22 of 1259
9076 #23 of 1259
9375 #24 of 1259
9926 #25 of 1259
10570 #26 of 1259
10762 #27 of 1259
11194 #28 of 1259
11434 #29 of 1259
11700 #30 of 1259
11972 #31 of 1259
12697 #32 of 1259
13047 #33 of 1259
13371 #34 of 1259
13611 #35 of 1259
13975 #36 of 1259
14332 #37 of 1259
14818 #38 of 1259
15046 #39 of 1259
15736 #40 of 1259
16059 #41 of 1259
16479 #42 of 1259
17004 #43 of 1259
17550 #44 of 1259
17928 #45 of 1259
18457 #46 of 1259
18742 #47 of 1259
19036 #48 of 1259
19204 #49 of 1259
19512 #50 of 1259
19759 #51 of 1259
20326 #52 of 1259
20470 #53 of 1259
20691 #54 of 1259
21052 #55 of 1259
21358 #56 of 1259
22018 #57 of 1259
22455 #58 of 1259
23183 #59 of 1259
23703 #60 of 1259
24231 #61 of 1259
24673 #62 of 1259
24877 #63 of 1259
25660 #64 of 1259
25933 #65 of 1259
26485 #66 of 1259
26859 #67 of 1259
27024 #68 of 1259
27255 #69 of 1259
27567 #70 of 1259
27957 #71 of 1259
28243 #72 of 1259
28718 #73 of 1259
29472 #74 of 1259
29748 #75 of 1259
30054 #76 of 1259
30264 #77 of 1259
30624 #78 of 1259
31320 #79 of 1259
31572 #80 of 1259
32055 #81 of 1259
32722 #82 of 1259
32943 #83 of 1259
33086 #84 of 1259
33443 #85 of 1259
34091 #86 of 1259
34482 #87 of 1259
34782 #88 of 1259
35146 #89 of 1259
35536 #90 of 1259
36406 #91 of 1259
36790 #92 of 1259
37150 #93 of 1259
37690 #94 of 1259
37822 #95 of 1259
38305 #96 of 1259
38780 #97 of 1259
39284 #98 of 1259
39909 #99 of 1259
40119 #100 of 1259
40339 #101 of 1259
40899 #102 of 1259
41375 #103 of 1259
41765 #104 of 1259
41941 #105 of 1259
42481 #106 of 1259
42943 #107 of 1259
43281 #108 of 1259
44121 #109 of 1259
44289 #110 of 1259
44748 #111 of 1259
45098 #112 of 1259
45421 #113 of 1259
45967 #114 of 1259
46358 #115 of 1259
46589 #116 of 1259
46829 #117 of 1259
47445 #118 of 1259
47733 #119 of 1259
48097 #120 of 1259
48448 #121 of 1259
49289 #122 of 1259
49707 #123 of 1259
50247 #124 of 1259
50907 #125 of 1259
51313 #126 of 1259
52063 #127 of 1259
52513 #128 of 1259
52667 #129 of 1259
53195 #130 of 1259
53569 #131 of 1259
54094 #132 of 1259
54114 #133 of 1259
54534 #134 of 1259
55150 #135 of 1259
55502 #136 of 1259
55678 #137 of 1259
55975 #138 of 1259
56184 #139 of 1259
56393 #140 of 1259
56743 #141 of 1259
57352 #142 of 1259
57380 #143 of 1259
57805 #144 of 1259
58561 #145 of 1259
58813 #146 of 1259
59326 #147 of 1259
59751 #148 of 1259
60108 #149 of 1259
60431 #150 of 1259
60881 #151 of 1259
61211 #152 of 1259
61724 #153 of 1259
62294 #154 of 1259
62882 #155 of 1259
63050 #156 of 1259
63487 #157 of 1259
64037 #158 of 1259
64323 #159 of 1259
65019 #160 of 1259
65456 #161 of 1259
65893 #162 of 1259
66343 #163 of 1259
66629 #164 of 1259
66881 #165 of 1259
67245 #166 of 1259
67620 #167 of 1259
67844 #168 of 1259
68138 #169 of 1259
68786 #170 of 1259
69511 #171 of 1259
70062 #172 of 1259
70722 #173 of 1259
71086 #174 of 1259
71518 #175 of 1259
71638 #176 of 1259
71803 #177 of 1259
72287 #178 of 1259
72755 #179 of 1259
73008 #180 of 1259
73216 #181 of 1259
73492 #182 of 1259
73708 #183 of 1259
73932 #184 of 1259
74512 #185 of 1259
74944 #186 of 1259
75408 #187 of 1259
76278 #188 of 1259
76899 #189 of 1259
77109 #190 of 1259
77784 #191 of 1259
78036 #192 of 1259
78344 #193 of 1259
78718 #194 of 1259
79018 #195 of 1259
79438 #196 of 1259
79806 #197 of 1259
80373 #198 of 1259
80757 #199 of 1259
81163 #200 of 1259
81540 #201 of 1259
82242 #202 of 1259
82424 #203 of 1259
82688 #204 of 1259
83012 #205 of 1259
83633 #206 of 1259
84473 #207 of 1259
85002 #208 of 1259
85632 #209 of 1259
86360 #210 of 1259
86404 #211 of 1259
86778 #212 of 1259
86934 #213 of 1259
87559 #214 of 1259
87883 #215 of 1259
88267 #216 of 1259
88673 #217 of 1259
89485 #218 of 1259

=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1 @ 749,666: 27x15\n', '#2 @ 118,560: 22x18\n', '#3 @ 194,731: 16x29\n', '#4 @ 295,407: 21x29\n', '#5 @ 717,30: 29x24\n', '#6 @ 969,722: 11x25\n', '#7 @ 117,596: 20x22\n', '#8 @ 557,190: 19x17\n', '#9 @ 445,84: 22x24\n', '#10 @ 527,900: 28x12\n', '#11 @ 48,71: 20x17\n', '#12 @ 644,603: 29x16\n', '#13 @ 786,478: 19x10\n', '#14 @ 40,483: 14x15\n', '#15 @ 683,475: 22x13\n', '#16 @ 173,683: 10x10\n', '#17 @ 862,778: 12x29\n', '#18 @ 169,513: 20x13\n', '#19 @ 151,719: 28x13\n', '#20 @ 49,342: 15x29\n', '#21 @ 678,900: 13x29\n', '#22 @ 97,522: 6x16\n', '#23 @ 888,500: 11x21\n', '#24 @ 781,576: 12x22\n', '#25 @ 122,367: 28x18\n', '#26 @ 625,149: 22x27\n', '#27 @ 668,803: 15x11\n', '#28 @ 822,317: 26x15\n', '#29 @ 685,945: 19x11\n', '#30 @ 786,296: 13x18\n', '#31 @ 848,839: 15x16\n', '#32 @ 663,448: 28x24\n', '#33 @ 941,785: 13x24\n', '#34 @ 579,902: 26x11\n', '#35 @ 343,206: 19x11\n', '#36 @ 301,174: 27x12\n', '#37 @ 539,52: 16x20\n', '#38 @ 740,676: 17x26\n', '#39 @ 771,191: 11x18\n', '#40 @ 80,930: 22x29\n', '#41 @ 402,979: 16x18\n', '#42 @ 978,896: 14x27\n', '#43 @ 299,185: 20x24\n', '#44 @ 885,32: 20x25\n', '#45 @ 28,376: 13x26\n', '#46 @ 103,323: 22x22\n', '#47 @ 495,160: 18x14\n', '#48 @ 318,567: 13x20\n', '#49 @ 206,353: 11x13\n', '#50 @ 763,100: 21x13\n', '#51 @ 852,973: 18x12\n', '#52 @ 50,249: 20x26\n', '#53 @ 329,579: 11x11\n', '#54 @ 546,884: 12x16\n', '#55 @ 425,681: 18x18\n', '#56 @ 152,610: 17x16\n', '#57 @ 802,735: 29x21\n', '#58 @ 113,567: 22x18\n', '#59 @ 361,386: 27x25\n', '#60 @ 921,9: 25x19\n', '#61 @ 68,903: 23x21\n', '#62 @ 368,599: 16x25\n', '#63 @ 553,182: 11x16\n', '#64 @ 391,822: 26x28\n', '#65 @ 589,207: 12x20\n', '#66 @ 188,348: 23x22\n', '#67 @ 499,43: 16x21\n', '#68 @ 849,175: 14x10\n', '#69 @ 650,527: 20x10\n', '#70 @ 108,72: 11x25\n', '#71 @ 685,124: 12x29\n', '#72 @ 364,370: 25x10\n', '#73 @ 578,357: 18x24\n', '#74 @ 514,961: 25x28\n', '#75 @ 376,981: 22x11\n', '#76 @ 96,496: 16x17\n', '#77 @ 682,6: 14x13\n', '#78 @ 191,804: 17x19\n', '#79 @ 202,556: 28x23\n', '#80 @ 390,525: 11x20\n', '#81 @ 836,610: 22x20\n', '#82 @ 566,79: 22x28\n', '#83 @ 441,68: 16x12\n', '#84 @ 270,609: 12x10\n', '#85 @ 520,392: 20x16\n', '#86 @ 104,416: 23x26\n', '#87 @ 104,763: 22x16\n', '#88 @ 669,877: 11x24\n', '#89 @ 277,658: 27x12\n', '#90 @ 909,134: 25x14\n', '#91 @ 414,925: 29x28\n', '#92 @ 304,618: 15x23\n', '#93 @ 838,975: 23x14\n', '#94 @ 761,377: 19x26\n', '#95 @ 923,178: 11x10\n', '#96 @ 901,945: 22x20\n', '#97 @ 179,325: 18x24\n', '#98 @ 877,792: 27x17\n', '#99 @ 870,233: 24x24\n', '#100 @ 945,390: 13x14\n', '#101 @ 697,868: 10x19\n', '#102 @ 823,154: 19x27\n', '#103 @ 444,900: 16x27\n', '#104 @ 538,45: 25x14\n', '#105 @ 90,423: 15x10\n', '#106 @ 425,822: 26x19\n', '#107 @ 968,167: 20x21\n', '#108 @ 721,420: 25x12\n', '#109 @ 516,30: 27x29\n', '#110 @ 316,565: 11x13\n', '#111 @ 379,278: 26x16\n', '#112 @ 940,770: 13x24\n', '#113 @ 429,913: 16x18\n', '#114 @ 278,174: 25x20\n', '#115 @ 659,232: 22x16\n', '#116 @ 482,36: 20x10\n', '#117 @ 162,410: 19x11\n', '#118 @ 160,949: 21x27\n', '#119 @ 48,268: 15x17\n', '#120 @ 50,512: 12x27\n', '#121 @ 215,330: 26x12\n', '#122 @ 504,400: 28x28\n', '#123 @ 129,529: 21x18\n', '#124 @ 160,370: 26x19\n', '#125 @ 955,275: 21x29\n', '#126 @ 576,320: 13x28\n', '#127 @ 492,955: 24x29\n', '#128 @ 111,918: 24x17\n', '#129 @ 654,910: 13x10\n', '#130 @ 390,607: 21x23\n', '#131 @ 498,581: 16x21\n', '#132 @ 1,126: 20x24\n', '#133 @ 108,809: 4x3\n', '#134 @ 600,572: 13x29\n', '#135 @ 67,717: 21x27\n', '#136 @ 387,392: 21x15\n', '#137 @ 510,44: 10x15\n', '#138 @ 940,137: 10x26\n', '#139 @ 375,506: 18x10\n', '#140 @ 825,669: 18x10\n', '#141 @ 528,338: 24x13\n', '#142 @ 657,492: 20x28\n', '#143 @ 659,677: 3x6\n', '#144 @ 885,878: 16x24\n', '#145 @ 310,214: 26x27\n', '#146 @ 947,823: 13x17\n', '#147 @ 10,222: 18x26\n', '#148 @ 56,575: 24x16\n', '#149 @ 646,914: 16x20\n', '#150 @ 313,512: 18x16\n', '#151 @ 321,622: 24x17\n', '#152 @ 937,195: 21x14\n', '#153 @ 386,23: 18x26\n', '#154 @ 922,148: 18x29\n', '#155 @ 126,45: 20x27\n', '#156 @ 590,14: 13x11\n', '#157 @ 538,739: 22x18\n', '#158 @ 497,171: 24x21\n', '#159 @ 824,484: 12x21\n', '#160 @ 329,843: 23x28\n', '#161 @ 163,179: 22x18\n', '#162 @ 160,98: 18x22\n', '#163 @ 664,1: 24x17\n', '#164 @ 414,502: 21x12\n', '#165 @ 15,792: 11x20\n', '#166 @ 454,169: 12x27\n', '#167 @ 260,924: 24x14\n', '#168 @ 565,223: 13x15\n', '#169 @ 247,165: 20x13\n', '#170 @ 72,41: 23x26\n', '#171 @ 640,265: 28x24\n', '#172 @ 150,867: 28x18\n', '#173 @ 478,577: 21x29\n', '#174 @ 654,695: 13x25\n', '#175 @ 426,674: 23x17\n', '#176 @ 664,290: 19x5\n', '#177 @ 427,509: 10x14\n', '#178 @ 349,382: 21x21\n', '#179 @ 416,582: 17x25\n', '#180 @ 340,270: 22x10\n', '#181 @ 835,750: 15x12\n', '#182 @ 944,548: 11x22\n', '#183 @ 590,509: 17x11\n', '#184 @ 378,224: 13x15\n', '#185 @ 682,283: 28x19\n', '#186 @ 607,82: 26x15\n', '#187 @ 604,468: 28x15\n', '#188 @ 719,127: 29x28\n', '#189 @ 319,15: 22x26\n', '#190 @ 119,285: 13x14\n', '#191 @ 235,512: 26x24\n', '#192 @ 191,473: 11x20\n', '#193 @ 0,840: 10x27\n', '#194 @ 617,528: 21x16\n', '#195 @ 206,474: 24x11\n', '#196 @ 285,197: 20x19\n', '#197 @ 347,352: 15x22\n', '#198 @ 412,735: 26x20\n', '#199 @ 372,931: 23x15\n', '#200 @ 461,497: 13x28\n', '#201 @ 689,943: 28x12\n', '#202 @ 621,93: 26x25\n', '#203 @ 897,795: 12x13\n', '#204 @ 652,648: 11x21\n', '#205 @ 259,367: 11x26\n', '#206 @ 43,187: 26x22\n', '#207 @ 170,194: 27x29\n', '#208 @ 539,760: 22x22\n', '#209 @ 404,291: 20x29\n', '#210 @ 782,419: 25x27\n', '#211 @ 613,61: 3x10\n', '#212 @ 821,325: 16x21\n', '#213 @ 65,689: 12x11\n', '#214 @ 303,270: 24x24\n', '#215 @ 836,463: 17x17\n', '#216 @ 1,643: 23x15\n', '#217 @ 953,540: 13x28\n', '#218 @ 140,530: 28x27\n', '#219 @ 625,447: 12x13\n', '#220 @ 492,638: 26x21\n', '#221 @ 156,711: 10x12\n', '#222 @ 35,699: 17x27\n', '#223 @ 301,187: 14x24\n', '#224 @ 805,618: 23x11\n', '#225 @ 550,881: 11x21\n', '#226 @ 209,536: 24x20\n', '#227 @ 181,331: 14x26\n', '#228 @ 849,922: 15x19\n', '#229 @ 100,832: 12x18\n', '#230 @ 224,410: 6x6\n', '#231 @ 437,952: 17x25\n', '#232 @ 299,494: 16x22\n', '#233 @ 37,9: 14x19\n', '#234 @ 177,563: 22x18\n', '#235 @ 152,230: 17x11\n', '#236 @ 18,250: 16x28\n', '#237 @ 759,373: 28x24\n', '#238 @ 202,724: 24x18\n', '#239 @ 291,769: 10x12\n', '#240 @ 816,908: 27x21\n', '#241 @ 228,198: 11x18\n', '#242 @ 164,233: 27x11\n', '#243 @ 957,624: 27x24\n', '#244 @ 840,726: 29x24\n', '#245 @ 4,797: 24x12\n', '#246 @ 172,879: 15x17\n', '#247 @ 972,905: 14x27\n', '#248 @ 674,845: 10x15\n', '#249 @ 846,573: 21x21\n', '#250 @ 806,277: 20x29\n', '#251 @ 812,900: 22x12\n', '#252 @ 147,361: 24x20\n', '#253 @ 865,723: 18x18\n', '#254 @ 416,125: 21x22\n', '#255 @ 899,831: 13x18\n', '#256 @ 570,189: 20x21\n', '#257 @ 302,498: 15x28\n', '#258 @ 360,65: 15x14\n', '#259 @ 178,394: 18x25\n', '#260 @ 543,744: 13x24\n', '#261 @ 746,590: 23x12\n', '#262 @ 803,586: 26x26\n', '#263 @ 381,559: 26x14\n', '#264 @ 513,391: 14x19\n', '#265 @ 647,20: 17x21\n', '#266 @ 611,53: 11x26\n', '#267 @ 60,387: 22x21\n', '#268 @ 118,142: 19x11\n', '#269 @ 550,816: 25x19\n', '#270 @ 249,538: 24x29\n', '#271 @ 423,966: 20x13\n', '#272 @ 921,676: 20x12\n', '#273 @ 238,145: 14x12\n', '#274 @ 278,650: 24x24\n', '#275 @ 629,561: 23x15\n', '#276 @ 98,784: 11x12\n', '#277 @ 281,169: 18x29\n', '#278 @ 929,427: 29x19\n', '#279 @ 164,384: 20x12\n', '#280 @ 145,46: 28x26\n', '#281 @ 717,115: 20x11\n', '#282 @ 929,798: 25x11\n', '#283 @ 275,457: 21x12\n', '#284 @ 898,437: 16x17\n', '#285 @ 466,643: 20x16\n', '#286 @ 744,930: 22x11\n', '#287 @ 857,719: 26x20\n', '#288 @ 860,527: 17x21\n', '#289 @ 212,530: 18x27\n', '#290 @ 328,630: 25x10\n', '#291 @ 476,7: 23x29\n', '#292 @ 787,796: 22x12\n', '#293 @ 18,243: 26x10\n', '#294 @ 389,25: 21x15\n', '#295 @ 687,942: 25x10\n', '#296 @ 380,626: 13x11\n', '#297 @ 357,559: 15x29\n', '#298 @ 1,849: 25x14\n', '#299 @ 457,819: 13x21\n', '#300 @ 719,52: 20x25\n', '#301 @ 895,473: 10x22\n', '#302 @ 301,196: 11x15\n', '#303 @ 432,392: 25x22\n', '#304 @ 591,11: 25x25\n', '#305 @ 101,628: 29x14\n', '#306 @ 322,860: 10x10\n', '#307 @ 300,754: 5x5\n', '#308 @ 437,297: 29x21\n', '#309 @ 451,518: 24x16\n', '#310 @ 649,518: 22x15\n', '#311 @ 558,368: 27x20\n', '#312 @ 432,928: 17x25\n', '#313 @ 784,483: 22x23\n', '#314 @ 316,351: 23x21\n', '#315 @ 10,374: 20x20\n', '#316 @ 321,278: 22x10\n', '#317 @ 524,808: 21x17\n', '#318 @ 389,977: 15x10\n', '#319 @ 102,804: 20x19\n', '#320 @ 17,868: 19x15\n', '#321 @ 303,198: 16x11\n', '#322 @ 872,72: 20x10\n', '#323 @ 331,126: 21x27\n', '#324 @ 137,462: 19x23\n', '#325 @ 170,318: 21x29\n', '#326 @ 268,836: 19x10\n', '#327 @ 390,961: 13x23\n', '#328 @ 161,296: 10x29\n', '#329 @ 204,722: 18x20\n', '#330 @ 249,689: 11x11\n', '#331 @ 912,153: 20x29\n', '#332 @ 66,730: 10x15\n', '#333 @ 87,63: 29x14\n', '#334 @ 745,390: 19x20\n', '#335 @ 105,304: 14x12\n', '#336 @ 833,313: 29x12\n', '#337 @ 451,852: 27x17\n', '#338 @ 0,640: 25x14\n', '#339 @ 204,256: 21x13\n', '#340 @ 663,493: 15x18\n', '#341 @ 35,222: 22x26\n', '#342 @ 326,17: 21x14\n', '#343 @ 670,801: 18x11\n', '#344 @ 902,248: 12x21\n', '#345 @ 730,584: 19x13\n', '#346 @ 387,214: 20x25\n', '#347 @ 298,933: 25x12\n', '#348 @ 242,815: 19x21\n', '#349 @ 62,556: 27x28\n', '#350 @ 652,594: 20x10\n', '#351 @ 250,564: 25x28\n', '#352 @ 206,348: 24x14\n', '#353 @ 232,167: 21x11\n', '#354 @ 478,282: 26x13\n', '#355 @ 268,556: 18x13\n', '#356 @ 656,673: 11x21\n', '#357 @ 631,753: 23x29\n', '#358 @ 311,276: 12x27\n', '#359 @ 899,131: 23x11\n', '#360 @ 940,134: 26x28\n', '#361 @ 345,407: 20x16\n', '#362 @ 816,301: 19x12\n', '#363 @ 844,773: 17x23\n', '#364 @ 850,494: 15x28\n', '#365 @ 967,366: 17x19\n', '#366 @ 549,894: 11x10\n', '#367 @ 318,398: 28x21\n', '#368 @ 9,394: 24x15\n', '#369 @ 725,304: 11x27\n', '#370 @ 829,266: 13x12\n', '#371 @ 880,136: 25x21\n', '#372 @ 166,871: 19x10\n', '#373 @ 210,229: 14x18\n', '#374 @ 351,364: 17x13\n', '#375 @ 182,37: 23x21\n', '#376 @ 675,798: 12x14\n', '#377 @ 809,180: 16x19\n', '#378 @ 488,465: 15x10\n', '#379 @ 452,314: 29x24\n', '#380 @ 501,528: 20x23\n', '#381 @ 299,752: 13x15\n', '#382 @ 783,579: 22x22\n', '#383 @ 579,641: 12x23\n', '#384 @ 904,948: 17x16\n', '#385 @ 812,580: 10x27\n', '#386 @ 117,929: 11x14\n', '#387 @ 129,127: 28x20\n', '#388 @ 714,740: 25x22\n', '#389 @ 732,307: 26x11\n', '#390 @ 885,415: 15x18\n', '#391 @ 45,406: 28x13\n', '#392 @ 356,360: 29x26\n', '#393 @ 630,285: 20x28\n', '#394 @ 854,831: 14x19\n', '#395 @ 451,819: 26x24\n', '#396 @ 424,435: 22x24\n', '#397 @ 243,682: 20x13\n', '#398 @ 284,466: 22x16\n', '#399 @ 605,25: 25x11\n', '#400 @ 959,643: 24x12\n', '#401 @ 140,504: 23x17\n', '#402 @ 6,234: 16x25\n', '#403 @ 872,805: 14x13\n', '#404 @ 466,632: 14x19\n', '#405 @ 944,484: 17x16\n', '#406 @ 619,507: 10x27\n', '#407 @ 8,551: 28x26\n', '#408 @ 435,931: 8x10\n', '#409 @ 901,123: 21x25\n', '#410 @ 55,375: 10x19\n', '#411 @ 424,921: 10x11\n', '#412 @ 822,618: 28x17\n', '#413 @ 823,948: 15x25\n', '#414 @ 580,893: 6x18\n', '#415 @ 597,892: 14x26\n', '#416 @ 615,582: 27x24\n', '#417 @ 52,916: 20x11\n', '#418 @ 679,329: 22x14\n', '#419 @ 32,136: 20x12\n', '#420 @ 921,367: 27x21\n', '#421 @ 292,100: 23x11\n', '#422 @ 508,353: 13x13\n', '#423 @ 376,31: 24x11\n', '#424 @ 718,390: 26x24\n', '#425 @ 429,526: 26x26\n', '#426 @ 406,540: 17x19\n', '#427 @ 144,36: 22x25\n', '#428 @ 218,974: 18x24\n', '#429 @ 742,592: 12x22\n', '#430 @ 934,39: 15x10\n', '#431 @ 638,445: 21x14\n', '#432 @ 944,193: 24x23\n', '#433 @ 825,961: 17x22\n', '#434 @ 235,427: 23x14\n', '#435 @ 661,461: 29x26\n', '#436 @ 715,33: 29x11\n', '#437 @ 728,939: 21x10\n', '#438 @ 312,498: 27x28\n', '#439 @ 224,517: 24x21\n', '#440 @ 670,307: 22x16\n', '#441 @ 194,703: 15x14\n', '#442 @ 117,957: 17x20\n', '#443 @ 884,102: 20x12\n', '#444 @ 438,183: 18x17\n', '#445 @ 178,907: 28x23\n', '#446 @ 235,694: 14x28\n', '#447 @ 61,245: 25x12\n', '#448 @ 289,54: 15x23\n', '#449 @ 373,310: 17x13\n', '#450 @ 425,313: 28x15\n', '#451 @ 298,750: 11x14\n', '#452 @ 916,779: 27x28\n', '#453 @ 373,824: 17x24\n', '#454 @ 503,926: 16x16\n', '#455 @ 549,166: 18x28\n', '#456 @ 723,366: 14x20\n', '#457 @ 904,798: 18x10\n', '#458 @ 177,165: 13x24\n', '#459 @ 353,128: 12x29\n', '#460 @ 289,714: 14x21\n', '#461 @ 471,276: 17x23\n', '#462 @ 812,660: 14x26\n', '#463 @ 239,890: 10x21\n', '#464 @ 89,374: 24x12\n', '#465 @ 128,566: 11x19\n', '#466 @ 454,272: 12x11\n', '#467 @ 736,285: 29x28\n', '#468 @ 27,621: 20x21\n', '#469 @ 194,257: 26x17\n', '#470 @ 305,347: 25x16\n', '#471 @ 602,684: 21x15\n', '#472 @ 182,38: 28x29\n', '#473 @ 540,792: 22x28\n', '#474 @ 313,867: 23x10\n', '#475 @ 163,692: 16x23\n', '#476 @ 348,949: 25x10\n', '#477 @ 890,473: 18x21\n', '#478 @ 35,904: 24x15\n', '#479 @ 861,310: 19x11\n', '#480 @ 24,242: 17x29\n', '#481 @ 314,433: 28x14\n', '#482 @ 498,914: 10x29\n', '#483 @ 556,58: 15x22\n', '#484 @ 960,92: 11x29\n', '#485 @ 375,7: 27x16\n', '#486 @ 871,553: 20x28\n', '#487 @ 289,167: 11x24\n', '#488 @ 312,699: 10x29\n', '#489 @ 584,487: 16x23\n', '#490 @ 299,574: 21x19\n', '#491 @ 354,616: 17x25\n', '#492 @ 675,516: 11x5\n', '#493 @ 847,671: 11x18\n', '#494 @ 960,161: 28x29\n', '#495 @ 910,246: 19x14\n', '#496 @ 448,818: 13x20\n', '#497 @ 288,167: 16x25\n', '#498 @ 845,436: 18x18\n', '#499 @ 197,351: 13x18\n', '#500 @ 882,410: 13x16\n', '#501 @ 372,301: 25x28\n', '#502 @ 423,927: 21x10\n', '#503 @ 423,447: 17x24\n', '#504 @ 797,895: 20x20\n', '#505 @ 769,136: 22x10\n', '#506 @ 811,269: 20x26\n', '#507 @ 837,983: 19x12\n', '#508 @ 571,121: 12x23\n', '#509 @ 904,472: 13x11\n', '#510 @ 610,565: 20x10\n', '#511 @ 335,464: 23x14\n', '#512 @ 550,206: 22x16\n', '#513 @ 452,845: 23x20\n', '#514 @ 410,945: 18x16\n', '#515 @ 943,804: 19x28\n', '#516 @ 14,472: 26x21\n', '#517 @ 12,983: 16x13\n', '#518 @ 110,757: 28x19\n', '#519 @ 373,292: 24x22\n', '#520 @ 886,833: 26x25\n', '#521 @ 980,663: 13x19\n', '#522 @ 847,842: 29x14\n', '#523 @ 803,520: 11x26\n', '#524 @ 510,276: 15x15\n', '#525 @ 542,50: 28x26\n', '#526 @ 830,313: 10x28\n', '#527 @ 941,514: 13x20\n', '#528 @ 269,385: 11x20\n', '#529 @ 841,752: 28x26\n', '#530 @ 650,602: 23x21\n', '#531 @ 536,201: 24x13\n', '#532 @ 591,62: 18x20\n', '#533 @ 975,955: 20x23\n', '#534 @ 675,8: 18x17\n', '#535 @ 165,431: 27x16\n', '#536 @ 621,191: 18x17\n', '#537 @ 876,259: 24x23\n', '#538 @ 194,571: 24x15\n', '#539 @ 821,913: 24x29\n', '#540 @ 538,203: 11x8\n', '#541 @ 479,960: 21x17\n', '#542 @ 488,598: 15x13\n', '#543 @ 234,408: 21x15\n', '#544 @ 114,229: 24x12\n', '#545 @ 903,17: 13x12\n', '#546 @ 360,877: 11x16\n', '#547 @ 327,146: 11x27\n', '#548 @ 904,439: 11x25\n', '#549 @ 38,180: 16x27\n', '#550 @ 495,591: 26x12\n', '#551 @ 376,26: 29x14\n', '#552 @ 111,325: 12x16\n', '#553 @ 303,638: 27x17\n', '#554 @ 755,890: 17x11\n', '#555 @ 883,909: 11x16\n', '#556 @ 897,264: 10x17\n', '#557 @ 766,888: 22x15\n', '#558 @ 217,394: 19x28\n', '#559 @ 55,747: 11x25\n', '#560 @ 753,381: 19x24\n', '#561 @ 584,647: 23x19\n', '#562 @ 922,745: 21x29\n', '#563 @ 902,319: 24x11\n', '#564 @ 369,320: 13x19\n', '#565 @ 373,371: 12x16\n', '#566 @ 547,442: 16x28\n', '#567 @ 579,496: 27x23\n', '#568 @ 494,917: 17x17\n', '#569 @ 323,377: 20x16\n', '#570 @ 887,666: 24x25\n', '#571 @ 394,268: 23x26\n', '#572 @ 255,113: 17x28\n', '#573 @ 838,788: 19x14\n', '#574 @ 933,145: 14x16\n', '#575 @ 159,468: 26x19\n', '#576 @ 434,179: 12x19\n', '#577 @ 44,472: 27x17\n', '#578 @ 774,563: 24x27\n', '#579 @ 35,693: 28x14\n', '#580 @ 411,667: 21x10\n', '#581 @ 524,732: 23x12\n', '#582 @ 451,173: 25x12\n', '#583 @ 946,642: 17x20\n', '#584 @ 8,345: 25x29\n', '#585 @ 901,143: 29x12\n', '#586 @ 202,840: 14x10\n', '#587 @ 631,970: 21x17\n', '#588 @ 885,685: 14x12\n', '#589 @ 410,522: 24x27\n', '#590 @ 58,517: 25x28\n', '#591 @ 85,1: 22x20\n', '#592 @ 465,913: 29x22\n', '#593 @ 807,498: 11x29\n', '#594 @ 194,208: 14x18\n', '#595 @ 666,835: 16x22\n', '#596 @ 971,649: 13x18\n', '#597 @ 428,231: 22x22\n', '#598 @ 575,667: 18x27\n', '#599 @ 192,265: 18x15\n', '#600 @ 297,387: 22x24\n', '#601 @ 500,185: 14x17\n', '#602 @ 440,937: 20x25\n', '#603 @ 636,565: 10x4\n', '#604 @ 356,290: 20x11\n', '#605 @ 246,887: 19x12\n', '#606 @ 835,307: 18x21\n', '#607 @ 624,431: 17x26\n', '#608 @ 325,620: 25x14\n', '#609 @ 266,631: 27x10\n', '#610 @ 195,601: 13x24\n', '#611 @ 762,406: 6x17\n', '#612 @ 431,949: 18x14\n', '#613 @ 267,555: 24x19\n', '#614 @ 856,787: 28x13\n', '#615 @ 175,191: 20x12\n', '#616 @ 598,7: 21x26\n', '#617 @ 183,435: 12x17\n', '#618 @ 419,542: 17x20\n', '#619 @ 343,124: 15x15\n', '#620 @ 345,402: 17x26\n', '#621 @ 70,64: 12x13\n', '#622 @ 911,723: 3x4\n', '#623 @ 593,56: 13x12\n', '#624 @ 474,928: 18x26\n', '#625 @ 195,612: 14x27\n', '#626 @ 200,249: 22x17\n', '#627 @ 515,717: 13x29\n', '#628 @ 324,342: 12x18\n', '#629 @ 252,509: 24x19\n', '#630 @ 796,789: 11x12\n', '#631 @ 270,579: 15x14\n', '#632 @ 913,817: 16x17\n', '#633 @ 235,326: 27x21\n', '#634 @ 199,656: 17x20\n', '#635 @ 11,538: 16x18\n', '#636 @ 40,630: 15x21\n', '#637 @ 918,819: 6x12\n', '#638 @ 319,952: 18x13\n', '#639 @ 552,558: 24x29\n', '#640 @ 129,817: 28x22\n', '#641 @ 443,428: 11x13\n', '#642 @ 86,281: 14x10\n', '#643 @ 944,86: 14x25\n', '#644 @ 309,583: 21x25\n', '#645 @ 423,433: 27x12\n', '#646 @ 10,196: 10x17\n', '#647 @ 385,878: 10x24\n', '#648 @ 578,890: 14x26\n', '#649 @ 817,478: 13x11\n', '#650 @ 936,254: 23x14\n', '#651 @ 964,466: 24x17\n', '#652 @ 191,477: 26x12\n', '#653 @ 92,730: 23x20\n', '#654 @ 318,840: 22x17\n', '#655 @ 975,277: 25x18\n', '#656 @ 680,62: 14x28\n', '#657 @ 752,146: 27x27\n', '#658 @ 529,411: 20x19\n', '#659 @ 205,785: 12x14\n', '#660 @ 551,562: 28x15\n', '#661 @ 302,190: 29x13\n', '#662 @ 237,421: 27x11\n', '#663 @ 117,845: 22x11\n', '#664 @ 911,851: 12x22\n', '#665 @ 571,142: 15x12\n', '#666 @ 708,389: 22x18\n', '#667 @ 711,310: 20x23\n', '#668 @ 795,289: 13x27\n', '#669 @ 236,712: 16x27\n', '#670 @ 566,343: 10x15\n', '#671 @ 469,818: 27x27\n', '#672 @ 84,914: 21x16\n', '#673 @ 47,621: 10x19\n', '#674 @ 891,103: 10x29\n', '#675 @ 638,296: 15x18\n', '#676 @ 354,415: 29x27\n', '#677 @ 269,519: 14x15\n', '#678 @ 735,337: 24x19\n', '#679 @ 365,980: 17x16\n', '#680 @ 545,35: 20x11\n', '#681 @ 968,640: 22x23\n', '#682 @ 202,660: 7x12\n', '#683 @ 502,189: 22x20\n', '#684 @ 196,797: 20x16\n', '#685 @ 741,103: 27x12\n', '#686 @ 353,671: 11x23\n', '#687 @ 962,626: 27x26\n', '#688 @ 406,831: 20x28\n', '#689 @ 927,860: 26x15\n', '#690 @ 550,880: 26x11\n', '#691 @ 104,503: 18x27\n', '#692 @ 393,882: 16x29\n', '#693 @ 565,607: 10x20\n', '#694 @ 859,823: 19x26\n', '#695 @ 298,126: 10x21\n', '#696 @ 897,331: 20x26\n', '#697 @ 969,955: 21x21\n', '#698 @ 855,730: 16x11\n', '#699 @ 366,598: 18x10\n', '#700 @ 190,794: 23x10\n', '#701 @ 81,903: 17x19\n', '#702 @ 13,383: 10x24\n', '#703 @ 674,941: 20x18\n', '#704 @ 621,966: 23x19\n', '#705 @ 609,463: 26x11\n', '#706 @ 787,441: 26x27\n', '#707 @ 238,397: 29x15\n', '#708 @ 790,815: 10x26\n', '#709 @ 615,906: 22x10\n', '#710 @ 77,647: 11x28\n', '#711 @ 370,548: 29x15\n', '#712 @ 669,514: 21x10\n', '#713 @ 360,957: 28x18\n', '#714 @ 615,493: 16x29\n', '#715 @ 880,901: 26x17\n', '#716 @ 161,446: 12x25\n', '#717 @ 88,2: 18x11\n', '#718 @ 221,237: 15x29\n', '#719 @ 258,222: 25x16\n', '#720 @ 131,263: 22x10\n', '#721 @ 382,591: 21x24\n', '#722 @ 651,145: 20x12\n', '#723 @ 470,494: 12x25\n', '#724 @ 843,164: 17x25\n', '#725 @ 278,982: 23x13\n', '#726 @ 237,711: 19x20\n', '#727 @ 358,621: 28x22\n', '#728 @ 548,500: 19x16\n', '#729 @ 6,129: 29x17\n', '#730 @ 312,300: 26x21\n', '#731 @ 838,252: 19x27\n', '#732 @ 470,155: 16x28\n', '#733 @ 832,942: 14x12\n', '#734 @ 673,283: 26x29\n', '#735 @ 296,162: 17x22\n', '#736 @ 568,640: 26x23\n', '#737 @ 833,453: 13x15\n', '#738 @ 724,399: 13x24\n', '#739 @ 942,102: 12x18\n', '#740 @ 233,137: 19x20\n', '#741 @ 581,459: 17x19\n', '#742 @ 64,398: 21x11\n', '#743 @ 978,635: 13x21\n', '#744 @ 352,90: 20x21\n', '#745 @ 77,534: 24x28\n', '#746 @ 704,310: 27x20\n', '#747 @ 729,298: 15x25\n', '#748 @ 93,275: 27x12\n', '#749 @ 748,69: 11x15\n', '#750 @ 362,36: 16x29\n', '#751 @ 30,955: 13x19\n', '#752 @ 574,294: 22x23\n', '#753 @ 202,305: 11x13\n', '#754 @ 318,504: 13x12\n', '#755 @ 760,556: 21x27\n', '#756 @ 930,474: 28x11\n', '#757 @ 445,743: 19x18\n', '#758 @ 406,674: 27x27\n', '#759 @ 380,594: 22x20\n', '#760 @ 273,162: 29x24\n', '#761 @ 305,845: 26x12\n', '#762 @ 177,233: 23x10\n', '#763 @ 458,197: 26x18\n', '#764 @ 25,434: 21x28\n', '#765 @ 322,792: 17x22\n', '#766 @ 209,734: 10x25\n', '#767 @ 623,904: 18x14\n', '#768 @ 795,9: 14x27\n', '#769 @ 316,625: 21x21\n', '#770 @ 733,72: 29x25\n', '#771 @ 113,809: 19x15\n', '#772 @ 548,504: 18x18\n', '#773 @ 884,460: 12x18\n', '#774 @ 583,275: 20x25\n', '#775 @ 714,134: 13x13\n', '#776 @ 375,135: 11x18\n', '#777 @ 33,275: 16x17\n', '#778 @ 468,204: 16x13\n', '#779 @ 244,554: 21x15\n', '#780 @ 850,446: 12x16\n', '#781 @ 908,346: 21x25\n', '#782 @ 158,324: 16x14\n', '#783 @ 689,478: 17x12\n', '#784 @ 484,724: 14x16\n', '#785 @ 604,599: 24x13\n', '#786 @ 657,717: 19x11\n', '#787 @ 475,724: 13x10\n', '#788 @ 169,75: 29x25\n', '#789 @ 439,597: 13x13\n', '#790 @ 826,466: 22x24\n', '#791 @ 306,939: 11x22\n', '#792 @ 858,502: 16x28\n', '#793 @ 114,609: 26x29\n', '#794 @ 667,800: 29x21\n', '#795 @ 842,33: 19x18\n', '#796 @ 20,859: 10x17\n', '#797 @ 304,957: 22x23\n', '#798 @ 755,358: 28x23\n', '#799 @ 20,951: 16x24\n', '#800 @ 100,10: 15x28\n', '#801 @ 779,139: 20x12\n', '#802 @ 786,25: 18x24\n', '#803 @ 40,581: 20x10\n', '#804 @ 804,599: 23x15\n', '#805 @ 676,980: 11x11\n', '#806 @ 736,434: 22x21\n', '#807 @ 435,714: 14x25\n', '#808 @ 124,30: 22x26\n', '#809 @ 620,428: 11x21\n', '#810 @ 364,216: 26x23\n', '#811 @ 457,12: 28x22\n', '#812 @ 46,121: 18x29\n', '#813 @ 530,810: 21x14\n', '#814 @ 404,800: 10x27\n', '#815 @ 84,323: 19x25\n', '#816 @ 693,129: 21x11\n', '#817 @ 532,21: 11x20\n', '#818 @ 256,133: 20x28\n', '#819 @ 476,10: 23x16\n', '#820 @ 953,255: 27x13\n', '#821 @ 766,505: 14x10\n', '#822 @ 127,541: 16x20\n', '#823 @ 900,854: 16x23\n', '#824 @ 80,918: 15x26\n', '#825 @ 169,347: 25x26\n', '#826 @ 941,810: 12x20\n', '#827 @ 543,776: 27x21\n', '#828 @ 82,845: 28x28\n', '#829 @ 824,939: 24x20\n', '#830 @ 168,272: 16x17\n', '#831 @ 554,821: 16x17\n', '#832 @ 304,78: 17x20\n', '#833 @ 575,460: 13x21\n', '#834 @ 682,539: 11x24\n', '#835 @ 583,73: 16x14\n', '#836 @ 271,780: 22x27\n', '#837 @ 628,518: 10x20\n', '#838 @ 166,262: 26x17\n', '#839 @ 801,784: 24x16\n', '#840 @ 716,370: 25x25\n', '#841 @ 880,866: 13x22\n', '#842 @ 871,9: 24x24\n', '#843 @ 817,474: 26x13\n', '#844 @ 254,220: 10x16\n', '#845 @ 939,200: 11x22\n', '#846 @ 141,224: 14x14\n', '#847 @ 588,507: 24x23\n', '#848 @ 649,313: 24x28\n', '#849 @ 85,474: 11x28\n', '#850 @ 258,612: 15x21\n', '#851 @ 69,463: 26x21\n', '#852 @ 697,62: 28x23\n', '#853 @ 718,214: 27x24\n', '#854 @ 665,837: 17x22\n', '#855 @ 494,583: 25x19\n', '#856 @ 317,194: 22x27\n', '#857 @ 650,701: 18x17\n', '#858 @ 472,960: 20x26\n', '#859 @ 560,652: 27x14\n', '#860 @ 348,366: 11x16\n', '#861 @ 909,719: 11x15\n', '#862 @ 586,701: 19x20\n', '#863 @ 549,237: 18x15\n', '#864 @ 618,149: 27x17\n', '#865 @ 349,263: 12x12\n', '#866 @ 352,74: 16x18\n', '#867 @ 91,219: 26x19\n', '#868 @ 463,256: 19x23\n', '#869 @ 697,436: 25x29\n', '#870 @ 299,727: 10x11\n', '#871 @ 628,286: 29x28\n', '#872 @ 93,370: 24x20\n', '#873 @ 116,753: 16x15\n', '#874 @ 67,261: 15x10\n', '#875 @ 755,166: 19x12\n', '#876 @ 114,449: 27x14\n', '#877 @ 296,178: 27x26\n', '#878 @ 257,126: 12x9\n', '#879 @ 597,77: 14x18\n', '#880 @ 579,652: 17x27\n', '#881 @ 355,533: 27x29\n', '#882 @ 445,56: 25x22\n', '#883 @ 431,350: 25x25\n', '#884 @ 244,147: 20x23\n', '#885 @ 161,348: 22x26\n', '#886 @ 342,526: 5x3\n', '#887 @ 949,964: 24x19\n', '#888 @ 803,238: 18x18\n', '#889 @ 647,422: 17x28\n', '#890 @ 651,16: 14x17\n', '#891 @ 495,351: 17x15\n', '#892 @ 160,851: 27x23\n', '#893 @ 108,224: 25x28\n', '#894 @ 312,85: 27x24\n', '#895 @ 128,833: 12x18\n', '#896 @ 659,308: 25x15\n', '#897 @ 586,321: 10x28\n', '#898 @ 242,124: 25x19\n', '#899 @ 297,134: 19x17\n', '#900 @ 487,119: 25x26\n', '#901 @ 838,535: 29x21\n', '#902 @ 289,66: 10x28\n', '#903 @ 903,278: 26x13\n', '#904 @ 59,247: 22x19\n', '#905 @ 175,690: 11x12\n', '#906 @ 521,116: 29x27\n', '#907 @ 379,92: 17x10\n', '#908 @ 92,520: 16x26\n', '#909 @ 513,30: 18x12\n', '#910 @ 922,760: 14x15\n', '#911 @ 181,832: 22x20\n', '#912 @ 944,943: 25x25\n', '#913 @ 317,807: 12x22\n', '#914 @ 942,483: 17x10\n', '#915 @ 711,359: 22x29\n', '#916 @ 516,543: 13x29\n', '#917 @ 546,609: 24x23\n', '#918 @ 409,574: 24x12\n', '#919 @ 685,940: 21x21\n', '#920 @ 648,656: 10x29\n', '#921 @ 794,729: 27x23\n', '#922 @ 737,578: 26x18\n', '#923 @ 716,309: 21x24\n', '#924 @ 160,844: 17x21\n', '#925 @ 176,968: 12x16\n', '#926 @ 552,876: 12x25\n', '#927 @ 9,802: 18x26\n', '#928 @ 527,746: 21x16\n', '#929 @ 61,456: 17x17\n', '#930 @ 939,14: 12x29\n', '#931 @ 363,401: 19x19\n', '#932 @ 530,426: 23x21\n', '#933 @ 33,411: 29x21\n', '#934 @ 542,68: 29x16\n', '#935 @ 734,577: 12x15\n', '#936 @ 299,64: 24x19\n', '#937 @ 899,356: 17x10\n', '#938 @ 181,342: 21x17\n', '#939 @ 370,594: 20x16\n', '#940 @ 52,721: 16x23\n', '#941 @ 321,385: 26x15\n', '#942 @ 848,159: 12x27\n', '#943 @ 814,291: 23x24\n', '#944 @ 18,803: 25x25\n', '#945 @ 834,458: 14x17\n', '#946 @ 440,543: 22x18\n', '#947 @ 417,377: 20x28\n', '#948 @ 181,263: 19x20\n', '#949 @ 307,69: 17x29\n', '#950 @ 890,412: 13x29\n', '#951 @ 947,856: 17x19\n', '#952 @ 367,841: 16x17\n', '#953 @ 221,945: 24x14\n', '#954 @ 217,449: 26x19\n', '#955 @ 27,695: 15x26\n', '#956 @ 366,866: 16x17\n', '#957 @ 506,273: 12x20\n', '#958 @ 874,65: 27x13\n', '#959 @ 402,442: 24x20\n', '#960 @ 344,381: 18x15\n', '#961 @ 345,427: 11x22\n', '#962 @ 10,975: 19x22\n', '#963 @ 354,464: 16x27\n', '#964 @ 6,335: 10x16\n', '#965 @ 60,730: 21x17\n', '#966 @ 376,90: 26x17\n', '#967 @ 528,109: 18x26\n', '#968 @ 482,924: 29x12\n', '#969 @ 494,376: 20x22\n', '#970 @ 464,823: 13x26\n', '#971 @ 83,628: 28x27\n', '#972 @ 854,577: 13x19\n', '#973 @ 261,614: 13x21\n', '#974 @ 952,93: 15x15\n', '#975 @ 250,308: 10x19\n', '#976 @ 19,209: 22x14\n', '#977 @ 274,184: 14x16\n', '#978 @ 330,856: 26x24\n', '#979 @ 257,930: 19x14\n', '#980 @ 844,508: 26x12\n', '#981 @ 250,806: 15x20\n', '#982 @ 752,483: 22x26\n', '#983 @ 334,385: 25x13\n', '#984 @ 650,464: 19x20\n', '#985 @ 927,815: 17x27\n', '#986 @ 913,735: 21x11\n', '#987 @ 269,549: 25x12\n', '#988 @ 116,544: 18x26\n', '#989 @ 84,953: 26x21\n', '#990 @ 752,182: 29x19\n', '#991 @ 796,769: 21x18\n', '#992 @ 800,799: 11x20\n', '#993 @ 79,711: 21x23\n', '#994 @ 683,293: 28x19\n', '#995 @ 526,427: 16x28\n', '#996 @ 671,242: 16x14\n', '#997 @ 293,393: 11x25\n', '#998 @ 165,697: 9x6\n', '#999 @ 854,966: 29x11\n', '#1000 @ 63,738: 26x14\n', '#1001 @ 213,956: 20x29\n', '#1002 @ 580,649: 25x10\n', '#1003 @ 536,335: 15x11\n', '#1004 @ 544,187: 27x18\n', '#1005 @ 850,608: 15x22\n', '#1006 @ 384,931: 19x19\n', '#1007 @ 29,649: 26x19\n', '#1008 @ 366,624: 26x10\n', '#1009 @ 671,825: 23x16\n', '#1010 @ 873,250: 28x16\n', '#1011 @ 780,822: 20x28\n', '#1012 @ 944,396: 12x28\n', '#1013 @ 937,20: 13x23\n', '#1014 @ 685,73: 3x7\n', '#1015 @ 662,287: 25x12\n', '#1016 @ 946,406: 14x28\n', '#1017 @ 186,895: 19x13\n', '#1018 @ 84,36: 19x12\n', '#1019 @ 650,150: 26x12\n', '#1020 @ 98,212: 13x19\n', '#1021 @ 413,441: 14x29\n', '#1022 @ 256,977: 15x10\n', '#1023 @ 975,651: 5x11\n', '#1024 @ 338,52: 29x16\n', '#1025 @ 876,271: 21x15\n', '#1026 @ 88,71: 16x14\n', '#1027 @ 434,603: 10x27\n', '#1028 @ 974,470: 21x25\n', '#1029 @ 84,768: 25x21\n', '#1030 @ 886,324: 21x12\n', '#1031 @ 248,710: 28x20\n', '#1032 @ 437,209: 10x27\n', '#1033 @ 272,835: 18x17\n', '#1034 @ 47,589: 21x17\n', '#1035 @ 71,459: 26x22\n', '#1036 @ 229,360: 23x29\n', '#1037 @ 523,395: 26x18\n', '#1038 @ 451,956: 27x19\n', '#1039 @ 360,93: 13x10\n', '#1040 @ 420,947: 22x24\n', '#1041 @ 439,478: 27x21\n', '#1042 @ 510,544: 13x20\n', '#1043 @ 304,520: 15x26\n', '#1044 @ 181,254: 27x11\n', '#1045 @ 87,313: 26x19\n', '#1046 @ 712,386: 11x18\n', '#1047 @ 142,144: 14x22\n', '#1048 @ 654,467: 20x10\n', '#1049 @ 50,73: 23x27\n', '#1050 @ 510,759: 21x29\n', '#1051 @ 776,581: 11x15\n', '#1052 @ 951,378: 24x22\n', '#1053 @ 18,436: 14x26\n', '#1054 @ 518,59: 26x14\n', '#1055 @ 955,88: 16x17\n', '#1056 @ 35,628: 27x22\n', '#1057 @ 491,965: 29x29\n', '#1058 @ 169,983: 19x12\n', '#1059 @ 23,475: 24x15\n', '#1060 @ 886,112: 28x14\n', '#1061 @ 402,315: 25x20\n', '#1062 @ 213,203: 22x17\n', '#1063 @ 129,521: 16x17\n', '#1064 @ 336,523: 18x17\n', '#1065 @ 102,775: 28x12\n', '#1066 @ 282,660: 15x26\n', '#1067 @ 902,345: 10x17\n', '#1068 @ 233,969: 29x20\n', '#1069 @ 666,317: 3x13\n', '#1070 @ 341,205: 16x24\n', '#1071 @ 337,964: 27x12\n', '#1072 @ 607,675: 14x20\n', '#1073 @ 690,445: 12x29\n', '#1074 @ 926,532: 26x20\n', '#1075 @ 937,466: 29x11\n', '#1076 @ 570,714: 25x14\n', '#1077 @ 678,520: 19x27\n', '#1078 @ 307,351: 27x10\n', '#1079 @ 526,34: 29x29\n', '#1080 @ 74,684: 18x16\n', '#1081 @ 450,752: 23x15\n', '#1082 @ 755,795: 22x27\n', '#1083 @ 260,138: 21x29\n', '#1084 @ 321,315: 19x29\n', '#1085 @ 188,214: 17x22\n', '#1086 @ 784,712: 21x18\n', '#1087 @ 458,550: 14x28\n', '#1088 @ 796,582: 27x13\n', '#1089 @ 321,230: 21x29\n', '#1090 @ 898,470: 22x20\n', '#1091 @ 138,370: 11x12\n', '#1092 @ 345,361: 10x10\n', '#1093 @ 177,882: 19x16\n', '#1094 @ 946,702: 26x26\n', '#1095 @ 619,490: 24x19\n', '#1096 @ 133,506: 20x20\n', '#1097 @ 266,869: 25x21\n', '#1098 @ 387,970: 19x21\n', '#1099 @ 311,323: 17x24\n', '#1100 @ 310,488: 28x22\n', '#1101 @ 770,651: 13x16\n', '#1102 @ 965,301: 28x11\n', '#1103 @ 466,826: 19x15\n', '#1104 @ 88,632: 17x10\n', '#1105 @ 902,137: 25x19\n', '#1106 @ 752,329: 18x26\n', '#1107 @ 182,164: 23x17\n', '#1108 @ 289,679: 14x28\n', '#1109 @ 176,502: 18x18\n', '#1110 @ 214,971: 12x27\n', '#1111 @ 389,207: 28x28\n', '#1112 @ 331,19: 4x8\n', '#1113 @ 312,635: 25x29\n', '#1114 @ 509,141: 14x21\n', '#1115 @ 392,798: 13x24\n', '#1116 @ 876,419: 27x12\n', '#1117 @ 636,613: 28x14\n', '#1118 @ 681,326: 11x25\n', '#1119 @ 787,707: 20x27\n', '#1120 @ 31,11: 25x21\n', '#1121 @ 270,551: 20x21\n', '#1122 @ 353,134: 17x27\n', '#1123 @ 752,773: 17x25\n', '#1124 @ 648,692: 12x28\n', '#1125 @ 495,632: 27x27\n', '#1126 @ 860,171: 14x20\n', '#1127 @ 253,507: 20x22\n', '#1128 @ 316,494: 16x10\n', '#1129 @ 524,569: 29x29\n', '#1130 @ 238,309: 20x13\n', '#1131 @ 783,542: 15x29\n', '#1132 @ 553,681: 23x11\n', '#1133 @ 884,495: 10x25\n', '#1134 @ 910,18: 17x12\n', '#1135 @ 436,127: 14x10\n', '#1136 @ 61,738: 12x24\n', '#1137 @ 966,288: 12x27\n', '#1138 @ 722,117: 7x3\n', '#1139 @ 95,933: 28x29\n', '#1140 @ 336,683: 25x24\n', '#1141 @ 681,946: 25x17\n', '#1142 @ 359,61: 22x20\n', '#1143 @ 37,637: 22x18\n', '#1144 @ 768,578: 20x13\n', '#1145 @ 855,666: 15x26\n', '#1146 @ 255,689: 10x27\n', '#1147 @ 599,478: 20x24\n', '#1148 @ 195,715: 18x23\n', '#1149 @ 478,641: 21x14\n', '#1150 @ 882,180: 27x20\n', '#1151 @ 851,302: 28x21\n', '#1152 @ 363,300: 27x26\n', '#1153 @ 309,631: 4x3\n', '#1154 @ 199,224: 12x17\n', '#1155 @ 228,153: 19x13\n', '#1156 @ 487,22: 14x27\n', '#1157 @ 682,302: 17x15\n', '#1158 @ 187,487: 16x21\n', '#1159 @ 210,315: 19x26\n', '#1160 @ 376,789: 18x29\n', '#1161 @ 67,567: 13x17\n', '#1162 @ 221,515: 14x29\n', '#1163 @ 397,514: 12x26\n', '#1164 @ 384,371: 18x23\n', '#1165 @ 882,953: 27x29\n', '#1166 @ 287,88: 28x12\n', '#1167 @ 884,89: 21x21\n', '#1168 @ 99,820: 17x13\n', '#1169 @ 492,656: 21x14\n', '#1170 @ 147,831: 29x21\n', '#1171 @ 128,256: 10x13\n', '#1172 @ 841,476: 24x16\n', '#1173 @ 328,17: 11x14\n', '#1174 @ 109,287: 20x12\n', '#1175 @ 113,311: 12x27\n', '#1176 @ 856,917: 18x13\n', '#1177 @ 466,556: 24x10\n', '#1178 @ 486,585: 19x16\n', '#1179 @ 711,226: 10x13\n', '#1180 @ 108,254: 26x24\n', '#1181 @ 725,313: 10x24\n', '#1182 @ 365,127: 23x25\n', '#1183 @ 488,371: 22x14\n', '#1184 @ 381,502: 16x21\n', '#1185 @ 322,567: 17x24\n', '#1186 @ 210,564: 12x29\n', '#1187 @ 525,797: 21x24\n', '#1188 @ 58,431: 29x25\n', '#1189 @ 661,24: 20x15\n', '#1190 @ 797,234: 17x18\n', '#1191 @ 851,38: 13x21\n', '#1192 @ 962,75: 11x27\n', '#1193 @ 568,200: 16x23\n', '#1194 @ 863,319: 12x18\n', '#1195 @ 25,704: 27x24\n', '#1196 @ 835,510: 29x14\n', '#1197 @ 427,904: 23x25\n', '#1198 @ 327,956: 18x27\n', '#1199 @ 168,609: 16x23\n', '#1200 @ 591,31: 16x26\n', '#1201 @ 428,374: 13x16\n', '#1202 @ 183,332: 6x7\n', '#1203 @ 139,266: 12x12\n', '#1204 @ 616,33: 19x28\n', '#1205 @ 479,470: 18x10\n', '#1206 @ 483,910: 19x25\n', '#1207 @ 38,760: 28x21\n', '#1208 @ 307,727: 10x27\n', '#1209 @ 607,19: 28x29\n', '#1210 @ 760,404: 12x25\n', '#1211 @ 541,23: 10x18\n', '#1212 @ 457,555: 14x23\n', '#1213 @ 307,693: 12x12\n', '#1214 @ 176,965: 11x15\n', '#1215 @ 880,555: 3x12\n', '#1216 @ 365,261: 21x25\n', '#1217 @ 900,338: 24x18\n', '#1218 @ 796,796: 15x12\n', '#1219 @ 94,64: 12x11\n', '#1220 @ 398,1: 28x10\n', '#1221 @ 511,944: 11x29\n', '#1222 @ 432,174: 17x29\n', '#1223 @ 619,427: 19x16\n', '#1224 @ 978,670: 19x12\n', '#1225 @ 330,384: 26x20\n', '#1226 @ 233,701: 16x14\n', '#1227 @ 264,870: 21x12\n', '#1228 @ 457,889: 23x29\n', '#1229 @ 614,202: 25x29\n', '#1230 @ 744,689: 26x27\n', '#1231 @ 484,912: 16x11\n', '#1232 @ 912,679: 21x26\n', '#1233 @ 509,20: 24x14\n', '#1234 @ 679,847: 21x29\n', '#1235 @ 897,950: 14x17\n', '#1236 @ 449,85: 25x28\n', '#1237 @ 907,821: 25x17\n', '#1238 @ 685,967: 19x20\n', '#1239 @ 104,16: 22x28\n', '#1240 @ 363,95: 5x5\n', '#1241 @ 629,755: 23x18\n', '#1242 @ 570,345: 15x28\n', '#1243 @ 270,193: 23x11\n', '#1244 @ 43,348: 12x21\n', '#1245 @ 903,482: 22x29\n', '#1246 @ 915,179: 27x24\n', '#1247 @ 76,26: 16x14\n', '#1248 @ 874,197: 16x23\n', '#1249 @ 869,728: 26x14\n', '#1250 @ 158,377: 10x11\n', '#1251 @ 379,138: 26x17\n', '#1252 @ 298,977: 21x12\n', '#1253 @ 914,737: 27x26\n', '#1254 @ 153,123: 21x27\n', '#1255 @ 842,731: 20x24\n', '#1256 @ 885,852: 24x26\n', '#1257 @ 707,747: 23x18\n', '#1258 @ 729,387: 19x23\n', '#1259 @ 238,452: 24x20\n']
448 #1 of 1259
885 #2 of 1259
1395 #3 of 1259
2055 #4 of 1259
2805 #5 of 1259
3117 #6 of 1259
3600Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 51, in <module>
    print(len(fabric), idnum, "of", len(claims))
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
['#1 @ 1,3: 4x4\n', '#2 @ 3,1: 4x4\n', '#3 @ 5,5: 2x2\n']
25 #1 of 3
50 #2 of 3
59 #3 of 3
svaret är: 0
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
tomt tyg
(1, 3, 1) 1 4
finns inte på tyg
(1, 3, 1) 1 5
finns inte på tyg
(1, 3, 1) 1 6
finns inte på tyg
(1, 3, 1) 1 7
finns inte på tyg
(1, 3, 1) 2 3
finns inte på tyg
(1, 3, 1) 2 4
finns inte på tyg
(1, 3, 1) 2 5
finns inte på tyg
(1, 3, 1) 2 6
finns inte på tyg
(1, 3, 1) 2 7
finns inte på tyg
(1, 3, 1) 3 3
finns inte på tyg
(1, 3, 1) 3 4
finns inte på tyg
(1, 3, 1) 3 5
finns inte på tyg
(1, 3, 1) 3 6
finns inte på tyg
(1, 3, 1) 3 7
finns inte på tyg
(1, 3, 1) 4 3
finns inte på tyg
(1, 3, 1) 4 4
finns inte på tyg
(1, 3, 1) 4 5
finns inte på tyg
(1, 3, 1) 4 6
finns inte på tyg
(1, 3, 1) 4 7
finns inte på tyg
(1, 3, 1) 5 3
finns inte på tyg
(1, 3, 1) 5 4
finns inte på tyg
(1, 3, 1) 5 5
finns inte på tyg
(1, 3, 1) 5 6
finns inte på tyg
(1, 3, 1) 5 7
finns inte på tyg
25 #1 of 3
(1, 3, 1) 3 1
finns inte på tyg
(1, 3, 1) 3 2
finns inte på tyg
(1, 3, 1) 3 3
finns inte på tyg
(1, 3, 1) 3 4
finns inte på tyg
(1, 3, 1) 3 5
finns inte på tyg
(1, 3, 1) 4 1
finns inte på tyg
(1, 3, 1) 4 2
finns inte på tyg
(1, 3, 1) 4 3
finns inte på tyg
(1, 3, 1) 4 4
finns inte på tyg
(1, 3, 1) 4 5
finns inte på tyg
(1, 3, 1) 5 1
finns inte på tyg
(1, 3, 1) 5 2
finns inte på tyg
(1, 3, 1) 5 3
finns inte på tyg
(1, 3, 1) 5 4
finns inte på tyg
(1, 3, 1) 5 5
finns inte på tyg
(1, 3, 1) 6 1
finns inte på tyg
(1, 3, 1) 6 2
finns inte på tyg
(1, 3, 1) 6 3
finns inte på tyg
(1, 3, 1) 6 4
finns inte på tyg
(1, 3, 1) 6 5
finns inte på tyg
(1, 3, 1) 7 1
finns inte på tyg
(1, 3, 1) 7 2
finns inte på tyg
(1, 3, 1) 7 3
finns inte på tyg
(1, 3, 1) 7 4
finns inte på tyg
(1, 3, 1) 7 5
finns inte på tyg
50 #2 of 3
(1, 3, 1) 5 5
finns inte på tyg
(1, 3, 1) 5 6
finns inte på tyg
(1, 3, 1) 5 7
finns inte på tyg
(1, 3, 1) 6 5
finns inte på tyg
(1, 3, 1) 6 6
finns inte på tyg
(1, 3, 1) 6 7
finns inte på tyg
(1, 3, 1) 7 5
finns inte på tyg
(1, 3, 1) 7 6
finns inte på tyg
(1, 3, 1) 7 7
finns inte på tyg
59 #3 of 3
svaret är: 0
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
tomt tyg
tyget: [(1, 3, 1)]
(1, 3, 1) 1 4
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1)]
(1, 3, 1) 1 5
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1)]
(1, 3, 1) 1 6
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1)]
(1, 3, 1) 1 7
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1), (1, 7, 1)]
(1, 3, 1) 2 3
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1), (1, 7, 1), (2, 3, 1)]
(1, 3, 1) 2 4
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1), (1, 7, 1), (2, 3, 1), (2, 4, 1)]
(1, 3, 1) 2 5
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1), (1, 7, 1), (2, 3, 1), (2, 4, 1), (2, 5, 1)]
(1, 3, 1) 2 6
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1), (1, 7, 1), (2, 3, 1), (2, 4, 1), (2, 5, 1), (2, 6, 1)]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 43, in <module>
    patch = findpatch(jx,ky)
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 17, in findpatch
    print("tyget:", fabric)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
tomt tyg
tyget: [(1, 3, 1)]
x-koord 1
(1, 3, 1) 1 4
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1)]
x-koord 1
(1, 3, 1) 1 5
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1)]
x-koord 1
(1, 3, 1) 1 6
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1)]
x-koord 1
(1, 3, 1) 1 7
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1), (1, 7, 1)]
x-koord 1
(1, 3, 1) 2 3
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1), (1, 7, 1), (2, 3, 1)]
x-koord 1
(1, 3, 1) 2 4
finns inte på tyg
tyget:Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 44, in <module>
    patch = findpatch(jx,ky)
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 17, in findpatch
    print("tyget:", fabric)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
tomt tyg
tyget: [(1, 3, 1)]
x-koord 1 y-koord 3
(1, 3, 1) 1 4
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1)]
x-koord 1 y-koord 3
(1, 3, 1) 1 5
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1)]
x-koord 1 y-koord 3
(1, 3, 1) 1 6
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1)]
x-koord 1 y-koord 3
(1, 3, 1) 1 7
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1), (1, 7, 1)]
x-koord 1Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 44, in <module>
    patch = findpatch(jx,ky)
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 18, in findpatch
    print("x-koord",apa[0], "y-koord", apa[1])
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
tomt tyg
tyget: [(1, 3, 1)]
x-koord 1 y-koord 3
(1, 3, 1) 1 4
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1)]
x-koord 1 y-koord 3
(1, 3, 1) 1 5
tyget: [(1, 3, 1), (1, 4, 1)]
x-koord 1 y-koord 4
(1, 4, 1) 1 5
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1)]
x-koord 1 y-koord 3
(1, 3, 1) 1 6
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1)]
x-koord 1 y-koord 4
(1, 4, 1) 1 6
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1)]
x-koord 1 y-koord 5
(1, 5, 1) 1 6
finns inte på tyg
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1)]
x-koord 1 y-koord 3
(1, 3, 1) 1 7
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1)]
x-koord 1 y-koord 4
(1, 4, 1) 1 7
tyget: [(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1)]
x-koord 1 y-koord 5
(1, 5, 1) Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 44, in <module>
    patch = findpatch(jx,ky)
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 19, in findpatch
    print(apa, a, b)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
tomt tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
25 #1 of 3
finns inte på tyg
finns inte på tyg
finns på tyg: 10
antal: 1
finns på tyg: 11
antal: 1
finns på tyg: 12
antal: 1
finns inte på tyg
finns inte på tyg
finns på tyg: 15
antal: 1
finns på tyg: 16
antal: 1
finns på tyg: 17
antal: 1
finns inte på tyg
finns inte på tyg
finns på tyg: 20
antal: 1
finns på tyg: 21
antal: 1
finns på tyg: 22
antal: 1
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
41 #2 of 3
finns på tyg: 22
antal: 2
finns på tyg: 23
antal: 1
finns på tyg: 24
antal: 1
finns på tyg: 35
antal: 1
finns inte på tyg
finns inte på tyg
finns på tyg: 40
antal: 1
finns inte på tyg
finns inte på tyg
45 #3 of 3
svaret är: 13
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
tomt tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
25 #1 of 3
finns inte på tyg
finns inte på tyg
finns på tyg: 3 3
antal: 1
finns på tyg: 3 4
antal: 1
finns på tyg: 3 5
antal: 1
finns inte på tyg
finns inte på tyg
finns på tyg: 4 3
antal: 1
finns på tyg: 4 4
antal: 1
finns på tyg: 4 5
antal: 1
finns inte på tyg
finns inte på tyg
finns på tyg: 5 3
antal: 1
finns på tyg: 5 4
antal: 1
finns på tyg: 5 5
antal: 1
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
finns inte på tyg
41 #2 of 3
finns på tyg: 5 5
antal: 2
finns på tyg: 5 6
antal: 1
finns på tyg: 5 7
antal: 1
finns på tyg: 6 5
antal: 1
finns inte på tyg
finns inte på tyg
finns på tyg: 7 5
antal: 1
finns inte på tyg
finns inte på tyg
45 #3 of 3
svaret är: 13
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
tomt tyg
25 #1 of 3
finns på tyg: ( 3 , 3 )
antal: 1
finns på tyg: ( 3 , 4 )
antal: 1
finns på tyg: ( 3 , 5 )
antal: 1
finns på tyg: ( 4 , 3 )
antal: 1
finns på tyg: ( 4 , 4 )
antal: 1
finns på tyg: ( 4 , 5 )
antal: 1
finns på tyg: ( 5 , 3 )
antal: 1
finns på tyg: ( 5 , 4 )
antal: 1
finns på tyg: ( 5 , 5 )
antal: 1
41 #2 of 3
finns på tyg: ( 5 , 5 )
antal: 2
finns på tyg: ( 5 , 6 )
antal: 1
finns på tyg: ( 5 , 7 )
antal: 1
finns på tyg: ( 6 , 5 )
antal: 1
finns på tyg: ( 7 , 5 )
antal: 1
45 #3 of 3
svaret är: 13
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
0 #1 of 3
tomt tyg
25 #2 of 3
finns på tyg: ( 3 , 3 )
antal: 1
finns på tyg: ( 3 , 4 )
antal: 1
finns på tyg: ( 3 , 5 )
antal: 1
finns på tyg: ( 4 , 3 )
antal: 1
finns på tyg: ( 4 , 4 )
antal: 1
finns på tyg: ( 4 , 5 )
antal: 1
finns på tyg: ( 5 , 3 )
antal: 1
finns på tyg: ( 5 , 4 )
antal: 1
finns på tyg: ( 5 , 5 )
antal: 1
41 #3 of 3
finns på tyg: ( 5 , 5 )
antal: 2
finns på tyg: ( 5 , 6 )
antal: 1
finns på tyg: ( 5 , 7 )
antal: 1
finns på tyg: ( 6 , 5 )
antal: 1
finns på tyg: ( 7 , 5 )
antal: 1
svaret är: 13
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
0 #1 of 3
[]
tomt tyg
25 #2 of 3
[(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1), (1, 7, 1), (2, 3, 1), (2, 4, 1), (2, 5, 1), (2, 6, 1), (2, 7, 1), (3, 3, 1), (3, 4, 1), (3, 5, 1), (3, 6, 1), (3, 7, 1), (4, 3, 1), (4, 4, 1), (4, 5, 1), (4, 6, 1), (4, 7, 1), (5, 3, 1), (5, 4, 1), (5, 5, 1), (5, 6, 1), (5, 7, 1)]
finns på tyg: ( 3 , 3 )
antal: 1
finns på tyg: ( 3 , 4 )
antal: 1
finns på tyg: ( 3 , 5 )
antal: 1
finns på tyg: ( 4 , 3 )
antal: 1
finns på tyg: ( 4 , 4 )
antal: 1
finns på tyg: ( 4 , 5 )
antal: 1
finns på tyg: ( 5 , 3 )
antal: 1
finns på tyg: ( 5 , 4 )
antal: 1
finns på tyg: ( 5 , 5 )
antal: 1
41 #3 of 3
[(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1), (1, 7, 1), (2, 3, 1), (2, 4, 1), (2, 5, 1), (2, 6, 1), (2, 7, 1), (3, 3, 2), (3, 4, 2), (3, 5, 2), (3, 6, 1), (3, 7, 1), (4, 3, 2), (4, 4, 2), (4, 5, 2), (4, 6, 1), (4, 7, 1), (5, 3, 2), (5, 4, 2), (5, 5, 2), (5, 6, 1), (5, 7, 1), (3, 1, 1), (3, 2, 1), (4, 1, 1), (4, 2, 1), (5, 1, 1), (5, 2, 1), (6, 1, 1), (6, 2, 1), (6, 3, 1), (6, 4, 1), (6, 5, 1), (7, 1, 1), (7, 2, 1), (7, 3, 1), (7, 4, 1), (7, 5, 1)]
finns på tyg: ( 5 , 5 )
antal: 2
finns på tyg: ( 5Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 46, in <module>
    patch = findpatch(jx,ky)
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 21, in findpatch
    print("finns på tyg:", "(", a, ",", b, ")")
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
0 #1 of 3
[]
tomt tyg
16 #2 of 3
[(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1), (2, 3, 1), (2, 4, 1), (2, 5, 1), (2, 6, 1), (3, 3, 1), (3, 4, 1), (3, 5, 1), (3, 6, 1), (4, 3, 1), (4, 4, 1), (4, 5, 1), (4, 6, 1)]
finns på tyg: ( 3 , 3 )
antal: 1
finns på tyg: ( 3 , 4 )
antal: 1
finns på tyg: ( 4 , 3 )
antal: 1
finns på tyg: ( 4 , 4 )
antal: 1
28 #3 of 3
[(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1), (2, 3, 1), (2, 4, 1), (2, 5, 1), (2, 6, 1), (3, 3, 2), (3, 4, 2), (3, 5, 1), (3, 6, 1), (4, 3, 2), (4, 4, 2), (4, 5, 1), (4, 6, 1), (3, 1, 1), (3, 2, 1), (4, 1, 1), (4, 2, 1), (5, 1, 1), (5, 2, 1), (5, 3, 1), (5, 4, 1), (6, 1, 1), (6, 2, 1), (6, 3, 1), (6, 4, 1)]
svaret är: 4
>>> 
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
0 #1 of 3
[]
1 3 0 0
tomt tyg
1 3 0 1
1 3 0 2
1 3 0 3
1 3 1 0
1 3 1 1
1 3 1 2
1 3 1 3
1 3 2 0
1 3 2 1
1 3 2 2
1 3 2 3
1 3 3 0
1 3Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 42, in <module>
    print(x,y,j,k)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
0 #1 of 3
[]
tomt tyg
16 #2 of 3
[(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1), (2, 3, 1), (2, 4, 1), (2, 5, 1), (2, 6, 1), (3, 3, 1), (3, 4, 1), (3, 5, 1), (3, 6, 1), (4, 3, 1), (4, 4, 1), (4, 5, 1), (4, 6, 1)]
finns på tyg: ( 3 , 3 )
antal: 1
finns på tyg: ( 3 , 4 )
antal: 1
finns på tyg: ( 4 , 3 )
antal: 1
finns på tyg: ( 4 , 4 )
antal: 1
28 #3 of 3
[(1, 3, 1), (1, 4, 1), (1, 5, 1), (1, 6, 1), (2, 3, 1), (2, 4, 1), (2, 5, 1), (2, 6, 1), (3, 3, 2), (3, 4, 2), (3, 5, 1), (3, 6, 1), (4, 3, 2), (4, 4, 2), (4, 5, 1), (4, 6, 1), (3, 1, 1), (3, 2, 1), (4, 1, 1), (4, 2, 1), (5, 1, 1), (5, 2, 1), (5, 3, 1), (5, 4, 1), (6, 1, 1), (6, 2, 1), (6, 3, 1), (6, 4, 1)]
svaret är: 4
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
0 #1 of 3
16 #2 of 3
28 #3 of 3
svaret är: 4
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
0 #1 of 1259
405 #2 of 1259
801 #3 of 1259
1265 #4 of 1259
1874 #5 of 1259
2570 #6 of 1259
2845 #7 of 1259
3285 #8 of 1259
3608 #9 of 1259
4136 #10 of 1259
4472 #11 of 1259
4812 #12 of 1259
5276 #13 of 1259
5466 #14 of 1259
5676 #15 of 1259
5962 #16 of 1259
6062 #17 of 1259
6410 #18 of 1259
6670 #19 of 1259
7034 #20 of 1259
7469 #21 of 1259
7846 #22 of 1259
7942 #23 of 1259
8173 #24 of 1259
8437 #25 of 1259
8941 #26 of 1259
9535 #27 of 1259
9700 #28 of 1259
10090 #29 of 1259
10299 #30 of 1259
10533 #31 of 1259
10773 #32 of 1259
11445 #33 of 1259
11757 #34 of 1259
12043 #35 of 1259
12252 #36 of 1259
12576 #37 of 1259
12896 #38 of 1259
13298 #39 of 1259
13496 #40 of 1259
14134 #41 of 1259
14422 #42 of 1259
14800 #43 of 1259
15262 #44 of 1259
15762 #45 of 1259
16100 #46 of 1259
16584 #47 of 1259
16836 #48 of 1259
17096 #49 of 1259
17239 #50 of 1259
17512 #51 of 1259
17728 #52 of 1259
18248 #53 of 1259
18353 #54 of 1259
18545 #55 of 1259
18869 #56 of 1259
19141 #57 of 1259
19750 #58 of 1259
19959 #59 of 1259
20634 #60 of 1259
21109 #61 of 1259
21592 #62 of 1259
21992 #63 of 1259
22112 #64 of 1259
22840 #65 of 1259
23080 #66 of 1259
23521 #67 of 1259
23857 #68 of 1259
23997 #69 of 1259
24197 #70 of 1259
24472 #71 of 1259
24820 #72 of 1259
25070 #73 of 1259
25502 #74 of 1259
26202 #75 of 1259
26444 #76 of 1259
26716 #77 of 1259
26898 #78 of 1259
27221 #79 of 1259
27865 #80 of 1259
28085 #81 of 1259
28525 #82 of 1259
29141 #83 of 1259
29333 #84 of 1259
29453 #85 of 1259
29773 #86 of 1259
30371 #87 of 1259
30723 #88 of 1259
30985 #89 of 1259
31309 #90 of 1259
31659 #91 of 1259
32471 #92 of 1259
32816 #93 of 1259
33048 #94 of 1259
33542 #95 of 1259
33652 #96 of 1259
34092 #97 of 1259
34515 #98 of 1259
34974 #99 of 1259
35550 #100 of 1259
35732 #101 of 1259
35922 #102 of 1259
36435 #103 of 1259
36867 #104 of 1259
37105 #105 of 1259
37245 #106 of 1259
37739 #107 of 1259
38159 #108 of 1259
38459 #109 of 1259
39172 #110 of 1259
39216 #111 of 1259
39632 #112 of 1259
39836 #113 of 1259
40026 #114 of 1259
40468 #115 of 1259
40820 #116 of 1259
41011 #117 of 1259
41220 #118 of 1259
41787 #119 of 1259
41951 #120 of 1259
42275 #121 of 1259
42587 #122 of 1259
43275 #123 of 1259
43653 #124 of 1259
44147 #125 of 1259
44756 #126 of 1259
45120 #127 of 1259
45770 #128 of 1259
46178 #129 of 1259
46308 #130 of 1259
46791 #131 of 1259
47127 #132 of 1259
47607 #133 of 1259
47619 #134 of 1259
47996 #135 of 1259
48563 #136 of 1259
48863 #137 of 1259
48878 #138 of 1259
49138 #139 of 1259
49318 #140 of 1259
49498 #141 of 1259
49810 #142 of 1259
50370 #143 of 1259
50388 #144 of 1259
50772 #145 of 1259
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 46, in <module>
    patch = findpatch(jx,ky)
  File "/Users/luxia/Documents/aoc2018/aoc3a.py", line 20, in findpatch
    if apa[0] == a and apa[1] == b:
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X

=================== RESTART: /Users/luxia/Documents/aoc2018/aoc3a.py ==================
#1
#2
#3
#4
#5
#6
#7
#8
#9
#10
#11
#12
#13
#14
#15
#16
#17
#18
#19
#20
#21
#22
#23
#24
#25
#26
#27
#28
#29
#30
#31
#32
#33
#34
#35
#36
#37
#38
#39
#40
#41
#42
#43
#44
#45
#46
#47
#48
#49
#50
#51
#52
#53
#54
#55
#56
#57
#58
#59
#60
#61
#62
#63
#64
#65
#66
#67
#68
#69
#70
#71
#72
#73
#74
#75
#76
#77
#78
#79
#80
#81
#82
#83
#84
#85
#86
#87
#88
#89
#90
#91
#92
#93
#94
#95
#96
#97
#98
#99
#100
#101
#102
#103
#104
#105
#106
#107
#108
#109
#110
#111
#112
#113
#114
#115
#116
#117
#118
#119
#120
#121
#122
#123
#124
#125
#126
#127
#128
#129
#130
#131
#132
#133
#134
#135
#136
#137
#138
#139
#140
#141
#142
#143
#144
#145
#146
#147
#148
#149
#150
#151
#152
#153
#154
#155
#156
#157
#158
#159
#160
#161
#162
#163
#164
#165
#166
#167
#168
#169
#170
#171
#172
#173
#174
#175
#176
#177
#178
#179
#180
#181
#182
#183
#184
#185
#186
#187
#188
#189
#190
#191
#192
#193
#194
#195
#196
#197
#198
#199
#200
#201
#202
#203
#204
#205
#206
#207
#208
#209
#210
#211
#212
#213
#214
#215
#216
#217
#218
#219
#220
#221
#222
#223
#224
#225
#226
#227
#228
#229
#230
#231
#232
#233
#234
#235
#236
#237
#238
#239
#240
#241
#242
#243
#244
#245
#246
#247
#248
#249
#250
#251
#252
#253
#254
#255
#256
#257
#258
#259
#260
#261
#262
#263
#264
#265
#266
#267
#268
#269
#270
#271
#272
#273
#274
#275
#276
#277
#278
#279
#280
#281
#282
#283
#284
#285
#286
#287
#288
#289
#290
#291
#292
#293
#294
#295
#296
#297
#298
#299
#300
#301
#302
#303
#304
#305
#306
#307
#308
#309
#310
#311
#312
#313
#314
#315
#316
#317
#318
#319
#320
#321
#322
#323
#324
#325
#326
#327
#328
#329
#330
#331
#332
#333
#334
#335
#336
#337
#338
#339
#340
#341
#342
#343
#344
#345
#346
#347
#348
#349
#350
#351
#352
#353
#354
#355
#356
#357
#358
#359
#360
#361
#362
#363
#364
#365
#366
#367
#368
#369
#370
#371
#372
#373
#374
#375
#376
#377
#378
#379
#380
#381
#382
#383
#384
#385
#386
#387
#388
#389
#390
#391
#392
#393
#394
#395
#396
#397
#398
#399
#400
#401
#402
#403
#404
#405
#406
#407
#408
#409
#410
#411
#412
#413
#414
#415
#416
#417
#418
#419
#420
#421
#422
#423
#424
#425
#426
#427
#428
#429
#430
#431
#432
#433
#434
#435
#436
#437
#438
#439
#440
#441
#442
#443
#444
#445
#446
#447
#448
#449
#450
#451
#452
#453
#454
#455
#456
#457
#458
#459
#460
#461
#462
#463
#464
#465
#466
#467
#468
#469
#470
#471
#472
#473
#474
#475
#476
#477
#478
#479
#480
#481
#482
#483
#484
#485
#486
#487
#488
#489
#490
#491
#492
#493
#494
#495
#496
#497
#498
#499
#500
#501
#502
#503
#504
#505
#506
#507
#508
#509
#510
#511
#512
#513
#514
#515
#516
#517
#518
#519
#520
#521
#522
#523
#524
#525
#526
#527
#528
#529
#530
#531
#532
#533
#534
#535
#536
#537
#538
#539
#540
#541
#542
#543
#544
#545
#546
#547
#548
#549
#550
#551
#552
#553
#554
#555
#556
#557
#558
#559
#560
#561
#562
#563
#564
#565
#566
#567
#568
#569
#570
#571
#572
#573
#574
#575
#576
#577
#578
#579
#580
#581
#582
#583
#584
#585
#586
#587
#588
#589
#590
#591
#592
#593
#594
#595
#596
#597
#598
#599
#600
#601
#602
#603
#604
#605
#606
#607
#608
#609
#610
#611
#612
#613
#614
#615
#616
#617
#618
#619
#620
#621
#622
#623
#624
#625
#626
#627
#628
#629
#630
#631
#632
#633
#634
#635
#636
#637
#638
#639
#640
#641
#642
#643
#644
#645
#646
#647
#648
#649
#650
#651
#652
#653
#654
#655
#656
#657
#658
#659
#660
#661
#662
#663
#664
#665
#666
#667
#668
#669
#670
#671
#672
#673
#674
#675
#676
#677
#678
#679
#680
#681
#682
#683
#684
#685
#686
#687
#688
#689
#690
#691
#692
#693
#694
#695
#696
#697
#698
#699
#700
#701
#702
#703
#704
#705
#706
#707
#708
#709
#710
#711
#712
#713
#714
#715
#716
#717
#718
#719
#720
#721
#722
#723
#724
#725
#726
#727
#728
#729
#730
#731
#732
#733
#734
#735
#736
#737
#738
#739
#740
#741
#742
#743
#744
#745
#746
#747
#748
#749
#750
#751
#752
#753
#754
#755
#756
#757
#758
#759
#760
#761
#762
#763
#764
#765
#766
#767
#768
#769
#770
#771
#772
#773
#774
#775
#776
#777
#778
#779
#780
#781
#782
#783
#784
#785
#786
#787
#788
#789
#790
#791
#792
#793
#794
#795
#796
#797
#798
#799
#800
#801
#802
#803
#804
#805
#806
#807
#808
#809
#810
#811
#812
#813
#814
#815
#816
#817
#818
#819
#820
#821
#822
#823
#824
#825
#826
#827
#828
#829
#830
#831
#832
#833
#834
#835
#836
#837
#838
#839
#840
#841
#842
#843
#844
#845
#846
#847
#848
#849
#850
#851
#852
#853
#854
#855
#856
#857
#858
#859
#860
#861
#862
#863
#864
#865
#866
#867
#868
#869
#870
#871
#872
#873
#874
#875
#876
#877
#878
#879
#880
#881
#882
#883
#884
#885
#886
#887
#888
#889
#890
#891
#892
#893
#894
#895
#896
#897
#898
#899
#900
#901
#902
#903
#904
#905
#906
#907
#908
#909
#910
#911
#912
#913
#914
#915
#916
#917
#918
#919
#920
#921
#922
#923
#924
#925
#926
#927
#928
#929
#930
#931
#932
#933
#934
#935
#936
#937
#938
#939
#940
#941
#942
#943
#944
#945
#946
#947
#948
#949
#950
#951
#952
#953
#954
#955
#956
#957
#958
#959
#960
#961
#962
#963
#964
#965
#966
#967
#968
#969
#970
#971
#972
#973
#974
#975
#976
#977
#978
#979
#980
#981
#982
#983
#984
#985
#986
#987
#988
#989
#990
#991
#992
#993
#994
#995
#996
#997
#998
#999
#1000
#1001
#1002
#1003
#1004
#1005
#1006
#1007
#1008
#1009
#1010
#1011
#1012
#1013
#1014
#1015
#1016
#1017
#1018
#1019
#1020
#1021
#1022
#1023
#1024
#1025
#1026
#1027
#1028
#1029
#1030
#1031
#1032
#1033
#1034
#1035
#1036
#1037
#1038
#1039
#1040
#1041
#1042
#1043
#1044
#1045
#1046
#1047
#1048
#1049
#1050
#1051
#1052
#1053
#1054
#1055
#1056
#1057
#1058
#1059
#1060
#1061
#1062
#1063
#1064
#1065
#1066
#1067
#1068
#1069
#1070
#1071
#1072
#1073
#1074
#1075
#1076
#1077
#1078
#1079
#1080
#1081
#1082
#1083
#1084
#1085
#1086
#1087
#1088
#1089
#1090
#1091
#1092
#1093
#1094
#1095
#1096
#1097
#1098
#1099
#1100
#1101
#1102
#1103
#1104
#1105
#1106
#1107
#1108
#1109
#1110
#1111
#1112
#1113
#1114
#1115
#1116
#1117
#1118
#1119
#1120
#1121
#1122
#1123
#1124
#1125
#1126
#1127
#1128
#1129
#1130
#1131
#1132
#1133
#1134
#1135
#1136
#1137
#1138
#1139
#1140
#1141
#1142
#1143
#1144
#1145
#1146
#1147
#1148
#1149
#1150
#1151
#1152
#1153
#1154
#1155
#1156
#1157
#1158
#1159
#1160
#1161
#1162
#1163
#1164
#1165
#1166
#1167
#1168
#1169
#1170
#1171
#1172
#1173
#1174
#1175
#1176
#1177
#1178
#1179
#1180
#1181
#1182
#1183
#1184
#1185
#1186
#1187
#1188
#1189
#1190
#1191
#1192
#1193
#1194
#1195
#1196
#1197
#1198
#1199
#1200
#1201
#1202
#1203
#1204
#1205
#1206
#1207
#1208
#1209
#1210
#1211
#1212
#1213
#1214
#1215
#1216
#1217
#1218
#1219
#1220
#1221
#1222
#1223
#1224
#1225
#1226
#1227
#1228
#1229
#1230
#1231
#1232
#1233
#1234
#1235
#1236
#1237
#1238
#1239
#1240
#1241
#1242
#1243
#1244
#1245
#1246
#1247
#1248
#1249
#1250
#1251
#1252
#1253
#1254
#1255
#1256
#1257
#1258
#1259
svaret är: 104241
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 41, in <module>
    if x+width > maxx:
TypeError: unsupported operand type(s) for +: 'int' and 'str'
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
1000 998
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
['#1 @ 1,3: 4x4\n', '#2 @ 3,1: 4x4\n', '#3 @ 5,5: 2x2\n']
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 34, in <module>
    (x,y)=size(claims)
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 21, in size
    claim = i.split()
NameError: name 'i' is not defined
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
['#1 @ 1,3: 4x4\n', '#2 @ 3,1: 4x4\n', '#3 @ 5,5: 2x2\n']
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 35, in <module>
    (x,y)=size(claims)
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 29, in size
    if x+width > maxx:
UnboundLocalError: local variable 'maxx' referenced before assignment
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
['#1 @ 1,3: 4x4\n', '#2 @ 3,1: 4x4\n', '#3 @ 5,5: 2x2\n']
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 38, in <module>
    fabric = [[0 for i in xrange(x)] for i in xrange(y)]
NameError: name 'xrange' is not defined
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
['#1 @ 1,3: 4x4\n', '#2 @ 3,1: 4x4\n', '#3 @ 5,5: 2x2\n']
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 54, in <module>
    antal = fabric[jx][ky]
IndexError: list index out of range
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
['#1 @ 1,3: 4x4\n', '#2 @ 3,1: 4x4\n', '#3 @ 5,5: 2x2\n']
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 54, in <module>
    antal = fabric[ky][jx]
IndexError: list index out of range
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
['#1 @ 1,3: 4x4\n', '#2 @ 3,1: 4x4\n', '#3 @ 5,5: 2x2\n']
1 3
1 4
1 5
1 6
2 3
2 4
2 5
2 6
3 3
3 4
3 5
3 6
4 3
4 4
4 5
4 6
3 1
3 2
3 3
3 4
4 1
4 2
4 3
4 4
5 1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 55, in <module>
    antal = fabric[ky][jx]
IndexError: list index out of range
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
['#1 @ 1,3: 4x4\n', '#2 @ 3,1: 4x4\n', '#3 @ 5,5: 2x2\n']
5 7
1 3
1 4
1 5
1 6
2 3
2 4
2 5
2 6
3 3
3 4
3 5
3 6
4 3
4 4
4 5
4 6
3 1
3 2
3 3
3 4
4 1
4 2
4 3
4 4
5 1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 56, in <module>
    antal = fabric[ky][jx]
IndexError: list index out of range
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
['#1 @ 1,3: 4x4\n', '#2 @ 3,1: 4x4\n', '#3 @ 5,5: 2x2\n']
maxx, maxy 5 7
1 3
1 4
1 5
1 6
2 3
2 4
2 5
2 6
3 3
3 4
3 5
3 6
4 3
4 4
4 5
4 6
3 1
3 2
3 3
3 4
4 1
4 2
4 3
4 4
5 1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 56, in <module>
    antal = fabric[ky][jx]
IndexError: list index out of range
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
['#1 @ 1,3: 4x4\n', '#2 @ 3,1: 4x4\n', '#3 @ 5,5: 2x2\n']
maxx, maxy 5 7
5 7
1 3
1 4
1 5
1 6
2 3
2 4
2 5
2 6
3 3
3 4
3 5
3 6
4 3
4 4
4 5
4 6
3 1
3 2
3 3
3 4
4 1
4 2
4 3
4 4
5 1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 56, in <module>
    antal = fabric[ky][jx]
IndexError: list index out of range
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
['#1 @ 1,3: 4x4\n', '#2 @ 3,1: 4x4\n', '#3 @ 5,5: 2x2\n']
maxx, maxy 5 7
5 7
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
1 3
1 4
1 5
1 6
2 3
2 4
2 5
2 6
3 3
3 4
3 5
3 6
4 3
4 4
4 5
4 6
3 1
3 2
3 3
3 4
4 1
4 2
4 3
4 4
5 1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 57, in <module>
    antal = fabric[ky][jx]
IndexError: list index out of range
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
['#1 @ 1,3: 4x4\n', '#2 @ 3,1: 4x4\n', '#3 @ 5,5: 2x2\n']
maxx, maxy 5 7
5 7
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
x, y 1 3
x, y 1 4
x, y 1 5
x, y 1 6
x, y 2 3
x, y 2 4
x, y 2 5
x, y 2 6
x, y 3 3
x, y 3 4
x, y 3 5
x, y 3 6
x, y 4 3
x, y 4 4
x, y 4 5
x, y 4 6
x, y 3 1
x, y 3 2
x, y 3 3
x, y 3 4
x, y 4 1
x, y 4 2
x, y 4 3
x, y 4 4
x, y 5 1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 57, in <module>
    antal = fabric[ky][jx]
IndexError: list index out of range
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
['#1 @ 1,3: 4x4\n', '#2 @ 3,1: 4x4\n', '#3 @ 5,5: 2x2\n']
maxx, maxy 5 7
5 7
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
x, y 1 3
x, y 1 4
x, y 1 5
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 57, in <module>
    antal = fabric[jx][ky]
IndexError: list index out of range
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
maxx, maxy 5 7
5 7
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
x, y 1 3
0
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
x, y 1 4
0
[[0, 0, 0, 0, 0], [0, 0, 0, 1, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
x, y 1 5
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 57, in <module>
    antal = fabric[jx][ky]
IndexError: list index out of range
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
maxx, maxy 5 7
5 7
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
x, y 1 3
[[0, 0, 0, 0, 0], [0, 0, 0, 1, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
x, y 1 4
[[0, 0, 0, 0, 0], [0, 0, 0, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
x, y 1 5
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 57, in <module>
    antal = fabric[jx][ky]
IndexError: list index out of range
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
maxx, maxy 5 7
5 7
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
j,k 0 0
x, y 1 3
[[0, 0, 0, 0, 0], [0, 0, 0, 1, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
j,k 0 1
x, y 1 4
[[0, 0, 0, 0, 0], [0, 0, 0, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
j,k 0 2
x, y 1 5
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 58, in <module>
    antal = fabric[jx][ky]
IndexError: list index out of range
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
maxx, maxy 5 7
5 7
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
j,k 0 0
x, y 1 3
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
j,k 0 1
x, y 1 4
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0], [0, 1, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
j,k 0 2
x, y 1 5
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0], [0, 1, 0, 0, 0], [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]]
j,k 0 3
x, y 1 6
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0], [0, 1, 0, 0, 0], [0, 1, 0, 0, 0], [0, 1, 0, 0, 0]]
j,k 1 0
x, y 2 3
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 1, 0, 0], [0, 1, 0, 0, 0], [0, 1, 0, 0, 0], [0, 1, 0, 0, 0]]
j,k 1 1
x, y 2 4
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 1, 0, 0], [0, 1, 1, 0, 0], [0, 1, 0, 0, 0], [0, 1, 0, 0, 0]]
j,k 1 2
x, y 2 5
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 1, 0, 0], [0, 1, 1, 0, 0], [0, 1, 1, 0, 0], [0, 1, 0, 0, 0]]
j,k 1 3
x, y 2 6
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 1, 0, 0], [0, 1, 1, 0, 0], [0, 1, 1, 0, 0], [0, 1, 1, 0, 0]]
j,k 2 0
x, y 3 3
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 1, 1, 0], [0, 1, 1, 0, 0], [0, 1, 1, 0, 0], [0, 1, 1, 0, 0]]
j,k 2 1
x, y 3 4
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 1, 1, 0], [0, 1, 1, 1, 0], [0, 1, 1, 0, 0], [0, 1, 1, 0, 0]]
j,k 2 2
x, y 3 5
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 1, 1, 0], [0, 1, 1, 1, 0], [0, 1, 1, 1, 0], [0, 1, 1, 0, 0]]
j,k 2 3
x, y 3 6
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 1, 1, 0], [0, 1, 1, 1, 0], [0, 1, 1, 1, 0], [0, 1, 1, 1, 0]]
j,k 3 0
x, y 4 3
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [0, 1, 1, 1, 0], [0, 1, 1, 1, 0]]
j,k 3 1
x, y 4 4
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [0, 1, 1, 1, 0], [0, 1, 1, 1, 0]]
j,k 3 2
x, y 4 5
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [0, 1, 1, 1, 0]]
j,k 3 3
x, y 4 6
[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [0, 1, 1, 1, 1]]
j,k 0 0
x, y 3 1
[[0, 0, 0, 0, 0], [0, 0, 0, 1, 0], [0, 0, 0, 0, 0], [0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [0, 1, 1, 1, 1]]
j,k 0 1
x, y 3 2
[[0, 0, 0, 0, 0], [0, 0, 0, 1, 0], [0, 0, 0, 1, 0], [0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [0, 1, 1, 1, 1]]
j,k 0 2
x, y 3 3
[[0, 0, 0, 0, 0], [0, 0, 0, 1, 0], [0, 0, 0, 1, 0], [0, 1, 1, 2, 1], [0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [0, 1, 1, 1, 1]]
j,k 0 3
x, y 3 4
[[0, 0, 0, 0, 0], [0, 0, 0, 1, 0], [0, 0, 0, 1, 0], [0, 1, 1, 2, 1], [0, 1, 1, 2, 1], [0, 1, 1, 1, 1], [0, 1, 1, 1, 1]]
j,k 1 0
x, y 4 1
[[0, 0, 0, 0, 0], [0, 0, 0, 1, 1], [0, 0, 0, 1, 0], [0, 1, 1, 2, 1], [0, 1, 1, 2, 1], [0, 1, 1, 1, 1], [0, 1, 1, 1, 1]]
j,k 1 1
x, y 4 2
[[0, 0, 0, 0, 0], [0, 0, 0, 1, 1], [0, 0, 0, 1, 1], [0, 1, 1, 2, 1], [0, 1, 1, 2, 1], [0, 1, 1, 1, 1], [0, 1, 1, 1, 1]]
j,k 1 2
x, y 4 3
[[0, 0, 0, 0, 0], [0, 0, 0, 1, 1], [0, 0, 0, 1, 1], [0, 1, 1, 2, 2], [0, 1, 1, 2, 1], [0, 1, 1, 1, 1], [0, 1, 1, 1, 1]]
j,k 1 3
x, y 4 4
[[0, 0, 0, 0, 0], [0, 0, 0, 1, 1], [0, 0, 0, 1, 1], [0, 1, 1, 2, 2], [0, 1, 1, 2, 2], [0, 1, 1, 1, 1], [0, 1, 1, 1, 1]]
j,k 2 0
x, y 5 1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 58, in <module>
    antal = fabric[ky][jx]
IndexError: list index out of range
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
maxx, maxy 5 7
5 7
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
j,k 0 0
x, y 1 3
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
j,k 0 1
x, y 1 4
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
j,k 0 2
x, y 1 5
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
j,k 0 3
x, y 1 6
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
j,k 1 0
x, y 2 3
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
j,k 1 1
x, y 2 4
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
j,k 1 2
x, y 2 5
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
j,k 1 3
x, y 2 6
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
j,k 2 0
x, y 3 3
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
j,k 2 1
x, y 3 4
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
j,k 2 2
x, y 3 5
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
j,k 2 3
x, y 3 6
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0]]
j,k 3 0
x, y 4 3
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0]]
j,k 3 1
x, y 4 4
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0]]
j,k 3 2
x, y 4 5
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0]]
j,k 3 3
x, y 4 6
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0]]
j,k 0 0
x, y 3 1
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0]]
j,k 0 1
x, y 3 2
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0]]
j,k 0 2
x, y 3 3
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0], [0, 1, 1, 2, 1, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0]]
j,k 0 3
x, y 3 4
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0], [0, 1, 1, 2, 1, 0], [0, 1, 1, 2, 1, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0]]
j,k 1 0
x, y 4 1
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0], [0, 1, 1, 2, 1, 0], [0, 1, 1, 2, 1, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0]]
j,k 1 1
x, y 4 2
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0], [0, 1, 1, 2, 1, 0], [0, 1, 1, 2, 1, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0]]
j,k 1 2
x, y 4 3
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0], [0, 1, 1, 2, 2, 0], [0, 1, 1, 2, 1, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0]]
j,k 1 3
x, y 4 4
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0], [0, 1, 1, 2, 2, 0], [0, 1, 1, 2, 2, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0]]
j,k 2 0
x, y 5 1
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0], [0, 1, 1, 2, 2, 0], [0, 1, 1, 2, 2, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0]]
j,k 2 1
x, y 5 2
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1], [0, 1, 1, 2, 2, 0], [0, 1, 1, 2, 2, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0]]
j,k 2 2
x, y 5 3
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1], [0, 1, 1, 2, 2, 1], [0, 1, 1, 2, 2, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0]]
j,k 2 3
x, y 5 4
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1], [0, 1, 1, 2, 2, 1], [0, 1, 1, 2, 2, 1], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0]]
j,k 3 0
x, y 6 1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 58, in <module>
    antal = fabric[ky][jx]
IndexError: list index out of range
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
maxx, maxy 5 7
storlek: 5 7
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
j,k 0 0
x, y 1 3
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
j,k 0 1
x, y 1 4
[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
j,k 0Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 54, in <module>
    print("j,k",j, k)
KeyboardInterrupt
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
maxx, maxy 5 7
storlek: 5 7
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 0 0
x, y 1 3
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 0 1
x, y 1 4
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 0 2
x, y 1 5
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 0 3
x, y 1 6
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 1 0
x, y 2 3
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 1 1
x, y 2 4
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 1 2
x, y 2 5
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 1 3
x, y 2 6
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 2 0
x, y 3 3
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 2 1
x, y 3 4
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 2 2
x, y 3 5
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 2 3
x, y 3 6
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 3 0
x, y 4 3
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 3 1
x, y 4 4
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 3 2
x, y 4 5
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 3 3
x, y 4 6
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 0 0
x, y 3 1
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 0 1
x, y 3 2
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 0 2
x, y 3 3
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 2, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 0 3
x, y 3 4
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 2, 1, 0, 0], [0, 1, 1, 2, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 1 0
x, y 4 1
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 1, 1, 2, 1, 0, 0], [0, 1, 1, 2, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 1 1
x, y 4 2
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 2, 1, 0, 0], [0, 1, 1, 2, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 1 2
x, y 4 3
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 2, 2, 0, 0], [0, 1, 1, 2, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 1 3
x, y 4 4
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 2, 2, 0, 0], [0, 1, 1, 2, 2, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 2 0
x, y 5 1
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 2, 2, 0, 0], [0, 1, 1, 2, 2, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 2 1
x, y 5 2
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0], [0, 1, 1, 2, 2, 0, 0], [0, 1, 1, 2, 2, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 2 2
x, y 5 3
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0], [0, 1, 1, 2, 2, 1, 0], [0, 1, 1, 2, 2, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 2 3
x, y 5 4
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0], [0, 1, 1, 2, 2, 1, 0], [0, 1, 1, 2, 2, 1, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 3 0
x, y 6 1
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0], [0, 1, 1, 2, 2, 1, 0], [0, 1, 1, 2, 2, 1, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 3 1
x, y 6 2
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 2, 2, 1, 0], [0, 1, 1, 2, 2, 1, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 3 2
x, y 6 3
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 2, 2, 1, 1], [0, 1, 1, 2, 2, 1, 0], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 3 3
x, y 6 4
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 2, 2, 1, 1], [0, 1, 1, 2, 2, 1, 1], [0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 0 0
x, y 5 5
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 2, 2, 1, 1], [0, 1, 1, 2, 2, 1, 1], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 0 1
x, y 5 6
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 2, 2, 1, 1], [0, 1, 1, 2, 2, 1, 1], [0, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 1 0
x, y 6 5
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 2, 2, 1, 1], [0, 1, 1, 2, 2, 1, 1], [0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
j,k 1 1
x, y 6 6
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 2, 2, 1, 1], [0, 1, 1, 2, 2, 1, 1], [0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 2, 2, 1, 1], [0, 1, 1, 2, 2, 1, 1], [0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
7
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
7
9
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
7
9
svaret är: 4
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc3a-take2.py", line 47, in <module>
    antal = fabric[ky][jx]
IndexError: list index out of range
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
1552
1362
svaret är: 104241
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
('COM', '1MF')
('1MF', '99H')
('99H', 'XDD')
('XDD', 'YXX')
('YXX', 'MJZ')
('MJZ', 'V2W')
('MJZ', 'SLV')
('SLV', 'C4Y')
('C4Y', '67J')
('67J', 'GSQ')
('GSQ', 'GBX')
('GBX', 'LVT')
('LVT', 'LGV')
('V2W', 'J7P')
('J7P', 'F22')
('F22', 'D5P')
('D5P', 'XF3')
('XF3', 'JFJ')Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 33, in <module>
    sorted = sorted + [(getroot())]
  File "/Users/luxia/Documents/aoc6a-take2.py", line 25, in getroot
    print(root)
KeyboardInterrupt
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 50, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 44, in create_tree
    tree.create_node(root[1], root[0])
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 309, in create_node
    self.add_node(node, parent)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 262, in add_node
    raise DuplicatedNodeIdError("Can't create node "
treelib.exceptions.DuplicatedNodeIdError: Can't create node with ID 'COM'
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 51, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 45, in create_tree
    tree.create_node(root[1], root[0])
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 309, in create_node
    self.add_node(node, parent)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 262, in add_node
    raise DuplicatedNodeIdError("Can't create node "
treelib.exceptions.DuplicatedNodeIdError: Can't create node with ID 'COM'
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
rot: ('COM', '1MF')
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 52, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 46, in create_tree
    tree.create_node(root[1], root[0])
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 309, in create_node
    self.add_node(node, parent)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 262, in add_node
    raise DuplicatedNodeIdError("Can't create node "
treelib.exceptions.DuplicatedNodeIdError: Can't create node with ID 'COM'
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
rot: ('COM', '1MF')
COM 1MF
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 53, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 47, in create_tree
    tree.create_node(root[1], root[0])
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 309, in create_node
    self.add_node(node, parent)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 262, in add_node
    raise DuplicatedNodeIdError("Can't create node "
treelib.exceptions.DuplicatedNodeIdError: Can't create node with ID 'COM'
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
rot: ('COM', '1MF')
COM 1MF
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 52, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 46, in create_tree
    tree.create_node(root[1], root[0])
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 309, in create_node
    self.add_node(node, parent)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 262, in add_node
    raise DuplicatedNodeIdError("Can't create node "
treelib.exceptions.DuplicatedNodeIdError: Can't create node with ID 'COM'
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
rot: ('COM', '1MF')
COM 1MF
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 54, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 45, in create_tree
    print(kartan.all_nodes())
NameError: name 'kartan' is not defined
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
rot: ('COM', '1MF')
COM 1MF
[Node(tag=COM, identifier=COM, data=None)]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 54, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 47, in create_tree
    tree.create_node(root[1], root[0])
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 309, in create_node
    self.add_node(node, parent)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 262, in add_node
    raise DuplicatedNodeIdError("Can't create node "
treelib.exceptions.DuplicatedNodeIdError: Can't create node with ID 'COM'
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
rot: ('COM', '1MF')
COM 1MF
[Node(tag=COM, identifier=COM, data=None)]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 54, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 50, in create_tree
    add_children(far)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 33, in add_children
    tree.create_node(son, son, far)
NameError: name 'tree' is not defined
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
rot: ('COM', '1MF')
COM 1MF
[Node(tag=COM, identifier=COM, data=None)]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 54, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 50, in create_tree
    add_children(far)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 33, in add_children
    kartan.create_node(son, son, far)
NameError: name 'kartan' is not defined
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
rot: ('COM', '1MF')
COM 1MF
[Node(tag=COM, identifier=COM, data=None)]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 54, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 50, in create_tree
    tree = add_children(far, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 35, in add_children
    add_children(son)
TypeError: add_children() missing 1 required positional argument: 'tree'
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
rot: ('COM', '1MF')
COM 1MF
[Node(tag=COM, identifier=COM, data=None)]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 54, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 50, in create_tree
    tree = add_children(far, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 35, in add_children
    add_children(son, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 33, in add_children
    tree.create_node(son, son, far)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 309, in create_node
    self.add_node(node, parent)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 262, in add_node
    raise DuplicatedNodeIdError("Can't create node "
treelib.exceptions.DuplicatedNodeIdError: Can't create node with ID '32R'
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
rot: ('COM', '1MF')
COM 1MF
[Node(tag=COM, identifier=COM, data=None)]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 54, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 50, in create_tree
    tree = add_children(far, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 35, in add_children
    add_children(son, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 33, in add_children
    tree.create_node(son, son, parent=far)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 309, in create_node
    self.add_node(node, parent)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 262, in add_node
    raise DuplicatedNodeIdError("Can't create node "
treelib.exceptions.DuplicatedNodeIdError: Can't create node with ID '32R'
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
rot: ('COM', '1MF')
COM 1MF
[Node(tag=COM, identifier=COM, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None)]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 56, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 52, in create_tree
    tree = add_children(far, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 35, in add_children
    add_children(son, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 33, in add_children
    tree.create_node(son, son, parent=far)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 309, in create_node
    self.add_node(node, parent)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 262, in add_node
    raise DuplicatedNodeIdError("Can't create node "
treelib.exceptions.DuplicatedNodeIdError: Can't create node with ID '32R'
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
rot: ('COM', '1MF')
COM 1MF
[Node(tag=COM, identifier=COM, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=32R, identifier=32R, data=None)]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 56, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 52, in create_tree
    tree = add_children(far, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 36, in add_children
    add_children(son, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 33, in add_children
    tree.create_node(son, son, parent=far)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 309, in create_node
    self.add_node(node, parent)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 262, in add_node
    raise DuplicatedNodeIdError("Can't create node "
treelib.exceptions.DuplicatedNodeIdError: Can't create node with ID '32R'
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
rot: ('COM', '1MF')
COM 1MF
[Node(tag=COM, identifier=COM, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None)]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 57, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 53, in create_tree
    tree = add_children(far, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 32, in add_children
    son == indata[i][1]
UnboundLocalError: local variable 'son' referenced before assignment
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
rot: ('COM', '1MF')
COM 1MF
[Node(tag=COM, identifier=COM, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None)]
far, x 1MF 97W
far, x 1MF R63
far, x 1MF 19C
far, x 1MF F85
far, x 1MF 5D9
far, x 1MF RG5
far, x 1MF HJC
far, x 1MF 46W
far, x 1MF BFP
far, x 1MF 2M5
far, x 1MF CJD
far, x 1MF 8BK
far, x 1MF TWT
far, x 1MF KT1
far, x 1MF WG8
far, x 1MF FMZ
far, x 1MF 734
far, x 1MF 8XM
far, x 1MF TXP
far, x 1MF NLX
far, x 1MF 7ST
far, x 1MF W68
far, x 1MF S1J
far, x 1MF 5C2
far, x 1MF ZW4
far, x 1MF MHN
far, x 1MF 4FH
far, x 1MF 4SC
far, x 1MF 6D9
far, x 1MF L44
far, x 1MF KC5
far, x 1MF PFD
far, x 1MF 5JJ
far, x 1MF 63X
far, x 1MF N96
far, x 1MF WGN
far, x 1MF Y9P
far, x 1MF N6C
far, x 1MF 4KF
far, x 1MF M31
far, x 1MF W71
far, x 1MF FLV
far, x 1MF J6Q
far, x 1MF ZPF
far, x 1MF YXX
far, x 1MF Q43
far, x 1MF FPM
far, x 1MF TJX
far, x 1MF N94
far, x 1MF 6LN
far, x 1MF 9QK
far, x 1MF N81
far, x 1MF VG4
far, x 1MF MS6
far, x 1MF JBP
far, x 1MF SV7
far, x 1MF LZT
far, x 1MF 7FJ
far, x 1MF TYJ
far, x 1MF YJY
far, x 1MF KKL
far, x 1MF QBL
far, x 1MF R7W
far, x 1MF 1KP
far, x 1MF NKQ
far, x 1MF BVR
far, x 1MF 3ZW
far, x 1MF Q86
far, x 1MF V5D
far, x 1MF 7L7
far, x 1MF 6HC
far, x 1MF T2F
far, x 1MF KFX
far, x 1MF D1Z
far, x 1MF 5NH
far, x 1MF FRR
far, x 1MF GVY
far, x 1MF GBX
far, x 1MF KGZ
far, x 1MF GPZ
far, x 1MF 4QY
far, x 1MF 9VD
far, x 1MF 4LY
far, x 1MF P9Y
far, x 1MF WK5
far, x 1MF SPS
far, x 1MF VDN
far, x 1MF HCJ
far, x 1MF SLV
far, x 1MF MS6
far, x 1MF LPD
far, x 1MF CZ6
far, x 1MF VGT
far, x 1MF YS4
far, x 1MF SNR
far, x 1MF Z4P
far, x 1MF WQW
far, x 1MF 13Z
far, x 1MF 3Z2
far, x 1MF XZJ
far, x 1MF BH9
far, x 1MF Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 58, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 54, in create_tree
    tree = add_children(far, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 31, in add_children
    print("far, x", far, x)
KeyboardInterrupt
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
rot: ('COM', '1MF')
COM 1MF
[Node(tag=COM, identifier=COM, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None)]
far, x: 1MF 1MF
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 58, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 54, in create_tree
    tree = add_children(far, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 33, in add_children
    son == indata[i][1]
UnboundLocalError: local variable 'son' referenced before assignment
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
rot: ('COM', '1MF')
COM 1MF
[Node(tag=COM, identifier=COM, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None)]
far, x: 1MF 1MF
('1MF', '99H')
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 59, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 55, in create_tree
    tree = add_children(far, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 34, in add_children
    son == indata[i][1]
UnboundLocalError: local variable 'son' referenced before assignment
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
rot: ('COM', '1MF')
COM 1MF
[Node(tag=COM, identifier=COM, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None)]
far, x: 1MF 1MF
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None)]
far, x: 1MF 1MF
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 58, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 54, in create_tree
    tree = add_children(far, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 38, in add_children
    add_children(far, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 34, in add_children
    tree.create_node(son, son, parent=far)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 309, in create_node
    self.add_node(node, parent)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/treelib/tree.py", line 262, in add_node
    raise DuplicatedNodeIdError("Can't create node "
treelib.exceptions.DuplicatedNodeIdError: Can't create node with ID '99H'
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
rot: ('COM', '1MF')
COM 1MF
[Node(tag=COM, identifier=COM, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None)]Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 57, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 53, in create_tree
    tree = add_children(far, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 37, in add_children
    add_children(far, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 37, in add_children
    add_children(far, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 37, in add_children
    add_children(far, tree)
  [Previous line repeated 32 more times]
  File "/Users/luxia/Documents/aoc6a-take2.py", line 34, in add_children
    print(tree.all_nodes())
KeyboardInterrupt
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None), Node(tag=FH4, identifier=FH4, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None), Node(tag=FH4, identifier=FH4, data=None), Node(tag=S2K, identifier=S2K, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None), Node(tag=FH4, identifier=FH4, data=None), Node(tag=S2K, identifier=S2K, data=None), Node(tag=LJW, identifier=LJW, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None), Node(tag=FH4, identifier=FH4, data=None), Node(tag=S2K, identifier=S2K, data=None), Node(tag=LJW, identifier=LJW, data=None), Node(tag=5QL, identifier=5QL, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None), Node(tag=FH4, identifier=FH4, data=None), Node(tag=S2K, identifier=S2K, data=None), Node(tag=LJW, identifier=LJW, data=None), Node(tag=5QL, identifier=5QL, data=None), Node(tag=L54, identifier=L54, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None), Node(tag=FH4, identifier=FH4, data=None), Node(tag=S2K, identifier=S2K, data=None), Node(tag=LJW, identifier=LJW, data=None), Node(tag=5QL, identifier=5QL, data=None), Node(tag=L54, identifier=L54, data=None), Node(tag=YJ8, identifier=YJ8, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None), Node(tag=FH4, identifier=FH4, data=None), Node(tag=S2K, identifier=S2K, data=None), Node(tag=LJW, identifier=LJW, data=None), Node(tag=5QL, identifier=5QL, data=None), Node(tag=L54, identifier=L54, data=None), Node(tag=YJ8, identifier=YJ8, data=None), Node(tag=5N7, identifier=5N7, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None), Node(tag=FH4, identifier=FH4, data=None), Node(tag=S2K, identifier=S2K, data=None), Node(tag=LJW, identifier=LJW, data=None), Node(tag=5QL, identifier=5QL, data=None), Node(tag=L54, identifier=L54, data=None), Node(tag=YJ8, identifier=YJ8, data=None), Node(tag=5N7, identifier=5N7, data=None), Node(tag=6QN, identifier=6QN, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None), Node(tag=FH4, identifier=FH4, data=None), Node(tag=S2K, identifier=S2K, data=None), Node(tag=LJW, identifier=LJW, data=None), Node(tag=5QL, identifier=5QL, data=None), Node(tag=L54, identifier=L54, data=None), Node(tag=YJ8, identifier=YJ8, data=None), Node(tag=5N7, identifier=5N7, data=None), Node(tag=6QN, identifier=6QN, data=None), Node(tag=4TH, identifier=4TH, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None), Node(tag=FH4, identifier=FH4, data=None), Node(tag=S2K, identifier=S2K, data=None), Node(tag=LJW, identifier=LJW, data=None), Node(tag=5QL, identifier=5QL, data=None), Node(tag=L54, identifier=L54, data=None), Node(tag=YJ8, identifier=YJ8, data=None), Node(tag=5N7, identifier=5N7, data=None), Node(tag=6QN, identifier=6QN, data=None), Node(tag=4TH, identifier=4TH, data=None), Node(tag=4KF, identifier=4KF, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None), Node(tag=FH4, identifier=FH4, data=None), Node(tag=S2K, identifier=S2K, data=None), Node(tag=LJW, identifier=LJW, data=None), Node(tag=5QL, identifier=5QL, data=None), Node(tag=L54, identifier=L54, data=None), Node(tag=YJ8, identifier=YJ8, data=None), Node(tag=5N7, identifier=5N7, data=None), Node(tag=6QN, identifier=6QN, data=None), Node(tag=4TH, identifier=4TH, data=None), Node(tag=4KF, identifier=4KF, data=None), Node(tag=1JP, identifier=1JP, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None), Node(tag=FH4, identifier=FH4, data=None), Node(tag=S2K, identifier=S2K, data=None), Node(tag=LJW, identifier=LJW, data=None), Node(tag=5QL, identifier=5QL, data=None), Node(tag=L54, identifier=L54, data=None), Node(tag=YJ8, identifier=YJ8, data=None), Node(tag=5N7, identifier=5N7, data=None), Node(tag=6QN, identifier=6QN, data=None), Node(tag=4TH, identifier=4TH, data=None), Node(tag=4KF, identifier=4KF, data=None), Node(tag=1JP, identifier=1JP, data=None), Node(tag=7WX, identifier=7WX, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None), Node(tag=FH4, identifier=FH4, data=None), Node(tag=S2K, identifier=S2K, data=None), Node(tag=LJW, identifier=LJW, data=None), Node(tag=5QL, identifier=5QL, data=None), Node(tag=L54, identifier=L54, data=None), Node(tag=YJ8, identifier=YJ8, data=None), Node(tag=5N7, identifier=5N7, data=None), Node(tag=6QN, identifier=6QN, data=None), Node(tag=4TH, identifier=4TH, data=None), Node(tag=4KF, identifier=4KF, data=None), Node(tag=1JP, identifier=1JP, data=None), Node(tag=7WX, identifier=7WX, data=None), Node(tag=P34, identifier=P34, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None), Node(tag=FH4, identifier=FH4, data=None), Node(tag=S2K, identifier=S2K, data=None), Node(tag=LJW, identifier=LJW, data=None), Node(tag=5QL, identifier=5QL, data=None), Node(tag=L54, identifier=L54, data=None), Node(tag=YJ8, identifier=YJ8, data=None), Node(tag=5N7, identifier=5N7, data=None), Node(tag=6QN, identifier=6QN, data=None), Node(tag=4TH, identifier=4TH, data=None), Node(tag=4KF, identifier=4KF, data=None), Node(tag=1JP, identifier=1JP, data=None), Node(tag=7WX, identifier=7WX, data=None), Node(tag=P34, identifier=P34, data=None), Node(tag=DW1, identifier=DW1, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None), Node(tag=FH4, identifier=FH4, data=None), Node(tag=S2K, identifier=S2K, data=None), Node(tag=LJW, identifier=LJW, data=None), Node(tag=5QL, identifier=5QL, data=None), Node(tag=L54, identifier=L54, data=None), Node(tag=YJ8, identifier=YJ8, data=None), Node(tag=5N7, identifier=5N7, data=None), Node(tag=6QN, identifier=6QN, data=None), Node(tag=4TH, identifier=4TH, data=None), Node(tag=4KF, identifier=4KF, data=None), Node(tag=1JP, identifier=1JP, data=None), Node(tag=7WX, identifier=7WX, data=None), Node(tag=P34, identifier=P34, data=None), Node(tag=DW1, identifier=DW1, data=None), Node(tag=9MB, identifier=9MB, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None), Node(tag=FH4, identifier=FH4, data=None), Node(tag=S2K, identifier=S2K, data=None), Node(tag=LJW, identifier=LJW, data=None), Node(tag=5QL, identifier=5QL, data=None), Node(tag=L54, identifier=L54, data=None), Node(tag=YJ8, identifier=YJ8, data=None), Node(tag=5N7, identifier=5N7, data=None), Node(tag=6QN, identifier=6QN, data=None), Node(tag=4TH, identifier=4TH, data=None), Node(tag=4KF, identifier=4KF, data=None), Node(tag=1JP, identifier=1JP, data=None), Node(tag=7WX, identifier=7WX, data=None), Node(tag=P34, identifier=P34, data=None), Node(tag=DW1, identifier=DW1, data=None), Node(tag=9MB, identifier=9MB, data=None), Node(tag=M8X, identifier=M8X, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None), Node(tag=FH4, identifier=FH4, data=None), Node(tag=S2K, identifier=S2K, data=None), Node(tag=LJW, identifier=LJW, data=None), Node(tag=5QL, identifier=5QL, data=None), Node(tag=L54, identifier=L54, data=None), Node(tag=YJ8, identifier=YJ8, data=None), Node(tag=5N7, identifier=5N7, data=None), Node(tag=6QN, identifier=6QN, data=None), Node(tag=4TH, identifier=4TH, data=None), Node(tag=4KF, identifier=4KF, data=None), Node(tag=1JP, identifier=1JP, data=None), Node(tag=7WX, identifier=7WX, data=None), Node(tag=P34, identifier=P34, data=None), Node(tag=DW1, identifier=DW1, data=None), Node(tag=9MB, identifier=9MB, data=None), Node(tag=M8X, identifier=M8X, data=None), Node(tag=3GG, identifier=3GG, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None), Node(tag=FH4, identifier=FH4, data=None), Node(tag=S2K, identifier=S2K, data=None), Node(tag=LJW, identifier=LJW, data=None), Node(tag=5QL, identifier=5QL, data=None), Node(tag=L54, identifier=L54, data=None), Node(tag=YJ8, identifier=YJ8, data=None), Node(tag=5N7, identifier=5N7, data=None), Node(tag=6QN, identifier=6QN, data=None), Node(tag=4TH, identifier=4TH, data=None), Node(tag=4KF, identifier=4KF, data=None), Node(tag=1JP, identifier=1JP, data=None), Node(tag=7WX, identifier=7WX, data=None), Node(tag=P34, identifier=P34, data=None), Node(tag=DW1, identifier=DW1, data=None), Node(tag=9MB, identifier=9MB, data=None), Node(tag=M8X, identifier=M8X, data=None), Node(tag=3GG, identifier=3GG, data=None), Node(tag=3M8, identifier=3M8, data=None)]
[Node(tag=COM, identifier=COM, data=None), Node(tag=1MF, identifier=1MF, data=None), Node(tag=99H, identifier=99H, data=None), Node(tag=XDD, identifier=XDD, data=None), Node(tag=YXX, identifier=YXX, data=None), Node(tag=MJZ, identifier=MJZ, data=None), Node(tag=V2W, identifier=V2W, data=None), Node(tag=J7P, identifier=J7P, data=None), Node(tag=F22, identifier=F22, data=None), Node(tag=D5P, identifier=D5P, data=None), Node(tag=XF3, identifier=XF3, data=None), Node(tag=JFJ, identifier=JFJ, data=None), Node(tag=7MF, identifier=7MF, data=None), Node(tag=1XZ, identifier=1XZ, data=None), Node(tag=642, identifier=642, data=None), Node(tag=KT1, identifier=KT1, data=None), Node(tag=7FJ, identifier=7FJ, data=None), Node(tag=SV7, identifier=SV7, data=None), Node(tag=C2F, identifier=C2F, data=None), Node(tag=HQG, identifier=HQG, data=None), Node(tag=VMM, identifier=VMM, data=None), Node(tag=B3T, identifier=B3T, data=None), Node(tag=T75, identifier=T75, data=None), Node(tag=FGS, identifier=FGS, data=None), Node(tag=5MP, identifier=5MP, data=None), Node(tag=1R5, identifier=1R5, data=None), Node(tag=MF3, identifier=MF3, data=None), Node(tag=S26, identifier=S26, data=None), Node(tag=Y9Q, identifier=Y9Q, data=None), Node(tag=B3J, identifier=B3J, data=None), Node(tag=8VM, identifier=8VM, data=None), Node(tag=F3N, identifier=F3N, data=None), Node(tag=XTF, identifier=XTF, data=None), Node(tag=KCX, identifier=KCX, data=None), Node(tag=SH1, identifier=SH1, data=None), Node(tag=MG8, identifier=MG8, data=None), Node(tag=P8P, identifier=P8P, data=None), Node(tag=2BH, identifier=2BH, data=None), Node(tag=1WY, identifier=1WY, data=None), Node(tag=62K, identifier=62K, data=None), Node(tag=JNV, identifier=JNV, data=None), Node(tag=NLX, identifier=NLX, data=None), Node(tag=TNW, identifier=TNW, data=None), Node(tag=8WF, identifier=8WF, data=None), Node(tag=KKL, identifier=KKL, data=None), Node(tag=JDY, identifier=JDY, data=None), Node(tag=X4P, identifier=X4P, data=None), Node(tag=FH4, identifier=FH4, data=None), Node(tag=S2K, identifier=S2K, data=None), Node(tag=LJW, identifier=LJW, data=None), Node(tag=5QL, identifier=5QL, data=None), Node(tag=L54, identifier=L54, data=None), Node(tag=YJ8, identifier=YJ8, data=None), Node(tag=5N7, identifier=5N7, data=None), Node(tag=6QN, identifier=6QN, data=None), Node(tag=4TH, identifier=4TH, data=None), Node(tag=4KF, identifier=4KF, data=None), Node(tag=1JP, identifier=1JP, data=None), Node(tag=7WX, identifier=7WX, data=None), Node(tag=P34, identifier=P34, data=None), Node(tag=DW1, identifier=DW1, data=None), Node(tag=9MB, identifier=9MB, data=None), Node(tag=M8X, identifier=M8X, data=None), Node(tag=3GG, identifier=3GG, data=None), Node(tag=3M8, identifier=3M8, data=None), Node(tag=54Y, identifier=54Y, data=None)]Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc6a-take2.py", line 51, in <module>
    kartan = create_tree()
  File "/Users/luxia/Documents/aoc6a-take2.py", line 47, in create_tree
    tree = add_children(far, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 35, in add_children
    add_children(son, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 35, in add_children
    add_children(son, tree)
  File "/Users/luxia/Documents/aoc6a-take2.py", line 35, in add_children
    add_children(son, tree)
  [Previous line repeated 55 more times]
  File "/Users/luxia/Documents/aoc6a-take2.py", line 34, in add_children
    print(tree.all_nodes())
KeyboardInterrupt
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6a-take2.py ===================
142497
>>> 
======================= RESTART: /Users/luxia/Documents/aoc6a.py ======================
COM
142497
>>> 
==================== RESTART: /Users/luxia/Documents/aoc6b-take2.py ===================
6CD is common ancestor
svaret är: 301
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
svaret är: 104241
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
#1
#2
#3
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 1, 1, 2, 2, 1, 1, 0, 0, 0], [0, 1, 1, 2, 2, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
#1
[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 1, 1, 2, 2, 1, 1, 0, 0, 0], [0, 1, 1, 2, 2, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
#2
[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 1, 1, 2, 2, 1, 1, 0, 0, 0], [0, 1, 1, 2, 2, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
#3
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
0
0
0
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
1
1
1
1
1
1
1
1
2
1
1
2
1
1
1
1
#3
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
#3
>>> 
================ RESTART: /Users/luxia/Documents/aoc2018/aoc3a-take2.py ===============
#806
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
['[1518-06-02 23:58] Guard #179 begins shift\n', '[1518-09-18 00:43] wakes up\n', '[1518-06-06 00:10] falls asleep\n', '[1518-05-12 00:52] wakes up\n', '[1518-07-02 00:39] wakes up\n', '[1518-07-21 23:50] Guard #2917 begins shift\n', '[1518-09-22 00:47] wakes up\n', '[1518-09-09 00:31] wakes up\n', '[1518-07-21 00:15] wakes up\n', '[1518-07-30 00:43] wakes up\n', '[1518-10-08 00:52] wakes up\n', '[1518-07-26 23:57] Guard #1051 begins shift\n', '[1518-07-17 00:00] Guard #2273 begins shift\n', '[1518-08-18 00:24] falls asleep\n', '[1518-09-08 00:02] falls asleep\n', '[1518-08-19 00:00] Guard #2917 begins shift\n', '[1518-08-21 00:01] Guard #251 begins shift\n', '[1518-08-08 00:39] falls asleep\n', '[1518-09-08 23:57] Guard #2273 begins shift\n', '[1518-08-17 23:46] Guard #2971 begins shift\n', '[1518-06-30 00:04] falls asleep\n', '[1518-07-10 00:00] Guard #1783 begins shift\n', '[1518-10-30 00:03] Guard #2657 begins shift\n', '[1518-10-20 00:45] wakes up\n', '[1518-11-06 00:13] wakes up\n', '[1518-04-12 00:02] Guard #2273 begins shift\n', '[1518-08-13 00:57] wakes up\n', '[1518-07-03 00:48] falls asleep\n', '[1518-11-07 00:33] wakes up\n', '[1518-08-30 00:30] wakes up\n', '[1518-05-15 23:56] Guard #1811 begins shift\n', '[1518-07-09 00:26] wakes up\n', '[1518-07-05 23:58] Guard #1051 begins shift\n', '[1518-06-10 00:47] falls asleep\n', '[1518-06-29 00:40] falls asleep\n', '[1518-07-25 00:52] wakes up\n', '[1518-08-01 00:27] falls asleep\n', '[1518-06-15 00:53] wakes up\n', '[1518-05-24 00:15] wakes up\n', '[1518-06-15 00:50] falls asleep\n', '[1518-07-15 00:25] wakes up\n', '[1518-08-22 00:20] falls asleep\n', '[1518-04-26 00:18] falls asleep\n', '[1518-10-10 00:43] falls asleep\n', '[1518-07-20 23:51] Guard #2467 begins shift\n', '[1518-06-17 00:02] Guard #3467 begins shift\n', '[1518-09-06 00:01] Guard #3319 begins shift\n', '[1518-10-21 00:02] Guard #751 begins shift\n', '[1518-07-11 00:09] falls asleep\n', '[1518-06-02 00:11] falls asleep\n', '[1518-05-23 00:57] wakes up\n', '[1518-06-26 00:22] falls asleep\n', '[1518-11-21 00:07] falls asleep\n', '[1518-09-11 00:07] falls asleep\n', '[1518-07-17 00:35] wakes up\n', '[1518-06-27 00:45] wakes up\n', '[1518-08-06 00:21] falls asleep\n', '[1518-08-11 00:51] falls asleep\n', '[1518-11-02 00:19] falls asleep\n', '[1518-07-01 00:51] wakes up\n', '[1518-10-05 00:45] wakes up\n', '[1518-05-17 00:21] falls asleep\n', '[1518-04-18 23:56] Guard #643 begins shift\n', '[1518-11-22 00:44] wakes up\n', '[1518-07-23 00:50] wakes up\n', '[1518-11-17 23:56] Guard #1783 begins shift\n', '[1518-07-22 00:46] wakes up\n', '[1518-06-29 00:25] falls asleep\n', '[1518-11-13 00:00] Guard #179 begins shift\n', '[1518-11-10 23:51] Guard #499 begins shift\n', '[1518-10-05 00:00] Guard #751 begins shift\n', '[1518-11-11 00:53] wakes up\n', '[1518-09-17 00:26] wakes up\n', '[1518-06-21 00:49] wakes up\n', '[1518-09-12 00:06] falls asleep\n', '[1518-04-18 00:25] falls asleep\n', '[1518-09-28 00:59] wakes up\n', '[1518-04-13 00:09] falls asleep\n', '[1518-06-01 00:36] wakes up\n', '[1518-07-23 23:56] Guard #643 begins shift\n', '[1518-09-09 00:54] wakes up\n', '[1518-11-06 00:19] falls asleep\n', '[1518-06-27 00:21] falls asleep\n', '[1518-11-17 00:46] wakes up\n', '[1518-07-07 00:47] falls asleep\n', '[1518-11-01 00:02] Guard #457 begins shift\n', '[1518-08-22 00:37] wakes up\n', '[1518-08-29 00:56] wakes up\n', '[1518-10-12 00:04] Guard #3167 begins shift\n', '[1518-04-13 00:41] falls asleep\n', '[1518-07-15 00:32] falls asleep\n', '[1518-06-11 00:47] wakes up\n', '[1518-05-23 00:41] falls asleep\n', '[1518-09-16 23:46] Guard #2657 begins shift\n', '[1518-08-29 23:50] Guard #251 begins shift\n', '[1518-10-06 23:51] Guard #2657 begins shift\n', '[1518-11-18 00:56] falls asleep\n', '[1518-05-24 00:43] wakes up\n', '[1518-11-18 00:59] wakes up\n', '[1518-04-18 00:13] wakes up\n', '[1518-06-19 00:01] Guard #499 begins shift\n', '[1518-05-31 00:40] wakes up\n', '[1518-10-15 00:56] falls asleep\n', '[1518-08-03 00:30] wakes up\n', '[1518-04-12 00:55] falls asleep\n', '[1518-10-23 00:00] Guard #2971 begins shift\n', '[1518-06-26 00:52] wakes up\n', '[1518-07-15 00:00] Guard #1051 begins shift\n', '[1518-07-08 00:26] falls asleep\n', '[1518-08-25 00:46] wakes up\n', '[1518-06-09 00:45] wakes up\n', '[1518-04-25 00:46] wakes up\n', '[1518-10-02 00:28] falls asleep\n', '[1518-04-23 23:57] Guard #1051 begins shift\n', '[1518-06-18 00:03] Guard #1783 begins shift\n', '[1518-05-04 00:04] Guard #2657 begins shift\n', '[1518-09-25 00:15] falls asleep\n', '[1518-06-01 00:00] Guard #643 begins shift\n', '[1518-05-06 00:54] falls asleep\n', '[1518-09-16 00:01] Guard #3319 begins shift\n', '[1518-11-16 00:00] Guard #3467 begins shift\n', '[1518-10-22 00:31] wakes up\n', '[1518-09-07 00:00] Guard #2273 begins shift\n', '[1518-06-22 23:47] Guard #643 begins shift\n', '[1518-09-11 00:45] wakes up\n', '[1518-05-06 00:01] Guard #751 begins shift\n', '[1518-10-15 00:21] falls asleep\n', '[1518-04-10 00:59] wakes up\n', '[1518-09-04 00:30] falls asleep\n', '[1518-08-20 00:11] falls asleep\n', '[1518-11-12 00:25] falls asleep\n', '[1518-10-25 23:57] Guard #911 begins shift\n', '[1518-10-01 00:46] falls asleep\n', '[1518-07-08 00:52] falls asleep\n', '[1518-09-01 00:27] falls asleep\n', '[1518-07-19 00:30] wakes up\n', '[1518-09-25 00:57] falls asleep\n', '[1518-05-21 00:41] falls asleep\n', '[1518-10-26 00:39] wakes up\n', '[1518-06-24 23:50] Guard #3319 begins shift\n', '[1518-08-18 00:51] wakes up\n', '[1518-08-25 23:56] Guard #1783 begins shift\n', '[1518-09-29 00:00] Guard #179 begins shift\n', '[1518-09-10 00:48] wakes up\n', '[1518-06-14 00:10] falls asleep\n', '[1518-05-20 00:38] falls asleep\n', '[1518-06-02 00:56] wakes up\n', '[1518-10-06 00:43] falls asleep\n', '[1518-05-16 00:48] wakes up\n', '[1518-04-15 00:00] Guard #179 begins shift\n', '[1518-09-24 23:59] Guard #2467 begins shift\n', '[1518-09-21 00:49] wakes up\n', '[1518-09-21 00:19] falls asleep\n', '[1518-07-17 00:51] wakes up\n', '[1518-04-27 00:41] wakes up\n', '[1518-05-09 00:39] falls asleep\n', '[1518-08-12 00:49] falls asleep\n', '[1518-09-15 00:37] falls asleep\n', '[1518-05-03 00:16] falls asleep\n', '[1518-08-16 23:49] Guard #2477 begins shift\n', '[1518-11-10 00:45] wakes up\n', '[1518-07-26 00:32] falls asleep\n', '[1518-08-06 00:01] Guard #499 begins shift\n', '[1518-07-30 00:26] falls asleep\n', '[1518-09-14 00:01] Guard #643 begins shift\n', '[1518-09-29 00:59] wakes up\n', '[1518-04-18 00:48] wakes up\n', '[1518-09-29 00:08] falls asleep\n', '[1518-10-29 00:46] falls asleep\n', '[1518-07-19 00:55] wakes up\n', '[1518-07-06 00:38] falls asleep\n', '[1518-09-05 00:22] falls asleep\n', '[1518-04-13 00:26] wakes up\n', '[1518-11-22 23:46] Guard #251 begins shift\n', '[1518-04-06 00:55] wakes up\n', '[1518-08-12 00:06] falls asleep\n', '[1518-04-28 00:01] Guard #2971 begins shift\n', '[1518-04-28 00:43] falls asleep\n', '[1518-05-09 00:33] falls asleep\n', '[1518-09-16 00:59] wakes up\n', '[1518-08-21 00:16] falls asleep\n', '[1518-09-02 00:10] falls asleep\n', '[1518-08-19 00:23] falls asleep\n', '[1518-05-16 00:19] falls asleep\n', '[1518-06-23 00:39] wakes up\n', '[1518-04-18 00:57] wakes up\n', '[1518-09-22 00:17] wakes up\n', '[1518-06-15 00:04] falls asleep\n', '[1518-10-13 00:00] Guard #1811 begins shift\n', '[1518-10-18 00:02] Guard #751 begins shift\n', '[1518-10-26 00:24] falls asleep\n', '[1518-05-10 00:53] falls asleep\n', '[1518-06-22 00:01] Guard #3319 begins shift\n', '[1518-11-13 00:56] falls asleep\n', '[1518-07-14 00:16] falls asleep\n', '[1518-05-21 00:57] wakes up\n', '[1518-10-06 00:50] wakes up\n', '[1518-06-21 00:36] falls asleep\n', '[1518-04-08 00:47] wakes up\n', '[1518-09-06 00:10] falls asleep\n', '[1518-10-02 00:58] wakes up\n', '[1518-05-28 00:03] falls asleep\n', '[1518-09-15 00:58] wakes up\n', '[1518-07-28 00:02] Guard #2477 begins shift\n', '[1518-10-02 00:35] wakes up\n', '[1518-08-19 00:33] wakes up\n', '[1518-07-14 00:27] wakes up\n', '[1518-08-31 00:33] falls asleep\n', '[1518-05-06 00:58] wakes up\n', '[1518-05-24 00:10] falls asleep\n', '[1518-05-20 00:01] Guard #643 begins shift\n', '[1518-04-12 00:32] falls asleep\n', '[1518-09-16 00:17] falls asleep\n', '[1518-05-27 00:16] falls asleep\n', '[1518-11-17 00:15] falls asleep\n', '[1518-08-28 00:08] wakes up\n', '[1518-08-29 00:13] falls asleep\n', '[1518-09-20 00:23] falls asleep\n', '[1518-05-25 00:46] falls asleep\n', '[1518-05-26 00:59] wakes up\n', '[1518-07-28 00:16] falls asleep\n', '[1518-08-28 00:36] wakes up\n', '[1518-11-16 00:58] wakes up\n', '[1518-10-06 00:59] wakes up\n', '[1518-05-13 00:40] falls asleep\n', '[1518-09-29 00:35] wakes up\n', '[1518-11-06 00:04] falls asleep\n', '[1518-04-09 23:57] Guard #619 begins shift\n', '[1518-05-09 23:58] Guard #2467 begins shift\n', '[1518-09-17 23:59] Guard #619 begins shift\n', '[1518-11-08 00:51] wakes up\n', '[1518-05-29 00:37] wakes up\n', '[1518-05-01 00:44] falls asleep\n', '[1518-04-14 00:03] falls asleep\n', '[1518-10-09 00:59] wakes up\n', '[1518-09-14 23:59] Guard #911 begins shift\n', '[1518-07-21 00:38] falls asleep\n', '[1518-08-11 00:00] Guard #2273 begins shift\n', '[1518-05-17 00:57] wakes up\n', '[1518-04-24 00:54] wakes up\n', '[1518-11-07 00:39] falls asleep\n', '[1518-04-15 00:39] falls asleep\n', '[1518-10-28 00:57] wakes up\n', '[1518-05-24 23:59] Guard #3319 begins shift\n', '[1518-11-07 00:58] wakes up\n', '[1518-10-28 00:08] falls asleep\n', '[1518-08-27 23:53] Guard #2273 begins shift\n', '[1518-05-14 00:02] Guard #251 begins shift\n', '[1518-09-01 00:00] Guard #751 begins shift\n', '[1518-09-20 00:08] falls asleep\n', '[1518-09-23 00:05] falls asleep\n', '[1518-04-09 00:23] falls asleep\n', '[1518-09-25 00:58] wakes up\n', '[1518-07-21 00:59] wakes up\n', '[1518-08-08 00:40] wakes up\n', '[1518-05-13 00:04] Guard #1783 begins shift\n', '[1518-08-23 00:48] wakes up\n', '[1518-08-26 00:46] falls asleep\n', '[1518-10-13 00:12] falls asleep\n', '[1518-05-29 00:25] falls asleep\n', '[1518-09-18 00:16] falls asleep\n', '[1518-07-16 00:10] falls asleep\n', '[1518-06-10 00:52] wakes up\n', '[1518-06-29 00:30] wakes up\n', '[1518-08-06 23:48] Guard #2477 begins shift\n', '[1518-11-18 00:44] falls asleep\n', '[1518-11-19 00:16] wakes up\n', '[1518-11-07 00:12] falls asleep\n', '[1518-05-19 00:46] wakes up\n', '[1518-11-18 00:49] wakes up\n', '[1518-10-21 00:38] falls asleep\n', '[1518-04-20 00:42] falls asleep\n', '[1518-09-21 00:30] wakes up\n', '[1518-07-20 00:25] falls asleep\n', '[1518-07-12 00:18] falls asleep\n', '[1518-07-02 00:50] falls asleep\n', '[1518-05-31 00:02] falls asleep\n', '[1518-06-05 00:51] wakes up\n', '[1518-10-28 23:58] Guard #2477 begins shift\n', '[1518-07-14 00:59] wakes up\n', '[1518-10-30 00:34] wakes up\n', '[1518-10-19 00:00] Guard #1783 begins shift\n', '[1518-07-13 00:00] Guard #751 begins shift\n', '[1518-07-21 00:57] falls asleep\n', '[1518-10-01 00:42] wakes up\n', '[1518-08-29 00:04] Guard #643 begins shift\n', '[1518-08-01 23:58] Guard #457 begins shift\n', '[1518-11-08 00:02] Guard #179 begins shift\n', '[1518-11-06 00:36] wakes up\n', '[1518-10-03 00:57] wakes up\n', '[1518-11-15 00:29] falls asleep\n', '[1518-05-05 00:44] falls asleep\n', '[1518-08-02 00:42] falls asleep\n', '[1518-10-16 00:42] wakes up\n', '[1518-05-05 00:01] Guard #1811 begins shift\n', '[1518-10-27 00:21] wakes up\n', '[1518-05-09 00:34] wakes up\n', '[1518-05-01 00:03] Guard #1783 begins shift\n', '[1518-09-08 00:50] wakes up\n', '[1518-11-01 23:56] Guard #2477 begins shift\n', '[1518-07-03 23:59] Guard #1811 begins shift\n', '[1518-05-23 23:58] Guard #3319 begins shift\n', '[1518-11-09 00:41] falls asleep\n', '[1518-07-12 00:59] wakes up\n', '[1518-06-30 00:54] wakes up\n', '[1518-09-16 00:20] wakes up\n', '[1518-11-22 00:09] falls asleep\n', '[1518-08-12 00:55] wakes up\n', '[1518-07-09 00:44] wakes up\n', '[1518-06-27 23:51] Guard #1051 begins shift\n', '[1518-09-25 23:59] Guard #1051 begins shift\n', '[1518-07-05 00:58] wakes up\n', '[1518-09-27 00:02] Guard #617 begins shift\n', '[1518-11-11 00:05] falls asleep\n', '[1518-07-28 00:56] wakes up\n', '[1518-08-25 00:33] falls asleep\n', '[1518-05-23 00:50] wakes up\n', '[1518-07-07 00:35] wakes up\n', '[1518-08-22 00:45] wakes up\n', '[1518-10-22 00:23] wakes up\n', '[1518-08-11 00:10] falls asleep\n', '[1518-05-30 00:47] falls asleep\n', '[1518-05-28 23:57] Guard #2467 begins shift\n', '[1518-10-22 00:15] falls asleep\n', '[1518-04-10 00:29] falls asleep\n', '[1518-04-11 00:00] Guard #1783 begins shift\n', '[1518-07-31 00:53] wakes up\n', '[1518-11-20 00:02] falls asleep\n', '[1518-05-15 00:48] falls asleep\n', '[1518-10-06 00:44] wakes up\n', '[1518-08-24 00:33] wakes up\n', '[1518-06-03 00:44] wakes up\n', '[1518-06-16 00:51] falls asleep\n', '[1518-07-04 23:58] Guard #179 begins shift\n', '[1518-11-20 00:53] wakes up\n', '[1518-09-24 00:03] Guard #179 begins shift\n', '[1518-05-30 00:04] Guard #2917 begins shift\n', '[1518-10-02 23:56] Guard #643 begins shift\n', '[1518-07-23 00:42] falls asleep\n', '[1518-06-09 23:56] Guard #251 begins shift\n', '[1518-07-13 00:46] falls asleep\n', '[1518-09-23 00:38] falls asleep\n', '[1518-04-16 00:01] falls asleep\n', '[1518-11-15 00:41] wakes up\n', '[1518-08-04 00:02] Guard #2971 begins shift\n', '[1518-08-03 00:02] Guard #2477 begins shift\n', '[1518-09-02 00:45] wakes up\n', '[1518-11-05 23:53] Guard #2467 begins shift\n', '[1518-08-16 00:59] wakes up\n', '[1518-06-18 00:49] wakes up\n', '[1518-09-05 00:01] Guard #499 begins shift\n', '[1518-07-13 00:54] wakes up\n', '[1518-04-27 00:57] falls asleep\n', '[1518-09-29 00:41] falls asleep\n', '[1518-05-16 00:32] wakes up\n', '[1518-05-15 00:02] falls asleep\n', '[1518-09-30 00:53] wakes up\n', '[1518-05-23 00:07] falls asleep\n', '[1518-08-04 00:43] falls asleep\n', '[1518-07-26 00:11] falls asleep\n', '[1518-10-27 23:58] Guard #1051 begins shift\n', '[1518-04-15 00:46] wakes up\n', '[1518-07-10 00:43] falls asleep\n', '[1518-11-03 00:55] wakes up\n', '[1518-05-22 00:51] wakes up\n', '[1518-07-21 00:42] wakes up\n', '[1518-09-22 00:52] falls asleep\n', '[1518-11-09 00:12] falls asleep\n', '[1518-07-07 00:57] falls asleep\n', '[1518-09-06 00:29] wakes up\n', '[1518-06-25 00:35] wakes up\n', '[1518-07-02 23:59] Guard #2657 begins shift\n', '[1518-10-01 00:03] Guard #251 begins shift\n', '[1518-06-28 00:04] falls asleep\n', '[1518-05-10 00:29] wakes up\n', '[1518-06-14 23:51] Guard #1811 begins shift\n', '[1518-08-28 00:21] falls asleep\n', '[1518-06-29 00:00] Guard #1811 begins shift\n', '[1518-10-23 23:58] Guard #179 begins shift\n', '[1518-08-26 00:57] wakes up\n', '[1518-06-13 00:56] wakes up\n', '[1518-10-01 00:59] wakes up\n', '[1518-04-08 00:35] falls asleep\n', '[1518-07-07 00:58] wakes up\n', '[1518-09-22 00:59] wakes up\n', '[1518-04-27 00:54] wakes up\n', '[1518-08-27 00:00] Guard #3467 begins shift\n', '[1518-08-13 23:56] Guard #457 begins shift\n', '[1518-11-03 00:00] Guard #1811 begins shift\n', '[1518-05-21 23:59] Guard #3467 begins shift\n', '[1518-11-14 00:35] falls asleep\n', '[1518-06-13 00:24] falls asleep\n', '[1518-05-18 23:52] Guard #2917 begins shift\n', '[1518-09-30 00:42] wakes up\n', '[1518-04-16 23:59] Guard #751 begins shift\n', '[1518-10-08 00:34] falls asleep\n', '[1518-08-21 00:35] falls asleep\n', '[1518-11-01 00:47] wakes up\n', '[1518-04-24 00:33] falls asleep\n', '[1518-09-02 23:57] Guard #2917 begins shift\n', '[1518-10-24 00:28] falls asleep\n', '[1518-06-12 00:30] wakes up\n', '[1518-05-19 00:27] wakes up\n', '[1518-05-30 00:41] falls asleep\n', '[1518-09-14 00:18] falls asleep\n', '[1518-05-19 00:00] falls asleep\n', '[1518-07-25 00:31] wakes up\n', '[1518-04-22 00:00] Guard #619 begins shift\n', '[1518-05-17 23:56] Guard #499 begins shift\n', '[1518-08-09 00:59] wakes up\n', '[1518-06-01 23:59] Guard #3167 begins shift\n', '[1518-09-22 23:52] Guard #643 begins shift\n', '[1518-07-27 00:27] falls asleep\n', '[1518-04-30 00:24] wakes up\n', '[1518-04-06 00:09] falls asleep\n', '[1518-06-20 00:29] falls asleep\n', '[1518-06-12 00:33] falls asleep\n', '[1518-08-09 00:53] falls asleep\n', '[1518-05-11 00:59] wakes up\n', '[1518-11-08 00:28] falls asleep\n', '[1518-06-11 00:01] falls asleep\n', '[1518-05-25 00:55] wakes up\n', '[1518-06-03 00:52] wakes up\n', '[1518-09-23 00:31] wakes up\n', '[1518-05-01 00:39] wakes up\n', '[1518-05-05 00:53] wakes up\n', '[1518-04-28 23:57] Guard #643 begins shift\n', '[1518-07-17 23:59] Guard #2657 begins shift\n', '[1518-10-10 00:49] wakes up\n', '[1518-10-30 00:30] falls asleep\n', '[1518-09-12 00:33] wakes up\n', '[1518-05-17 00:03] Guard #179 begins shift\n', '[1518-06-03 00:25] falls asleep\n', '[1518-07-03 00:51] wakes up\n', '[1518-07-12 00:57] falls asleep\n', '[1518-11-19 00:35] falls asleep\n', '[1518-10-16 00:11] falls asleep\n', '[1518-11-16 00:22] falls asleep\n', '[1518-11-08 00:56] falls asleep\n', '[1518-10-20 00:07] falls asleep\n', '[1518-09-10 00:25] wakes up\n', '[1518-08-23 00:02] Guard #2467 begins shift\n', '[1518-05-09 00:57] wakes up\n', '[1518-08-10 00:28] wakes up\n', '[1518-10-21 00:43] falls asleep\n', '[1518-11-22 00:04] Guard #3319 begins shift\n', '[1518-04-20 00:43] wakes up\n', '[1518-07-09 00:40] falls asleep\n', '[1518-10-29 00:29] wakes up\n', '[1518-05-04 00:45] wakes up\n', '[1518-05-08 00:02] Guard #457 begins shift\n', '[1518-11-21 00:48] falls asleep\n', '[1518-07-09 00:05] falls asleep\n', '[1518-05-30 00:43] wakes up\n', '[1518-08-11 00:31] wakes up\n', '[1518-11-19 00:02] Guard #2971 begins shift\n', '[1518-06-24 00:01] Guard #2467 begins shift\n', '[1518-11-10 00:57] wakes up\n', '[1518-06-20 00:58] wakes up\n', '[1518-11-09 00:28] wakes up\n', '[1518-04-09 00:50] wakes up\n', '[1518-09-11 00:00] Guard #1783 begins shift\n', '[1518-10-07 23:53] Guard #2971 begins shift\n', '[1518-04-06 00:00] Guard #499 begins shift\n', '[1518-06-08 00:01] Guard #617 begins shift\n', '[1518-11-04 00:47] wakes up\n', '[1518-07-28 00:20] wakes up\n', '[1518-10-27 00:53] wakes up\n', '[1518-05-15 00:32] wakes up\n', '[1518-08-07 00:04] falls asleep\n', '[1518-07-19 00:35] falls asleep\n', '[1518-09-28 00:00] Guard #1783 begins shift\n', '[1518-05-08 00:48] falls asleep\n', '[1518-05-24 00:52] falls asleep\n', '[1518-05-13 00:45] wakes up\n', '[1518-08-20 00:03] Guard #499 begins shift\n', '[1518-06-05 00:03] Guard #179 begins shift\n', '[1518-09-02 00:41] falls asleep\n', '[1518-09-17 00:56] wakes up\n', '[1518-04-11 00:06] falls asleep\n', '[1518-10-07 00:28] wakes up\n', '[1518-08-27 00:49] wakes up\n', '[1518-09-07 00:24] wakes up\n', '[1518-06-25 00:48] falls asleep\n', '[1518-09-02 00:00] Guard #3319 begins shift\n', '[1518-08-10 00:26] falls asleep\n', '[1518-08-14 00:21] falls asleep\n', '[1518-07-12 00:00] Guard #2477 begins shift\n', '[1518-08-05 00:03] Guard #251 begins shift\n', '[1518-05-07 00:00] Guard #571 begins shift\n', '[1518-06-03 23:51] Guard #2477 begins shift\n', '[1518-10-12 00:58] wakes up\n', '[1518-09-22 00:00] Guard #3467 begins shift\n', '[1518-11-19 23:46] Guard #3167 begins shift\n', '[1518-04-21 00:03] Guard #619 begins shift\n', '[1518-08-21 00:56] wakes up\n', '[1518-10-02 00:01] Guard #2971 begins shift\n', '[1518-05-18 00:23] falls asleep\n', '[1518-10-14 00:57] wakes up\n', '[1518-11-19 00:39] falls asleep\n', '[1518-08-12 00:14] wakes up\n', '[1518-04-19 00:56] wakes up\n', '[1518-11-11 00:46] falls asleep\n', '[1518-08-07 23:58] Guard #911 begins shift\n', '[1518-10-06 00:02] Guard #643 begins shift\n', '[1518-04-25 00:41] falls asleep\n', '[1518-08-08 23:57] Guard #251 begins shift\n', '[1518-07-25 00:00] falls asleep\n', '[1518-06-22 00:29] falls asleep\n', '[1518-11-12 00:55] wakes up\n', '[1518-04-11 00:48] wakes up\n', '[1518-10-16 23:58] Guard #571 begins shift\n', '[1518-05-01 00:35] falls asleep\n', '[1518-08-15 00:08] falls asleep\n', '[1518-09-24 00:14] falls asleep\n', '[1518-07-30 00:21] wakes up\n', '[1518-11-21 00:19] wakes up\n', '[1518-11-16 23:56] Guard #911 begins shift\n', '[1518-06-25 23:57] Guard #3167 begins shift\n', '[1518-05-16 00:46] falls asleep\n', '[1518-06-29 00:52] wakes up\n', '[1518-10-06 00:48] falls asleep\n', '[1518-05-27 00:04] Guard #2917 begins shift\n', '[1518-04-18 00:54] falls asleep\n', '[1518-04-15 00:54] falls asleep\n', '[1518-08-12 23:56] Guard #3467 begins shift\n', '[1518-10-05 00:41] falls asleep\n', '[1518-07-17 00:13] falls asleep\n', '[1518-06-20 23:56] Guard #2273 begins shift\n', '[1518-04-24 00:17] falls asleep\n', '[1518-04-16 00:55] wakes up\n', '[1518-09-19 00:13] wakes up\n', '[1518-07-06 00:29] wakes up\n', '[1518-04-07 00:55] wakes up\n', '[1518-05-19 00:44] falls asleep\n', '[1518-11-05 00:42] wakes up\n', '[1518-07-11 00:00] Guard #179 begins shift\n', '[1518-04-29 23:59] Guard #457 begins shift\n', '[1518-06-14 00:45] wakes up\n', '[1518-06-19 23:58] Guard #2917 begins shift\n', '[1518-05-26 00:16] falls asleep\n', '[1518-08-31 00:38] wakes up\n', '[1518-07-18 00:55] wakes up\n', '[1518-05-23 00:54] falls asleep\n', '[1518-07-08 23:46] Guard #3467 begins shift\n', '[1518-06-06 00:01] Guard #643 begins shift\n', '[1518-07-01 00:48] falls asleep\n', '[1518-05-18 00:24] wakes up\n', '[1518-09-03 00:29] falls asleep\n', '[1518-06-18 00:34] falls asleep\n', '[1518-04-24 00:27] wakes up\n', '[1518-06-12 00:54] wakes up\n', '[1518-09-19 00:08] falls asleep\n', '[1518-10-25 00:22] falls asleep\n', '[1518-05-24 00:58] wakes up\n', '[1518-10-11 00:00] Guard #571 begins shift\n', '[1518-08-14 00:27] wakes up\n', '[1518-09-04 00:47] wakes up\n', '[1518-07-18 00:33] falls asleep\n', '[1518-09-10 00:00] Guard #2273 begins shift\n', '[1518-05-22 23:59] Guard #3467 begins shift\n', '[1518-05-01 00:45] wakes up\n', '[1518-05-04 00:17] falls asleep\n', '[1518-09-05 00:43] wakes up\n', '[1518-06-17 00:47] wakes up\n', '[1518-08-24 23:58] Guard #619 begins shift\n', '[1518-04-20 00:02] Guard #3319 begins shift\n', '[1518-10-21 00:39] wakes up\n', '[1518-09-01 00:39] falls asleep\n', '[1518-07-08 00:40] wakes up\n', '[1518-09-09 00:42] falls asleep\n', '[1518-07-17 00:47] falls asleep\n', '[1518-07-08 00:00] Guard #643 begins shift\n', '[1518-09-01 00:31] wakes up\n', '[1518-11-09 00:43] wakes up\n', '[1518-04-09 00:00] Guard #751 begins shift\n', '[1518-07-06 00:09] falls asleep\n', '[1518-04-23 00:06] falls asleep\n', '[1518-08-15 00:49] wakes up\n', '[1518-07-24 00:58] wakes up\n', '[1518-05-20 00:15] wakes up\n', '[1518-06-29 23:50] Guard #2467 begins shift\n', '[1518-11-23 00:03] falls asleep\n', '[1518-10-18 00:24] falls asleep\n', '[1518-08-24 00:32] falls asleep\n', '[1518-10-09 00:32] falls asleep\n', '[1518-09-20 00:36] wakes up\n', '[1518-09-19 00:52] wakes up\n', '[1518-06-16 00:46] wakes up\n', '[1518-11-08 00:58] wakes up\n', '[1518-07-29 00:50] falls asleep\n', '[1518-10-15 23:57] Guard #1811 begins shift\n', '[1518-08-21 00:30] wakes up\n', '[1518-06-25 00:56] wakes up\n', '[1518-05-06 00:44] wakes up\n', '[1518-11-12 00:04] Guard #499 begins shift\n', '[1518-05-20 00:59] wakes up\n', '[1518-08-20 00:52] wakes up\n', '[1518-08-22 00:02] Guard #1783 begins shift\n', '[1518-09-17 00:04] falls asleep\n', '[1518-09-17 00:39] falls asleep\n', '[1518-05-06 00:16] falls asleep\n', '[1518-04-06 00:43] falls asleep\n', '[1518-11-04 00:42] falls asleep\n', '[1518-07-10 00:48] wakes up\n', '[1518-08-14 23:58] Guard #2273 begins shift\n', '[1518-08-05 00:34] wakes up\n', '[1518-06-10 23:54] Guard #3167 begins shift\n', '[1518-11-19 00:36] wakes up\n', '[1518-07-28 00:53] falls asleep\n', '[1518-10-03 00:39] falls asleep\n', '[1518-05-27 23:52] Guard #251 begins shift\n', '[1518-04-19 00:38] falls asleep\n', '[1518-09-20 00:13] wakes up\n', '[1518-06-24 00:55] wakes up\n', '[1518-04-13 23:54] Guard #179 begins shift\n', '[1518-08-27 00:39] falls asleep\n', '[1518-05-20 00:11] falls asleep\n', '[1518-06-07 00:28] wakes up\n', '[1518-10-08 00:03] falls asleep\n', '[1518-10-31 00:32] wakes up\n', '[1518-05-11 00:01] Guard #179 begins shift\n', '[1518-11-02 00:28] wakes up\n', '[1518-10-22 00:01] Guard #251 begins shift\n', '[1518-11-02 00:51] falls asleep\n', '[1518-06-10 00:56] falls asleep\n', '[1518-08-11 00:52] wakes up\n', '[1518-05-14 00:13] wakes up\n', '[1518-11-10 00:55] falls asleep\n', '[1518-08-07 00:59] wakes up\n', '[1518-06-21 00:27] wakes up\n', '[1518-09-12 00:02] Guard #3319 begins shift\n', '[1518-10-23 00:49] wakes up\n', '[1518-11-03 23:58] Guard #1783 begins shift\n', '[1518-10-20 00:03] Guard #3167 begins shift\n', '[1518-04-18 00:04] falls asleep\n', '[1518-07-06 23:57] Guard #3467 begins shift\n', '[1518-08-03 00:28] falls asleep\n', '[1518-11-12 00:20] wakes up\n', '[1518-07-20 00:52] wakes up\n', '[1518-08-23 00:39] falls asleep\n', '[1518-04-21 00:23] falls asleep\n', '[1518-11-03 00:08] falls asleep\n', '[1518-07-26 00:57] wakes up\n', '[1518-04-17 00:31] falls asleep\n', '[1518-06-14 00:04] Guard #1783 begins shift\n', '[1518-09-14 00:45] wakes up\n', '[1518-06-16 00:58] wakes up\n', '[1518-06-19 00:41] wakes up\n', '[1518-06-19 00:28] falls asleep\n', '[1518-09-09 00:18] falls asleep\n', '[1518-08-10 00:01] Guard #457 begins shift\n', '[1518-05-26 00:00] Guard #1783 begins shift\n', '[1518-09-12 23:46] Guard #3467 begins shift\n', '[1518-06-12 00:25] falls asleep\n', '[1518-11-07 00:00] Guard #3467 begins shift\n', '[1518-07-22 00:31] falls asleep\n', '[1518-04-17 00:59] wakes up\n', '[1518-08-13 00:32] falls asleep\n', '[1518-05-08 00:52] wakes up\n', '[1518-05-12 00:11] falls asleep\n', '[1518-06-01 00:31] falls asleep\n', '[1518-05-01 23:58] Guard #1783 begins shift\n', '[1518-05-14 00:47] wakes up\n', '[1518-05-02 23:56] Guard #457 begins shift\n', '[1518-07-30 00:03] Guard #3167 begins shift\n', '[1518-05-30 23:51] Guard #911 begins shift\n', '[1518-09-25 00:54] wakes up\n', '[1518-07-04 00:52] wakes up\n', '[1518-05-22 00:27] falls asleep\n', '[1518-05-10 00:55] wakes up\n', '[1518-04-14 00:30] wakes up\n', '[1518-04-26 00:04] Guard #2917 begins shift\n', '[1518-05-24 00:27] falls asleep\n', '[1518-07-02 00:57] wakes up\n', '[1518-07-01 23:48] Guard #3467 begins shift\n', '[1518-11-09 00:03] Guard #619 begins shift\n', '[1518-11-03 00:17] falls asleep\n', '[1518-07-19 23:57] Guard #457 begins shift\n', '[1518-09-21 00:02] Guard #3167 begins shift\n', '[1518-04-30 00:21] falls asleep\n', '[1518-07-31 00:25] falls asleep\n', '[1518-10-27 00:02] Guard #1783 begins shift\n', '[1518-09-13 00:49] wakes up\n', '[1518-09-20 00:00] Guard #499 begins shift\n', '[1518-07-01 00:04] Guard #499 begins shift\n', '[1518-08-15 23:50] Guard #2467 begins shift\n', '[1518-05-03 00:25] wakes up\n', '[1518-06-08 23:48] Guard #1811 begins shift\n', '[1518-04-12 00:57] wakes up\n', '[1518-08-16 00:00] falls asleep\n', '[1518-09-02 00:13] wakes up\n', '[1518-11-19 00:14] falls asleep\n', '[1518-10-25 00:52] wakes up\n', '[1518-04-23 00:20] wakes up\n', '[1518-05-28 00:08] wakes up\n', '[1518-08-07 00:54] wakes up\n', '[1518-09-19 00:48] falls asleep\n', '[1518-05-16 00:58] wakes up\n', '[1518-04-14 00:40] falls asleep\n', '[1518-05-02 00:45] wakes up\n', '[1518-06-13 00:44] wakes up\n', '[1518-05-14 23:47] Guard #2467 begins shift\n', '[1518-11-13 00:58] wakes up\n', '[1518-05-11 23:59] Guard #2477 begins shift\n', '[1518-09-01 00:40] wakes up\n', '[1518-06-07 00:12] falls asleep\n', '[1518-10-15 00:00] Guard #751 begins shift\n', '[1518-11-02 00:52] wakes up\n', '[1518-05-16 00:54] falls asleep\n', '[1518-10-25 00:01] Guard #2657 begins shift\n', '[1518-10-06 00:55] falls asleep\n', '[1518-07-12 00:53] wakes up\n', '[1518-10-27 00:41] falls asleep\n', '[1518-11-06 00:54] falls asleep\n', '[1518-06-06 23:57] Guard #2477 begins shift\n', '[1518-11-09 23:56] Guard #619 begins shift\n', '[1518-04-21 00:51] wakes up\n', '[1518-11-19 00:58] wakes up\n', '[1518-04-29 00:38] falls asleep\n', '[1518-08-28 00:03] falls asleep\n', '[1518-04-28 00:52] wakes up\n', '[1518-11-01 00:15] falls asleep\n', '[1518-10-31 00:27] falls asleep\n', '[1518-10-02 00:49] falls asleep\n', '[1518-04-07 00:08] falls asleep\n', '[1518-10-14 00:03] Guard #2467 begins shift\n', '[1518-10-01 00:29] falls asleep\n', '[1518-09-28 00:38] falls asleep\n', '[1518-06-10 00:18] falls asleep\n', '[1518-07-25 00:35] falls asleep\n', '[1518-06-28 00:35] wakes up\n', '[1518-11-14 00:51] wakes up\n', '[1518-06-21 00:14] falls asleep\n', '[1518-07-16 00:39] wakes up\n', '[1518-10-31 00:02] Guard #179 begins shift\n', '[1518-04-14 00:57] wakes up\n', '[1518-07-11 00:59] wakes up\n', '[1518-05-14 00:11] falls asleep\n', '[1518-04-15 00:58] wakes up\n', '[1518-09-03 00:30] wakes up\n', '[1518-07-21 00:03] falls asleep\n', '[1518-11-10 00:26] falls asleep\n', '[1518-09-26 00:29] falls asleep\n', '[1518-11-17 00:27] wakes up\n', '[1518-09-23 00:51] wakes up\n', '[1518-07-07 00:10] falls asleep\n', '[1518-08-30 00:01] falls asleep\n', '[1518-08-06 00:26] wakes up\n', '[1518-10-08 00:18] wakes up\n', '[1518-07-01 00:27] wakes up\n', '[1518-05-09 00:03] Guard #2467 begins shift\n', '[1518-06-24 00:08] falls asleep\n', '[1518-10-09 23:59] Guard #1051 begins shift\n', '[1518-09-22 00:09] falls asleep\n', '[1518-05-21 00:00] Guard #1783 begins shift\n', '[1518-06-04 00:52] wakes up\n', '[1518-10-08 23:58] Guard #1051 begins shift\n', '[1518-09-07 23:52] Guard #619 begins shift\n', '[1518-08-20 00:15] wakes up\n', '[1518-06-11 00:53] falls asleep\n', '[1518-11-12 00:16] falls asleep\n', '[1518-05-30 00:56] wakes up\n', '[1518-07-24 00:24] falls asleep\n', '[1518-07-02 00:04] falls asleep\n', '[1518-06-16 00:25] falls asleep\n', '[1518-10-14 00:06] falls asleep\n', '[1518-04-12 00:51] wakes up\n', '[1518-08-01 00:00] Guard #3167 begins shift\n', '[1518-11-21 00:53] wakes up\n', '[1518-08-05 00:08] falls asleep\n', '[1518-05-10 00:25] falls asleep\n', '[1518-07-05 00:45] falls asleep\n', '[1518-07-14 00:34] falls asleep\n', '[1518-04-15 23:46] Guard #179 begins shift\n', '[1518-09-30 00:45] falls asleep\n', '[1518-07-27 00:31] wakes up\n', '[1518-06-10 00:44] wakes up\n', '[1518-04-27 00:58] wakes up\n', '[1518-07-19 00:18] falls asleep\n', '[1518-06-04 00:02] falls asleep\n', '[1518-06-22 00:55] wakes up\n', '[1518-07-30 00:20] falls asleep\n', '[1518-08-04 00:46] wakes up\n', '[1518-08-02 00:59] wakes up\n', '[1518-06-13 00:49] falls asleep\n', '[1518-04-22 00:28] falls asleep\n', '[1518-11-14 23:57] Guard #3319 begins shift\n', '[1518-08-26 00:09] falls asleep\n', '[1518-06-13 00:04] Guard #179 begins shift\n', '[1518-11-06 00:55] wakes up\n', '[1518-06-09 00:00] falls asleep\n', '[1518-05-14 00:23] falls asleep\n', '[1518-09-22 00:21] falls asleep\n', '[1518-10-10 00:31] wakes up\n', '[1518-10-29 00:09] falls asleep\n', '[1518-04-12 23:58] Guard #3167 begins shift\n', '[1518-10-13 00:42] wakes up\n', '[1518-08-18 00:03] wakes up\n', '[1518-05-02 00:26] falls asleep\n', '[1518-04-23 00:01] Guard #499 begins shift\n', '[1518-08-20 00:25] falls asleep\n', '[1518-08-22 00:42] falls asleep\n', '[1518-04-17 23:53] Guard #2273 begins shift\n', '[1518-08-23 23:58] Guard #179 begins shift\n', '[1518-04-24 23:59] Guard #1783 begins shift\n', '[1518-04-29 00:56] wakes up\n', '[1518-10-19 00:16] falls asleep\n', '[1518-09-30 00:04] falls asleep\n', '[1518-09-21 00:47] falls asleep\n', '[1518-06-06 00:42] wakes up\n', '[1518-08-26 00:38] wakes up\n', '[1518-07-26 00:18] wakes up\n', '[1518-06-25 00:04] falls asleep\n', '[1518-07-13 23:56] Guard #2467 begins shift\n', '[1518-09-10 00:31] falls asleep\n', '[1518-09-13 00:05] falls asleep\n', '[1518-10-19 00:28] wakes up\n', '[1518-10-04 00:52] wakes up\n', '[1518-10-04 00:51] falls asleep\n', '[1518-10-29 00:53] wakes up\n', '[1518-07-29 00:53] wakes up\n', '[1518-11-21 00:02] Guard #2273 begins shift\n', '[1518-10-27 00:17] falls asleep\n', '[1518-05-23 00:28] wakes up\n', '[1518-04-27 00:03] Guard #2273 begins shift\n', '[1518-06-05 00:49] falls asleep\n', '[1518-07-22 23:56] Guard #619 begins shift\n', '[1518-09-07 00:22] falls asleep\n', '[1518-07-29 00:00] Guard #499 begins shift\n', '[1518-07-16 00:03] Guard #2273 begins shift\n', '[1518-11-03 00:13] wakes up\n', '[1518-11-13 23:59] Guard #911 begins shift\n', '[1518-08-30 23:59] Guard #643 begins shift\n', '[1518-07-22 00:07] wakes up\n', '[1518-05-11 00:55] falls asleep\n', '[1518-09-24 00:41] wakes up\n', '[1518-06-11 00:58] wakes up\n', '[1518-09-16 00:29] falls asleep\n', '[1518-04-22 00:53] wakes up\n', '[1518-09-18 23:57] Guard #2273 begins shift\n', '[1518-04-26 00:51] wakes up\n', '[1518-06-16 00:04] Guard #457 begins shift\n', '[1518-10-24 00:56] wakes up\n', '[1518-06-23 00:05] falls asleep\n', '[1518-05-27 00:39] wakes up\n', '[1518-08-17 00:36] wakes up\n', '[1518-07-08 00:53] wakes up\n', '[1518-07-04 00:13] falls asleep\n', '[1518-10-18 00:34] wakes up\n', '[1518-10-10 00:06] falls asleep\n', '[1518-08-01 00:46] wakes up\n', '[1518-07-06 00:53] wakes up\n', '[1518-04-13 00:51] wakes up\n', '[1518-07-30 23:56] Guard #619 begins shift\n', '[1518-07-15 00:20] falls asleep\n', '[1518-07-25 23:57] Guard #179 begins shift\n', '[1518-07-19 00:04] Guard #911 begins shift\n', '[1518-10-15 00:43] wakes up\n', '[1518-09-26 00:58] wakes up\n', '[1518-06-17 00:31] falls asleep\n', '[1518-06-12 00:01] Guard #911 begins shift\n', '[1518-05-15 00:58] wakes up\n', '[1518-04-06 23:59] Guard #1783 begins shift\n', '[1518-09-03 23:57] Guard #619 begins shift\n', '[1518-04-27 00:27] falls asleep\n', '[1518-07-01 00:20] falls asleep\n', '[1518-09-29 23:50] Guard #911 begins shift\n', '[1518-06-10 00:58] wakes up\n', '[1518-10-12 00:52] falls asleep\n', '[1518-04-06 00:32] wakes up\n', '[1518-08-18 00:01] falls asleep\n', '[1518-07-15 00:45] wakes up\n', '[1518-11-04 23:57] Guard #2657 begins shift\n', '[1518-06-03 00:50] falls asleep\n', '[1518-10-07 00:04] falls asleep\n', '[1518-10-15 00:58] wakes up\n', '[1518-08-07 00:57] falls asleep\n', '[1518-08-17 00:01] falls asleep\n', '[1518-06-26 23:58] Guard #3467 begins shift\n', '[1518-07-22 00:03] falls asleep\n', '[1518-10-23 00:42] falls asleep\n', '[1518-10-04 00:03] Guard #619 begins shift\n', '[1518-11-17 00:45] falls asleep\n', '[1518-11-23 00:26] wakes up\n', '[1518-09-10 00:07] falls asleep\n', '[1518-08-12 00:04] Guard #1051 begins shift\n', '[1518-06-15 00:43] wakes up\n', '[1518-11-05 00:07] falls asleep\n', '[1518-07-07 00:53] wakes up\n', '[1518-04-07 23:58] Guard #2657 begins shift\n', '[1518-04-27 00:53] falls asleep\n', '[1518-10-21 00:52] wakes up\n', '[1518-11-11 00:18] wakes up\n', '[1518-10-22 00:26] falls asleep\n', '[1518-07-24 23:47] Guard #3319 begins shift\n']
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
['[1518-11-01 00:00] Guard #10 begins shift\n', '[1518-11-01 00:05] falls asleep\n', '[1518-11-01 00:25] wakes up\n', '[1518-11-01 00:30] falls asleep\n', '[1518-11-01 00:55] wakes up\n', '[1518-11-01 23:58] Guard #99 begins shift\n', '[1518-11-02 00:40] falls asleep\n', '[1518-11-02 00:50] wakes up\n', '[1518-11-03 00:05] Guard #10 begins shift\n', '[1518-11-03 00:24] falls asleep\n', '[1518-11-03 00:29] wakes up\n', '[1518-11-04 00:02] Guard #99 begins shift\n', '[1518-11-04 00:36] falls asleep\n', '[1518-11-04 00:46] wakes up\n', '[1518-11-05 00:03] Guard #99 begins shift\n', '[1518-11-05 00:45] falls asleep\n', '[1518-11-05 00:55] wakes up\n']
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
['[1518-11-01 00:00] Guard #10 begins shift\n', '[1518-11-03 00:24] falls asleep\n', '[1518-11-03 00:29] wakes up\n', '[1518-11-01 00:05] falls asleep\n', '[1518-11-01 00:25] wakes up\n', '[1518-11-01 00:30] falls asleep\n', '[1518-11-01 00:55] wakes up\n', '[1518-11-01 23:58] Guard #99 begins shift\n', '[1518-11-02 00:40] falls asleep\n', '[1518-11-05 00:03] Guard #99 begins shift\n', '[1518-11-05 00:45] falls asleep\n', '[1518-11-02 00:50] wakes up\n', '[1518-11-03 00:05] Guard #10 begins shift\n', '[1518-11-04 00:02] Guard #99 begins shift\n', '[1518-11-04 00:36] falls asleep\n', '[1518-11-04 00:46] wakes up\n', '[1518-11-05 00:55] wakes up\n']
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 25, in <module>
    timestamp = x.split[0]
TypeError: 'builtin_function_or_method' object is not subscriptable
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[1518-11-01 00:00] Guard #10 begins shift

Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 26, in <module>
    timestamp = x.split[0]
TypeError: 'builtin_function_or_method' object is not subscriptable
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[1518-11-01 00:00] Guard #10 begins shift

Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 27, in <module>
    timestamp = x.split[0]
TypeError: 'builtin_function_or_method' object is not subscriptable
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
<class 'str'>
[1518-11-01 00:00] Guard #10 begins shift

Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 27, in <module>
    timestamp = x.split[0]
TypeError: 'builtin_function_or_method' object is not subscriptable
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
<class 'str'>
[1518-11-01 00:00] Guard #10 begins shift

<built-in method split of str object at 0x11098b630>
<class 'str'>
[1518-11-03 00:24] falls asleep

<built-in method split of str object at 0x112f931b0>
<class 'str'>
[1518-11-03 00:29] wakes up

<built-in method split of str object at 0x112fa6a30>
<class 'str'>
[1518-11-01 00:05] falls asleep

<built-in method split of str object at 0x112f932d0>
<class 'str'>
[1518-11-01 00:25] wakes up

<built-in method split of str object at 0x112fa6ad0>
<class 'str'>
[1518-11-01 00:30] falls asleep

<built-in method split of str object at 0x112fb4030>
<class 'str'>
[1518-11-01 00:55] wakes up

<built-in method split of str object at 0x112fa6b20>
<class 'str'>
[1518-11-01 23:58] Guard #99 begins shift

<built-in method split of str object at 0x112fb4090>
<class 'str'>
[1518-11-02 00:40] falls asleep

<built-in method split of str object at 0x112fb40f0>
<class 'str'>
[1518-11-05 00:03] Guard #99 begins shift

<built-in method split of str object at 0x112fb4150>
<class 'str'>
[1518-11-05 00:45] falls asleep

<built-in method split of str object at 0x112fb41b0>
<class 'str'>
[1518-11-02 00:50] wakes up

<built-in method split of str object at 0x112fa6b70>
<class 'str'>
[1518-11-03 00:05] Guard #10 begins shift

<built-in method split of str object at 0x112fb4210>
<class 'str'>
[1518-11-04 00:02] Guard #99 begins shift

<built-in method split of str object at 0x112fb4270>
<class 'str'>
[1518-11-04 00:36] falls asleep

<built-in method split of str object at 0x112fb42d0>Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 29, in <module>
    print(timestamp)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
<class 'str'>
[1518-11-01 00:00] Guard #10 begins shift

<built-in method split of str object at 0x106c4a630>
<class 'str'>
[1518-11-03 00:24] falls asleep

<built-in method split of str object at 0x108a541b0>
<class 'str'>
[1518-11-03 00:29] wakes up

<built-in method split of str object at 0x108a689e0>
<class 'str'>
[1518-11-01 00:05] falls asleep

Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 26, in <module>
    print(x)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
<class 'str'>
[1518-11-01 00:00] Guard #10 begins shift

[1518-11-01
<class 'str'>
[1518-11-03 00:24] falls asleep

[1518-11-03
<class 'str'>
[1518-11-03 00:29] wakes up

[1518-11-03
<class 'str'>
[1518-11-01 00:05] falls asleep

[1518-11-01
<class 'str'>
[1518-11-01 00:25] wakes up

[1518-11-01
<class 'str'>
[1518-11-01 00:30] falls asleep

[1518-11-01
<class 'str'>
[1518-11-01 00:55] wakes up

[1518-11-01
<class 'str'>
[1518-11-01 23:58] Guard #99 begins shift

[1518-11-01
<class 'str'>
[1518-11-02 00:40] falls asleep

Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 26, in <module>
    print(x)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[1518-11-01 00:00] Guard #10 begins shift

['[1518-11-01', '00:00]', 'Guard', '#10', 'begins', 'shift']
[1518-11-03 00:24] falls asleep

['[1518-11-03', '00:24]', 'falls', 'asleep']
[1518-11-03 00:29] wakes up

['[1518-11-03', '00:29]', 'wakes', 'up']
[1518-11-01 00:05] falls asleep

['[1518-11-01', '00:05]', 'falls', 'asleep']
[1518-11-01 00:25] wakes up

['[1518-11-01', '00:25]', 'wakes', 'up']
[1518-11-01 00:30] falls asleep

['[1518-11-01', '00:30]', 'falls', 'asleep']
[1518-11-01 00:55] wakes up

['[1518-11-01', '00:55]', 'wakes', 'up']
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 28, in <module>
    print(timestamp)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[1518-11-01 00:00] Guard #10 begins shift

[1518-11-01
[1518-11-03 00:24] falls asleep

[1518-11-03
[1518-11-03 00:29] wakes up

[1518-11-03
[1518-11-01 00:05] falls asleep

[1518-11-01
[1518-11-01 00:25] wakes up

[1518-11-01
[1518-11-01 00:30] falls asleep

[1518-11-01Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 28, in <module>
    print(timestamp)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[1518-11-01 00:00] Guard #10 begins shift

Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 28, in <module>
    print(timestamp)
NameError: name 'timestamp' is not defined
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[1518-11-01 00:00] Guard #10 begins shift

1518-11-01
[1518-11-03 00:24] falls asleep

1518-11-03
[1518-11-03 00:29] wakes up

1518-11-03
[1518-11-01 00:05] falls asleep

1518-11-01
[1518-11-01 00:25] wakes up

1518-11-01
[1518-11-01 00:30] falls asleep

1518-11-01
[1518-11-01 00:55] wakes up

1518-11-01
[1518-11-01 23:58] Guard #99 begins shift

1518-11-01
[1518-11-02 00:40] falls asleep

1518-11-02
[1518-11-05 00:03] Guard #99 begins shift

1518-11-05
[1518-11-05 00:45] falls asleep

1518-11-05
[1518-11-02 00:50] wakes up

1518-11-02
[1518-11-03 00:05] Guard #10 begins shift

1518-11-03
[1518-11-04 00:02] Guard #99 begins shift

1518-11-04
[1518-11-04 00:36] falls asleep

1518-11-04
[1518-11-04 00:46] wakes up

1518-11-04
[1518-11-05 00:55] wakes up

1518-11-05
['[1518-11-01 00:00] Guard #10 begins shift\n', '[1518-11-03 00:24] falls asleep\n', '[1518-11-03 00:29] wakes up\n', '[1518-11-01 00:05] falls asleep\n', '[1518-11-01 00:25] wakes up\n', '[1518-11-01 00:30] falls asleep\n', '[1518-11-01 00:55] wakes up\n', '[1518-11-01 23:58] Guard #99 begins shift\n', '[1518-11-02 00:40] falls asleep\n', '[1518-11-05 00:03] Guard #99 begins shift\n', '[1518-11-05 00:45] falls asleep\n', '[1518-11-02 00:50] wakes up\n', '[1518-11-03 00:05] Guard #10 begins shift\n', '[1518-11-04 00:02] Guard #99 begins shift\n', '[1518-11-04 00:36] falls asleep\n', '[1518-11-04 00:46] wakes up\n', '[1518-11-05 00:55] wakes up\n']
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 30, in <module>
    print(lista)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[1518-11-01 00:00] Guard #10 begins shift

1518-11-01
['Guard', '#10', 'begins', 'shift']
[1518-11-03 00:24] falls asleep

1518-11-03
['falls', 'asleep']
[1518-11-03 00:29] wakes up

1518-11-03
['wakes', 'up']
[1518-11-01 00:05] falls asleep

1518-11-01
['falls', 'asleep']
[1518-11-01 00:25] wakes up
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 25, in <module>
    print(x)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[1518-11-01 00:00] Guard #10 begins shift

Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 27, in <module>
    text = x.split(2)[2:]
TypeError: must be str or None, not int
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[1518-11-01 00:00] Guard #10 begins shift

1518-11-01
['Guard #10 begins shift\n']
[1518-11-03 00:24] falls asleep

1518-11-03
['falls asleep\n']
[1518-11-03 00:29] wakes up

1518-11-03
['wakes up\n']
[1518-11-01 00:05] falls asleep

1518-11-01
['falls asleep\n']
[1518-11-01 00:25] wakes up

1518-11-01
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 28, in <module>
    print(date)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[1518-11-01 00:00] Guard #10 begins shift

1518-11-01
['Guard #10 begins shift\n']
[1518-11-03 00:24] falls asleep

1518-11-03
['falls asleep\n']
[1518-11-03 00:29] wakes up

1518-11-03
['wakes up\n']
[1518-11-01 00:05] falls asleep

1518-11-01
['falls asleep\n']
[1518-11-01 00:25] wakes up

1518-11-01
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 29, in <module>
    print(date)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[1518-11-01 00:00] Guard #10 begins shift

1518-11-01 00:00 ['Guard #10 begins shift\n']
[1518-11-03 00:24] falls asleep

1518-11-03 00:24 ['falls asleep\n']
[1518-11-03 00:29] wakes up

1518-11-03 00:29 ['wakes up\n']
[1518-11-01 00:05] falls asleep

1518-11-01 00:05 ['falls asleep\n']
[1518-11-01 00:25] wakes up

1518-11-01 00:25 ['wakes up\n']
[1518-11-01 00:30] falls asleep

1518-11-01 00:30 ['falls asleep\n']
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 29, in <module>
    print(date, time, text)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[1518-11-01 00:00] Guard #10 begins shift

datum: 1518-11-01
tid: 00:00
text: ['Guard #10 begins shift\n']
[1518-11-03 00:24] falls asleep

datum: 1518-11-03
tid: 00:24
text: ['falls asleep\n']
[1518-11-03 00:29] wakes up

datum: 1518-11-03
tid: 00:29
text: ['wakes up\n']
[1518-11-01 00:05] falls asleep

datum: 1518-11-01
tid: 00:05
text: ['falls asleep\n']
[1518-11-01 00:25] wakes up

datum: 1518-11-01
tid: 00:25
text: ['wakes up\n']
[1518-11-01 00:30] falls asleep

datum: 1518-11-01
tid: Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 30, in <module>
    print("tid:", time)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
datum: 1518-11-01
tid: 00:00
text: ['Guard #10 begins shift\n']
datum: 1518-11-03
tid: 00:24
text: ['falls asleep\n']
datum: 1518-11-03
tid: 00:29
text: ['wakes up\n']
datum: 1518-11-01
tid: 00:05
text: ['falls asleep\n']
datum: 1518-11-01
tid: 00:25Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 30, in <module>
    print("tid:", time)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
datum: 1518-11-01
tid: 00:00
text: ['[1518-11-01 00:00', ' Guard #10 begins shift\n']
datum: 1518-11-03
tid: 00:24
text: ['[1518-11-03 00:24', ' falls asleep\n']
datum: 1518-11-03
tid: 00:29
text: ['[1518-11-03 00:29', ' wakes up\n']
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 32, in <module>
    print("text:", text)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 28, in <module>
    text = x.split("]")[2]
IndexError: list index out of range
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
datum: 1518-11-01
tid: 00:00
text:  Guard #10 begins shift

datum: 1518-11-03
tid: 00:24
text:  falls asleep

datum: 1518-11-03
tid: 00:29
text:  wakes up

datum: 1518-11-01
tid: 00:05
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 31, in <module>
    print("tid:", time)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
datum: 1518-11-01
tid: 00:00
text: Guard #10 begins shift

datum: 1518-11-03
tid: 00:24
text: falls asleep

datum: 1518-11-03
tid: 00:29
text: wakes up

datum:Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 30, in <module>
    print("datum:", date)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
datum: 1518-11-01
tid: 00:00
text: Guard #10 begins shift

datum: 1518-11-03
tid: 00:24
text: falls asleep

datum: 1518-11-03
tid: 00:29Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 29, in <module>
    print("tid:", time)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
datum: 1518-11-01
tid: 00:00
text: Guard #10 begins shift

Guard
['Guard', '#10', 'begins', 'shift']
datum: 1518-11-03
tid: 00:24
text: falls asleep

falls
datum: 1518-11-03
tid: 00:29
text: wakes up

wakes
datum: 1518-11-01
tid: 00:05
text: falls asleep

falls
datum: 1518-11-01Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 28, in <module>
    print("datum:", date)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
datum: 1518-11-01
tid: 00:00
text: Guard #10 begins shift

['Guard', '#10', 'begins', 'shift']
datum: 1518-11-03
tid: 00:24
text: falls asleep

datum: 1518-11-03
tid: 00:29
text: wakes up

datum: 1518-11-01
tid: 00:05
text: falls asleep

datum: 1518-11-01
tid: 00:25
text: wakes up

datum: 1518-11-01
tid: Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 29, in <module>
    print("tid:", time)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
datum: 1518-11-01
tid: 00:00
text: Guard #10 begins shift

#10
datum: 1518-11-03
tid: 00:24
text: falls asleep

datum: 1518-11-03
tid: 00:29
text: wakes up

datum: 1518-11-01
tid: 00:05
text: falls asleep

datum: 1518-11-01
tid: 00:25
text: wakes up

datum: 1518-11-01
tid: 00:30
text: falls asleep

datum: Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 28, in <module>
    print("datum:", date)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
datum: 1518-11-01
tid: 00:00
text: Guard #10 begins shift

datum: 1518-11-03
tid: 00:24
text: falls asleep

datum: 1518-11-03
tid: 00:29
text: wakes up

datum: 1518-11-01
tid: 00:05
text: falls asleep

datum: 1518-11-01
tid: 00:25
text: wakes up

datum: 1518-11-01
tid: 00:30
text: falls asleep

datum: 1518-11-01
tid: 00:55
text: wakes up

datum: 1518-11-01
tid: 23:58
text: Guard #99 begins shift

datum: 1518-11-02
tid: 00:40
text: falls asleep

datum: 1518-11-05
tid: 00:03
text: Guard #99 begins shift

datum: 1518-11-05
tid: 00:45
text: falls asleep

datum: 1518-11-02
tid: 00:50
text: wakes up

datum: 1518-11-03
tid: 00:05
text: Guard #10 begins shift

datum: 1518-11-04
tid: 00:02
text: Guard #99 begins shift

datum: 1518-11-04
tid: 00:36
text: falls asleep

datum: 1518-11-04
tid: 00:46
text: wakes up

datum: 1518-11-05
tid: 00:55
text: wakes up

['[1518-11-01 00:00] Guard #10 begins shift\n', '[1518-11-03 00:24] falls asleep\n', '[1518-11-03 00:29] wakes up\n', '[1518-11-01 00:05] falls asleep\n', '[1518-11-01 00:25] wakes up\n', '[1518-11-01 00:30] falls asleep\n', '[1518-11-01 00:55] wakes up\n', '[1518-11-01 23:58] Guard #99 begins shift\n', '[1518-11-02 00:40] falls asleep\n', '[1518-11-05 00:03] Guard #99 begins shift\n', '[1518-11-05 00:45] falls asleep\n', '[1518-11-02 00:50] wakes up\n', '[1518-11-03 00:05] Guard #10 begins shift\n', '[1518-11-04 00:02] Guard #99 begins shift\n', '[1518-11-04 00:36] falls asleep\n', '[1518-11-04 00:46] wakes up\n', '[1518-11-05 00:55] wakes up\n']
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
['[1518-11-01 00:00] Guard #10 begins shift\n', '[1518-11-03 00:24] falls asleep\n', '[1518-11-03 00:29] wakes up\n', '[1518-11-01 00:05] falls asleep\n', '[1518-11-01 00:25] wakes up\n', '[1518-11-01 00:30] falls asleep\n', '[1518-11-01 00:55] wakes up\n', '[1518-11-01 23:58] Guard #99 begins shift\n', '[1518-11-02 00:40] falls asleep\n', '[1518-11-05 00:03] Guard #99 begins shift\n', '[1518-11-05 00:45] falls asleep\n', '[1518-11-02 00:50] wakes up\n', '[1518-11-03 00:05] Guard #10 begins shift\n', '[1518-11-04 00:02] Guard #99 begins shift\n', '[1518-11-04 00:36] falls asleep\n', '[1518-11-04 00:46] wakes up\n', '[1518-11-05 00:55] wakes up\n']
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
Guard #10 begins shift

falls asleep

wakes up

falls asleep

wakes up

falls asleep

wakes up

Guard #99 begins shift

falls asleep

Guard #99 begins shift

falls asleep

wakes up

Guard #10 begins shift

Guard #99 begins shift

falls asleep

wakes up

wakes up

>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
Guard #10 begins shift

falls asleep

wakes up

#10 00:24 00:29
falls asleep

wakes up

#10 00:05 00:25
falls asleep

wakes up

#10 00:30 00:55
Guard #99 begins shift

falls asleep

Guard #99 begins shift

falls asleep

wakes up

#99 00:45 00:50
Guard #10 begins shift

Guard #99 begins shift

falls asleep

wakes up

#99 00:36 00:46
wakes up

#99 00:36 00:55
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
#10 00:24 00:29
#10 00:05 00:25
#10 00:30 00:55
#99 00:45 00:50
#99 00:36 00:46
#99 00:36 00:55
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
10 00:24 00:29
10 00:05 00:25
10 00:30 00:55
99 00:45 00:50
99 00:36 00:46
99 00:36 00:55
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
10 00:05 00:25
10 00:30 00:55
99 00:40 00:50
10 00:24 00:29
99 00:36 00:46
99 00:45 00:55
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
10 00:05 00:25
10 00:30 00:55
99 00:40 00:50
10 00:24 00:29
99 00:36 00:46
99 00:45 00:55
['10', '00:05', '00:25', '10', '00:30', '00:55', '99', '00:40', '00:50', '10', '00:24', '00:29', '99', '00:36', '00:46', '99', '00:45', '00:55']
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
10 00:05 00:25
10 00:30 00:55
99 00:40 00:50
10 00:24 00:29
99 00:36 00:46
99 00:45 00:55
[('10', '00:05', '00:25'), ('10', '00:30', '00:55'), ('99', '00:40', '00:50'), ('10', '00:24', '00:29'), ('99', '00:36', '00:46'), ('99', '00:45', '00:55')]
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 41, in <module>
    tid = 60*(vakna.split(":")[0]-somna.split(":")) + vakna.split(":")[1]-somna.split(":")[1]
TypeError: unsupported operand type(s) for -: 'str' and 'list'
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 41, in <module>
    tid = 60*(int(vakna.split(":")[0])-int(somna.split(":"))) + int(vakna.split(":")[1])-int(somna.split(":")[1])
TypeError: int() argument must be a string, a bytes-like object or a number, not 'list'
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 41, in <module>
    print(vakna.split(""[0]))
IndexError: string index out of range
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
00
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 42, in <module>
    tid = 60*(int(vakna.split(":")[0])-int(somna.split(":"))) + int(vakna.split(":")[1])-int(somna.split(":")[1])
TypeError: int() argument must be a string, a bytes-like object or a number, not 'list'
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
0
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 42, in <module>
    tid = 60*(int(vakna.split(":")[0])-int(somna.split(":"))) + int(vakna.split(":")[1])-int(somna.split(":")[1])
TypeError: int() argument must be a string, a bytes-like object or a number, not 'list'
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
0
sovtid: 20
10 00:05 00:25 20
0
sovtid: 25
10 00:30 00:55 25
0
sovtid: 10
99 00:40 00:50 10
0
sovtid: 5
10 00:24 00:29 5
0
sovtid: 10
99 00:36 00:46 10
0
sovtid: 10
99 00:45 00:55 10
[('10', '00:05', '00:25', 20), ('10', '00:30', '00:55', 25), ('99', '00:40', '00:50', 10), ('10', '00:24', '00:29', 5), ('99', '00:36', '00:46', 10), ('99', '00:45', '00:55', 10)]
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[('10', '00:05', '00:25', 20), ('10', '00:30', '00:55', 25), ('99', '00:40', '00:50', 10), ('10', '00:24', '00:29', 5), ('99', '00:36', '00:46', 10), ('99', '00:45', '00:55', 10)]
10
10
99
10
99
99
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[('10', '00:05', '00:25', 20), ('10', '00:30', '00:55', 25), ('99', '00:40', '00:50', 10), ('10', '00:24', '00:29', 5), ('99', '00:36', '00:46', 10), ('99', '00:45', '00:55', 10)]
10
45
10
25
99
10
10
5
99
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 55, in <module>
    while g == sovlist[i+1][0]:
IndexError: list index out of range
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[('10', '00:05', '00:25', 20), ('10', '00:30', '00:55', 25), ('99', '00:40', '00:50', 10), ('10', '00:24', '00:29', 5), ('99', '00:36', '00:46', 10), ('99', '00:45', '00:55', 10)]
10 45
10 25
99 10
10 5
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 54, in <module>
    while g == sovlist[i+1][0]:
IndexError: list index out of range
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[('10', '00:05', '00:25', 20), ('10', '00:30', '00:55', 25), ('99', '00:40', '00:50', 10), ('10', '00:24', '00:29', 5), ('99', '00:36', '00:46', 10), ('99', '00:45', '00:55', 10)]
10 45
10 25
99 10
10 5
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 54, in <module>
    while g == sovlist[i+1][0]:
IndexError: list index out of range
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[('10', '00:05', '00:25', 20), ('10', '00:30', '00:55', 25), ('99', '00:40', '00:50', 10), ('10', '00:24', '00:29', 5), ('99', '00:36', '00:46', 10), ('99', '00:45', '00:55', 10)]
10 45
10 25
99 10
10 5
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 54, in <module>
    while g == sovlist[i+1][0]:
IndexError: list index out of range
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[('10', '00:05', '00:25', 20), ('10', '00:30', '00:55', 25), ('99', '00:40', '00:50', 10), ('10', '00:24', '00:29', 5), ('99', '00:36', '00:46', 10), ('99', '00:45', '00:55', 10)]
10 45
10 25
99 10
10 5
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 54, in <module>
    while g == sovlist[i+1][0]:
IndexError: list index out of range
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[('10', '00:05', '00:25', 20), ('10', '00:30', '00:55', 25), ('99', '00:40', '00:50', 10), ('10', '00:24', '00:29', 5), ('99', '00:36', '00:46', 10), ('99', '00:45', '00:55', 10)]
10 45
10 25
99 10
10 5
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 54, in <module>
    while g == sovlist[i+1][0]:
IndexError: list index out of range
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[('10', '00:05', '00:25', 20), ('10', '00:30', '00:55', 25), ('99', '00:40', '00:50', 10), ('10', '00:24', '00:29', 5), ('99', '00:36', '00:46', 10), ('99', '00:45', '00:55', 10)]
10 45
10 25
99 10
10 5
99 20
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
10 20
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 57, in <module>
    for j in len(sumlist):
TypeError: 'int' object is not iterable
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
10 20
10 25
99 10
10 5
99 10
99 10
[['10', 50], ['99', 30]]
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 41, in <module>
    tid = 60*(int(vakna.split(":")[0])-int(somna.split(":")[0])) + int(vakna.split(":")[1])-int(somna.split(":")[1])
NameError: name 'somna' is not defined
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
['[1518-06-02 23:58] Guard #179 begins shift\n', '[1518-09-18 00:43] wakes up\n', '[1518-06-06 00:10] falls asleep\n', '[1518-05-12 00:52] wakes up\n', '[1518-07-02 00:39] wakes up\n', '[1518-07-21 23:50] Guard #2917 begins shift\n', '[1518-09-22 00:47] wakes up\n', '[1518-09-09 00:31] wakes up\n', '[1518-07-21 00:15] wakes up\n', '[1518-07-30 00:43] wakes up\n', '[1518-10-08 00:52] wakes up\n', '[1518-07-26 23:57] Guard #1051 begins shift\n', '[1518-07-17 00:00] Guard #2273 begins shift\n', '[1518-08-18 00:24] falls asleep\n', '[1518-09-08 00:02] falls asleep\n', '[1518-08-19 00:00] Guard #2917 begins shift\n', '[1518-08-21 00:01] Guard #251 begins shift\n', '[1518-08-08 00:39] falls asleep\n', '[1518-09-08 23:57] Guard #2273 begins shift\n', '[1518-08-17 23:46] Guard #2971 begins shift\n', '[1518-06-30 00:04] falls asleep\n', '[1518-07-10 00:00] Guard #1783 begins shift\n', '[1518-10-30 00:03] Guard #2657 begins shift\n', '[1518-10-20 00:45] wakes up\n', '[1518-11-06 00:13] wakes up\n', '[1518-04-12 00:02] Guard #2273 begins shift\n', '[1518-08-13 00:57] wakes up\n', '[1518-07-03 00:48] falls asleep\n', '[1518-11-07 00:33] wakes up\n', '[1518-08-30 00:30] wakes up\n', '[1518-05-15 23:56] Guard #1811 begins shift\n', '[1518-07-09 00:26] wakes up\n', '[1518-07-05 23:58] Guard #1051 begins shift\n', '[1518-06-10 00:47] falls asleep\n', '[1518-06-29 00:40] falls asleep\n', '[1518-07-25 00:52] wakes up\n', '[1518-08-01 00:27] falls asleep\n', '[1518-06-15 00:53] wakes up\n', '[1518-05-24 00:15] wakes up\n', '[1518-06-15 00:50] falls asleep\n', '[1518-07-15 00:25] wakes up\n', '[1518-08-22 00:20] falls asleep\n', '[1518-04-26 00:18] falls asleep\n', '[1518-10-10 00:43] falls asleep\n', '[1518-07-20 23:51] Guard #2467 begins shift\n', '[1518-06-17 00:02] Guard #3467 begins shift\n', '[1518-09-06 00:01] Guard #3319 begins shift\n', '[1518-10-21 00:02] Guard #751 begins shift\n', '[1518-07-11 00:09] falls asleep\n', '[1518-06-02 00:11] falls asleep\n', '[1518-05-23 00:57] wakes up\n', '[1518-06-26 00:22] falls asleep\n', '[1518-11-21 00:07] falls asleep\n', '[1518-09-11 00:07] falls asleep\n', '[1518-07-17 00:35] wakes up\n', '[1518-06-27 00:45] wakes up\n', '[1518-08-06 00:21] falls asleep\n', '[1518-08-11 00:51] falls asleep\n', '[1518-11-02 00:19] falls asleep\n', '[1518-07-01 00:51] wakes up\n', '[1518-10-05 00:45] wakes up\n', '[1518-05-17 00:21] falls asleep\n', '[1518-04-18 23:56] Guard #643 begins shift\n', '[1518-11-22 00:44] wakes up\n', '[1518-07-23 00:50] wakes up\n', '[1518-11-17 23:56] Guard #1783 begins shift\n', '[1518-07-22 00:46] wakes up\n', '[1518-06-29 00:25] falls asleep\n', '[1518-11-13 00:00] Guard #179 begins shift\n', '[1518-11-10 23:51] Guard #499 begins shift\n', '[1518-10-05 00:00] Guard #751 begins shift\n', '[1518-11-11 00:53] wakes up\n', '[1518-09-17 00:26] wakes up\n', '[1518-06-21 00:49] wakes up\n', '[1518-09-12 00:06] falls asleep\n', '[1518-04-18 00:25] falls asleep\n', '[1518-09-28 00:59] wakes up\n', '[1518-04-13 00:09] falls asleep\n', '[1518-06-01 00:36] wakes up\n', '[1518-07-23 23:56] Guard #643 begins shift\n', '[1518-09-09 00:54] wakes up\n', '[1518-11-06 00:19] falls asleep\n', '[1518-06-27 00:21] falls asleep\n', '[1518-11-17 00:46] wakes up\n', '[1518-07-07 00:47] falls asleep\n', '[1518-11-01 00:02] Guard #457 begins shift\n', '[1518-08-22 00:37] wakes up\n', '[1518-08-29 00:56] wakes up\n', '[1518-10-12 00:04] Guard #3167 begins shift\n', '[1518-04-13 00:41] falls asleep\n', '[1518-07-15 00:32] falls asleep\n', '[1518-06-11 00:47] wakes up\n', '[1518-05-23 00:41] falls asleep\n', '[1518-09-16 23:46] Guard #2657 begins shift\n', '[1518-08-29 23:50] Guard #251 begins shift\n', '[1518-10-06 23:51] Guard #2657 begins shift\n', '[1518-11-18 00:56] falls asleep\n', '[1518-05-24 00:43] wakes up\n', '[1518-11-18 00:59] wakes up\n', '[1518-04-18 00:13] wakes up\n', '[1518-06-19 00:01] Guard #499 begins shift\n', '[1518-05-31 00:40] wakes up\n', '[1518-10-15 00:56] falls asleep\n', '[1518-08-03 00:30] wakes up\n', '[1518-04-12 00:55] falls asleep\n', '[1518-10-23 00:00] Guard #2971 begins shift\n', '[1518-06-26 00:52] wakes up\n', '[1518-07-15 00:00] Guard #1051 begins shift\n', '[1518-07-08 00:26] falls asleep\n', '[1518-08-25 00:46] wakes up\n', '[1518-06-09 00:45] wakes up\n', '[1518-04-25 00:46] wakes up\n', '[1518-10-02 00:28] falls asleep\n', '[1518-04-23 23:57] Guard #1051 begins shift\n', '[1518-06-18 00:03] Guard #1783 begins shift\n', '[1518-05-04 00:04] Guard #2657 begins shift\n', '[1518-09-25 00:15] falls asleep\n', '[1518-06-01 00:00] Guard #643 begins shift\n', '[1518-05-06 00:54] falls asleep\n', '[1518-09-16 00:01] Guard #3319 begins shift\n', '[1518-11-16 00:00] Guard #3467 begins shift\n', '[1518-10-22 00:31] wakes up\n', '[1518-09-07 00:00] Guard #2273 begins shift\n', '[1518-06-22 23:47] Guard #643 begins shift\n', '[1518-09-11 00:45] wakes up\n', '[1518-05-06 00:01] Guard #751 begins shift\n', '[1518-10-15 00:21] falls asleep\n', '[1518-04-10 00:59] wakes up\n', '[1518-09-04 00:30] falls asleep\n', '[1518-08-20 00:11] falls asleep\n', '[1518-11-12 00:25] falls asleep\n', '[1518-10-25 23:57] Guard #911 begins shift\n', '[1518-10-01 00:46] falls asleep\n', '[1518-07-08 00:52] falls asleep\n', '[1518-09-01 00:27] falls asleep\n', '[1518-07-19 00:30] wakes up\n', '[1518-09-25 00:57] falls asleep\n', '[1518-05-21 00:41] falls asleep\n', '[1518-10-26 00:39] wakes up\n', '[1518-06-24 23:50] Guard #3319 begins shift\n', '[1518-08-18 00:51] wakes up\n', '[1518-08-25 23:56] Guard #1783 begins shift\n', '[1518-09-29 00:00] Guard #179 begins shift\n', '[1518-09-10 00:48] wakes up\n', '[1518-06-14 00:10] falls asleep\n', '[1518-05-20 00:38] falls asleep\n', '[1518-06-02 00:56] wakes up\n', '[1518-10-06 00:43] falls asleep\n', '[1518-05-16 00:48] wakes up\n', '[1518-04-15 00:00] Guard #179 begins shift\n', '[1518-09-24 23:59] Guard #2467 begins shift\n', '[1518-09-21 00:49] wakes up\n', '[1518-09-21 00:19] falls asleep\n', '[1518-07-17 00:51] wakes up\n', '[1518-04-27 00:41] wakes up\n', '[1518-05-09 00:39] falls asleep\n', '[1518-08-12 00:49] falls asleep\n', '[1518-09-15 00:37] falls asleep\n', '[1518-05-03 00:16] falls asleep\n', '[1518-08-16 23:49] Guard #2477 begins shift\n', '[1518-11-10 00:45] wakes up\n', '[1518-07-26 00:32] falls asleep\n', '[1518-08-06 00:01] Guard #499 begins shift\n', '[1518-07-30 00:26] falls asleep\n', '[1518-09-14 00:01] Guard #643 begins shift\n', '[1518-09-29 00:59] wakes up\n', '[1518-04-18 00:48] wakes up\n', '[1518-09-29 00:08] falls asleep\n', '[1518-10-29 00:46] falls asleep\n', '[1518-07-19 00:55] wakes up\n', '[1518-07-06 00:38] falls asleep\n', '[1518-09-05 00:22] falls asleep\n', '[1518-04-13 00:26] wakes up\n', '[1518-11-22 23:46] Guard #251 begins shift\n', '[1518-04-06 00:55] wakes up\n', '[1518-08-12 00:06] falls asleep\n', '[1518-04-28 00:01] Guard #2971 begins shift\n', '[1518-04-28 00:43] falls asleep\n', '[1518-05-09 00:33] falls asleep\n', '[1518-09-16 00:59] wakes up\n', '[1518-08-21 00:16] falls asleep\n', '[1518-09-02 00:10] falls asleep\n', '[1518-08-19 00:23] falls asleep\n', '[1518-05-16 00:19] falls asleep\n', '[1518-06-23 00:39] wakes up\n', '[1518-04-18 00:57] wakes up\n', '[1518-09-22 00:17] wakes up\n', '[1518-06-15 00:04] falls asleep\n', '[1518-10-13 00:00] Guard #1811 begins shift\n', '[1518-10-18 00:02] Guard #751 begins shift\n', '[1518-10-26 00:24] falls asleep\n', '[1518-05-10 00:53] falls asleep\n', '[1518-06-22 00:01] Guard #3319 begins shift\n', '[1518-11-13 00:56] falls asleep\n', '[1518-07-14 00:16] falls asleep\n', '[1518-05-21 00:57] wakes up\n', '[1518-10-06 00:50] wakes up\n', '[1518-06-21 00:36] falls asleep\n', '[1518-04-08 00:47] wakes up\n', '[1518-09-06 00:10] falls asleep\n', '[1518-10-02 00:58] wakes up\n', '[1518-05-28 00:03] falls asleep\n', '[1518-09-15 00:58] wakes up\n', '[1518-07-28 00:02] Guard #2477 begins shift\n', '[1518-10-02 00:35] wakes up\n', '[1518-08-19 00:33] wakes up\n', '[1518-07-14 00:27] wakes up\n', '[1518-08-31 00:33] falls asleep\n', '[1518-05-06 00:58] wakes up\n', '[1518-05-24 00:10] falls asleep\n', '[1518-05-20 00:01] Guard #643 begins shift\n', '[1518-04-12 00:32] falls asleep\n', '[1518-09-16 00:17] falls asleep\n', '[1518-05-27 00:16] falls asleep\n', '[1518-11-17 00:15] falls asleep\n', '[1518-08-28 00:08] wakes up\n', '[1518-08-29 00:13] falls asleep\n', '[1518-09-20 00:23] falls asleep\n', '[1518-05-25 00:46] falls asleep\n', '[1518-05-26 00:59] wakes up\n', '[1518-07-28 00:16] falls asleep\n', '[1518-08-28 00:36] wakes up\n', '[1518-11-16 00:58] wakes up\n', '[1518-10-06 00:59] wakes up\n', '[1518-05-13 00:40] falls asleep\n', '[1518-09-29 00:35] wakes up\n', '[1518-11-06 00:04] falls asleep\n', '[1518-04-09 23:57] Guard #619 begins shift\n', '[1518-05-09 23:58] Guard #2467 begins shift\n', '[1518-09-17 23:59] Guard #619 begins shift\n', '[1518-11-08 00:51] wakes up\n', '[1518-05-29 00:37] wakes up\n', '[1518-05-01 00:44] falls asleep\n', '[1518-04-14 00:03] falls asleep\n', '[1518-10-09 00:59] wakes up\n', '[1518-09-14 23:59] Guard #911 begins shift\n', '[1518-07-21 00:38] falls asleep\n', '[1518-08-11 00:00] Guard #2273 begins shift\n', '[1518-05-17 00:57] wakes up\n', '[1518-04-24 00:54] wakes up\n', '[1518-11-07 00:39] falls asleep\n', '[1518-04-15 00:39] falls asleep\n', '[1518-10-28 00:57] wakes up\n', '[1518-05-24 23:59] Guard #3319 begins shift\n', '[1518-11-07 00:58] wakes up\n', '[1518-10-28 00:08] falls asleep\n', '[1518-08-27 23:53] Guard #2273 begins shift\n', '[1518-05-14 00:02] Guard #251 begins shift\n', '[1518-09-01 00:00] Guard #751 begins shift\n', '[1518-09-20 00:08] falls asleep\n', '[1518-09-23 00:05] falls asleep\n', '[1518-04-09 00:23] falls asleep\n', '[1518-09-25 00:58] wakes up\n', '[1518-07-21 00:59] wakes up\n', '[1518-08-08 00:40] wakes up\n', '[1518-05-13 00:04] Guard #1783 begins shift\n', '[1518-08-23 00:48] wakes up\n', '[1518-08-26 00:46] falls asleep\n', '[1518-10-13 00:12] falls asleep\n', '[1518-05-29 00:25] falls asleep\n', '[1518-09-18 00:16] falls asleep\n', '[1518-07-16 00:10] falls asleep\n', '[1518-06-10 00:52] wakes up\n', '[1518-06-29 00:30] wakes up\n', '[1518-08-06 23:48] Guard #2477 begins shift\n', '[1518-11-18 00:44] falls asleep\n', '[1518-11-19 00:16] wakes up\n', '[1518-11-07 00:12] falls asleep\n', '[1518-05-19 00:46] wakes up\n', '[1518-11-18 00:49] wakes up\n', '[1518-10-21 00:38] falls asleep\n', '[1518-04-20 00:42] falls asleep\n', '[1518-09-21 00:30] wakes up\n', '[1518-07-20 00:25] falls asleep\n', '[1518-07-12 00:18] falls asleep\n', '[1518-07-02 00:50] falls asleep\n', '[1518-05-31 00:02] falls asleep\n', '[1518-06-05 00:51] wakes up\n', '[1518-10-28 23:58] Guard #2477 begins shift\n', '[1518-07-14 00:59] wakes up\n', '[1518-10-30 00:34] wakes up\n', '[1518-10-19 00:00] Guard #1783 begins shift\n', '[1518-07-13 00:00] Guard #751 begins shift\n', '[1518-07-21 00:57] falls asleep\n', '[1518-10-01 00:42] wakes up\n', '[1518-08-29 00:04] Guard #643 begins shift\n', '[1518-08-01 23:58] Guard #457 begins shift\n', '[1518-11-08 00:02] Guard #179 begins shift\n', '[1518-11-06 00:36] wakes up\n', '[1518-10-03 00:57] wakes up\n', '[1518-11-15 00:29] falls asleep\n', '[1518-05-05 00:44] falls asleep\n', '[1518-08-02 00:42] falls asleep\n', '[1518-10-16 00:42] wakes up\n', '[1518-05-05 00:01] Guard #1811 begins shift\n', '[1518-10-27 00:21] wakes up\n', '[1518-05-09 00:34] wakes up\n', '[1518-05-01 00:03] Guard #1783 begins shift\n', '[1518-09-08 00:50] wakes up\n', '[1518-11-01 23:56] Guard #2477 begins shift\n', '[1518-07-03 23:59] Guard #1811 begins shift\n', '[1518-05-23 23:58] Guard #3319 begins shift\n', '[1518-11-09 00:41] falls asleep\n', '[1518-07-12 00:59] wakes up\n', '[1518-06-30 00:54] wakes up\n', '[1518-09-16 00:20] wakes up\n', '[1518-11-22 00:09] falls asleep\n', '[1518-08-12 00:55] wakes up\n', '[1518-07-09 00:44] wakes up\n', '[1518-06-27 23:51] Guard #1051 begins shift\n', '[1518-09-25 23:59] Guard #1051 begins shift\n', '[1518-07-05 00:58] wakes up\n', '[1518-09-27 00:02] Guard #617 begins shift\n', '[1518-11-11 00:05] falls asleep\n', '[1518-07-28 00:56] wakes up\n', '[1518-08-25 00:33] falls asleep\n', '[1518-05-23 00:50] wakes up\n', '[1518-07-07 00:35] wakes up\n', '[1518-08-22 00:45] wakes up\n', '[1518-10-22 00:23] wakes up\n', '[1518-08-11 00:10] falls asleep\n', '[1518-05-30 00:47] falls asleep\n', '[1518-05-28 23:57] Guard #2467 begins shift\n', '[1518-10-22 00:15] falls asleep\n', '[1518-04-10 00:29] falls asleep\n', '[1518-04-11 00:00] Guard #1783 begins shift\n', '[1518-07-31 00:53] wakes up\n', '[1518-11-20 00:02] falls asleep\n', '[1518-05-15 00:48] falls asleep\n', '[1518-10-06 00:44] wakes up\n', '[1518-08-24 00:33] wakes up\n', '[1518-06-03 00:44] wakes up\n', '[1518-06-16 00:51] falls asleep\n', '[1518-07-04 23:58] Guard #179 begins shift\n', '[1518-11-20 00:53] wakes up\n', '[1518-09-24 00:03] Guard #179 begins shift\n', '[1518-05-30 00:04] Guard #2917 begins shift\n', '[1518-10-02 23:56] Guard #643 begins shift\n', '[1518-07-23 00:42] falls asleep\n', '[1518-06-09 23:56] Guard #251 begins shift\n', '[1518-07-13 00:46] falls asleep\n', '[1518-09-23 00:38] falls asleep\n', '[1518-04-16 00:01] falls asleep\n', '[1518-11-15 00:41] wakes up\n', '[1518-08-04 00:02] Guard #2971 begins shift\n', '[1518-08-03 00:02] Guard #2477 begins shift\n', '[1518-09-02 00:45] wakes up\n', '[1518-11-05 23:53] Guard #2467 begins shift\n', '[1518-08-16 00:59] wakes up\n', '[1518-06-18 00:49] wakes up\n', '[1518-09-05 00:01] Guard #499 begins shift\n', '[1518-07-13 00:54] wakes up\n', '[1518-04-27 00:57] falls asleep\n', '[1518-09-29 00:41] falls asleep\n', '[1518-05-16 00:32] wakes up\n', '[1518-05-15 00:02] falls asleep\n', '[1518-09-30 00:53] wakes up\n', '[1518-05-23 00:07] falls asleep\n', '[1518-08-04 00:43] falls asleep\n', '[1518-07-26 00:11] falls asleep\n', '[1518-10-27 23:58] Guard #1051 begins shift\n', '[1518-04-15 00:46] wakes up\n', '[1518-07-10 00:43] falls asleep\n', '[1518-11-03 00:55] wakes up\n', '[1518-05-22 00:51] wakes up\n', '[1518-07-21 00:42] wakes up\n', '[1518-09-22 00:52] falls asleep\n', '[1518-11-09 00:12] falls asleep\n', '[1518-07-07 00:57] falls asleep\n', '[1518-09-06 00:29] wakes up\n', '[1518-06-25 00:35] wakes up\n', '[1518-07-02 23:59] Guard #2657 begins shift\n', '[1518-10-01 00:03] Guard #251 begins shift\n', '[1518-06-28 00:04] falls asleep\n', '[1518-05-10 00:29] wakes up\n', '[1518-06-14 23:51] Guard #1811 begins shift\n', '[1518-08-28 00:21] falls asleep\n', '[1518-06-29 00:00] Guard #1811 begins shift\n', '[1518-10-23 23:58] Guard #179 begins shift\n', '[1518-08-26 00:57] wakes up\n', '[1518-06-13 00:56] wakes up\n', '[1518-10-01 00:59] wakes up\n', '[1518-04-08 00:35] falls asleep\n', '[1518-07-07 00:58] wakes up\n', '[1518-09-22 00:59] wakes up\n', '[1518-04-27 00:54] wakes up\n', '[1518-08-27 00:00] Guard #3467 begins shift\n', '[1518-08-13 23:56] Guard #457 begins shift\n', '[1518-11-03 00:00] Guard #1811 begins shift\n', '[1518-05-21 23:59] Guard #3467 begins shift\n', '[1518-11-14 00:35] falls asleep\n', '[1518-06-13 00:24] falls asleep\n', '[1518-05-18 23:52] Guard #2917 begins shift\n', '[1518-09-30 00:42] wakes up\n', '[1518-04-16 23:59] Guard #751 begins shift\n', '[1518-10-08 00:34] falls asleep\n', '[1518-08-21 00:35] falls asleep\n', '[1518-11-01 00:47] wakes up\n', '[1518-04-24 00:33] falls asleep\n', '[1518-09-02 23:57] Guard #2917 begins shift\n', '[1518-10-24 00:28] falls asleep\n', '[1518-06-12 00:30] wakes up\n', '[1518-05-19 00:27] wakes up\n', '[1518-05-30 00:41] falls asleep\n', '[1518-09-14 00:18] falls asleep\n', '[1518-05-19 00:00] falls asleep\n', '[1518-07-25 00:31] wakes up\n', '[1518-04-22 00:00] Guard #619 begins shift\n', '[1518-05-17 23:56] Guard #499 begins shift\n', '[1518-08-09 00:59] wakes up\n', '[1518-06-01 23:59] Guard #3167 begins shift\n', '[1518-09-22 23:52] Guard #643 begins shift\n', '[1518-07-27 00:27] falls asleep\n', '[1518-04-30 00:24] wakes up\n', '[1518-04-06 00:09] falls asleep\n', '[1518-06-20 00:29] falls asleep\n', '[1518-06-12 00:33] falls asleep\n', '[1518-08-09 00:53] falls asleep\n', '[1518-05-11 00:59] wakes up\n', '[1518-11-08 00:28] falls asleep\n', '[1518-06-11 00:01] falls asleep\n', '[1518-05-25 00:55] wakes up\n', '[1518-06-03 00:52] wakes up\n', '[1518-09-23 00:31] wakes up\n', '[1518-05-01 00:39] wakes up\n', '[1518-05-05 00:53] wakes up\n', '[1518-04-28 23:57] Guard #643 begins shift\n', '[1518-07-17 23:59] Guard #2657 begins shift\n', '[1518-10-10 00:49] wakes up\n', '[1518-10-30 00:30] falls asleep\n', '[1518-09-12 00:33] wakes up\n', '[1518-05-17 00:03] Guard #179 begins shift\n', '[1518-06-03 00:25] falls asleep\n', '[1518-07-03 00:51] wakes up\n', '[1518-07-12 00:57] falls asleep\n', '[1518-11-19 00:35] falls asleep\n', '[1518-10-16 00:11] falls asleep\n', '[1518-11-16 00:22] falls asleep\n', '[1518-11-08 00:56] falls asleep\n', '[1518-10-20 00:07] falls asleep\n', '[1518-09-10 00:25] wakes up\n', '[1518-08-23 00:02] Guard #2467 begins shift\n', '[1518-05-09 00:57] wakes up\n', '[1518-08-10 00:28] wakes up\n', '[1518-10-21 00:43] falls asleep\n', '[1518-11-22 00:04] Guard #3319 begins shift\n', '[1518-04-20 00:43] wakes up\n', '[1518-07-09 00:40] falls asleep\n', '[1518-10-29 00:29] wakes up\n', '[1518-05-04 00:45] wakes up\n', '[1518-05-08 00:02] Guard #457 begins shift\n', '[1518-11-21 00:48] falls asleep\n', '[1518-07-09 00:05] falls asleep\n', '[1518-05-30 00:43] wakes up\n', '[1518-08-11 00:31] wakes up\n', '[1518-11-19 00:02] Guard #2971 begins shift\n', '[1518-06-24 00:01] Guard #2467 begins shift\n', '[1518-11-10 00:57] wakes up\n', '[1518-06-20 00:58] wakes up\n', '[1518-11-09 00:28] wakes up\n', '[1518-04-09 00:50] wakes up\n', '[1518-09-11 00:00] Guard #1783 begins shift\n', '[1518-10-07 23:53] Guard #2971 begins shift\n', '[1518-04-06 00:00] Guard #499 begins shift\n', '[1518-06-08 00:01] Guard #617 begins shift\n', '[1518-11-04 00:47] wakes up\n', '[1518-07-28 00:20] wakes up\n', '[1518-10-27 00:53] wakes up\n', '[1518-05-15 00:32] wakes up\n', '[1518-08-07 00:04] falls asleep\n', '[1518-07-19 00:35] falls asleep\n', '[1518-09-28 00:00] Guard #1783 begins shift\n', '[1518-05-08 00:48] falls asleep\n', '[1518-05-24 00:52] falls asleep\n', '[1518-05-13 00:45] wakes up\n', '[1518-08-20 00:03] Guard #499 begins shift\n', '[1518-06-05 00:03] Guard #179 begins shift\n', '[1518-09-02 00:41] falls asleep\n', '[1518-09-17 00:56] wakes up\n', '[1518-04-11 00:06] falls asleep\n', '[1518-10-07 00:28] wakes up\n', '[1518-08-27 00:49] wakes up\n', '[1518-09-07 00:24] wakes up\n', '[1518-06-25 00:48] falls asleep\n', '[1518-09-02 00:00] Guard #3319 begins shift\n', '[1518-08-10 00:26] falls asleep\n', '[1518-08-14 00:21] falls asleep\n', '[1518-07-12 00:00] Guard #2477 begins shift\n', '[1518-08-05 00:03] Guard #251 begins shift\n', '[1518-05-07 00:00] Guard #571 begins shift\n', '[1518-06-03 23:51] Guard #2477 begins shift\n', '[1518-10-12 00:58] wakes up\n', '[1518-09-22 00:00] Guard #3467 begins shift\n', '[1518-11-19 23:46] Guard #3167 begins shift\n', '[1518-04-21 00:03] Guard #619 begins shift\n', '[1518-08-21 00:56] wakes up\n', '[1518-10-02 00:01] Guard #2971 begins shift\n', '[1518-05-18 00:23] falls asleep\n', '[1518-10-14 00:57] wakes up\n', '[1518-11-19 00:39] falls asleep\n', '[1518-08-12 00:14] wakes up\n', '[1518-04-19 00:56] wakes up\n', '[1518-11-11 00:46] falls asleep\n', '[1518-08-07 23:58] Guard #911 begins shift\n', '[1518-10-06 00:02] Guard #643 begins shift\n', '[1518-04-25 00:41] falls asleep\n', '[1518-08-08 23:57] Guard #251 begins shift\n', '[1518-07-25 00:00] falls asleep\n', '[1518-06-22 00:29] falls asleep\n', '[1518-11-12 00:55] wakes up\n', '[1518-04-11 00:48] wakes up\n', '[1518-10-16 23:58] Guard #571 begins shift\n', '[1518-05-01 00:35] falls asleep\n', '[1518-08-15 00:08] falls asleep\n', '[1518-09-24 00:14] falls asleep\n', '[1518-07-30 00:21] wakes up\n', '[1518-11-21 00:19] wakes up\n', '[1518-11-16 23:56] Guard #911 begins shift\n', '[1518-06-25 23:57] Guard #3167 begins shift\n', '[1518-05-16 00:46] falls asleep\n', '[1518-06-29 00:52] wakes up\n', '[1518-10-06 00:48] falls asleep\n', '[1518-05-27 00:04] Guard #2917 begins shift\n', '[1518-04-18 00:54] falls asleep\n', '[1518-04-15 00:54] falls asleep\n', '[1518-08-12 23:56] Guard #3467 begins shift\n', '[1518-10-05 00:41] falls asleep\n', '[1518-07-17 00:13] falls asleep\n', '[1518-06-20 23:56] Guard #2273 begins shift\n', '[1518-04-24 00:17] falls asleep\n', '[1518-04-16 00:55] wakes up\n', '[1518-09-19 00:13] wakes up\n', '[1518-07-06 00:29] wakes up\n', '[1518-04-07 00:55] wakes up\n', '[1518-05-19 00:44] falls asleep\n', '[1518-11-05 00:42] wakes up\n', '[1518-07-11 00:00] Guard #179 begins shift\n', '[1518-04-29 23:59] Guard #457 begins shift\n', '[1518-06-14 00:45] wakes up\n', '[1518-06-19 23:58] Guard #2917 begins shift\n', '[1518-05-26 00:16] falls asleep\n', '[1518-08-31 00:38] wakes up\n', '[1518-07-18 00:55] wakes up\n', '[1518-05-23 00:54] falls asleep\n', '[1518-07-08 23:46] Guard #3467 begins shift\n', '[1518-06-06 00:01] Guard #643 begins shift\n', '[1518-07-01 00:48] falls asleep\n', '[1518-05-18 00:24] wakes up\n', '[1518-09-03 00:29] falls asleep\n', '[1518-06-18 00:34] falls asleep\n', '[1518-04-24 00:27] wakes up\n', '[1518-06-12 00:54] wakes up\n', '[1518-09-19 00:08] falls asleep\n', '[1518-10-25 00:22] falls asleep\n', '[1518-05-24 00:58] wakes up\n', '[1518-10-11 00:00] Guard #571 begins shift\n', '[1518-08-14 00:27] wakes up\n', '[1518-09-04 00:47] wakes up\n', '[1518-07-18 00:33] falls asleep\n', '[1518-09-10 00:00] Guard #2273 begins shift\n', '[1518-05-22 23:59] Guard #3467 begins shift\n', '[1518-05-01 00:45] wakes up\n', '[1518-05-04 00:17] falls asleep\n', '[1518-09-05 00:43] wakes up\n', '[1518-06-17 00:47] wakes up\n', '[1518-08-24 23:58] Guard #619 begins shift\n', '[1518-04-20 00:02] Guard #3319 begins shift\n', '[1518-10-21 00:39] wakes up\n', '[1518-09-01 00:39] falls asleep\n', '[1518-07-08 00:40] wakes up\n', '[1518-09-09 00:42] falls asleep\n', '[1518-07-17 00:47] falls asleep\n', '[1518-07-08 00:00] Guard #643 begins shift\n', '[1518-09-01 00:31] wakes up\n', '[1518-11-09 00:43] wakes up\n', '[1518-04-09 00:00] Guard #751 begins shift\n', '[1518-07-06 00:09] falls asleep\n', '[1518-04-23 00:06] falls asleep\n', '[1518-08-15 00:49] wakes up\n', '[1518-07-24 00:58] wakes up\n', '[1518-05-20 00:15] wakes up\n', '[1518-06-29 23:50] Guard #2467 begins shift\n', '[1518-11-23 00:03] falls asleep\n', '[1518-10-18 00:24] falls asleep\n', '[1518-08-24 00:32] falls asleep\n', '[1518-10-09 00:32] falls asleep\n', '[1518-09-20 00:36] wakes up\n', '[1518-09-19 00:52] wakes up\n', '[1518-06-16 00:46] wakes up\n', '[1518-11-08 00:58] wakes up\n', '[1518-07-29 00:50] falls asleep\n', '[1518-10-15 23:57] Guard #1811 begins shift\n', '[1518-08-21 00:30] wakes up\n', '[1518-06-25 00:56] wakes up\n', '[1518-05-06 00:44] wakes up\n', '[1518-11-12 00:04] Guard #499 begins shift\n', '[1518-05-20 00:59] wakes up\n', '[1518-08-20 00:52] wakes up\n', '[1518-08-22 00:02] Guard #1783 begins shift\n', '[1518-09-17 00:04] falls asleep\n', '[1518-09-17 00:39] falls asleep\n', '[1518-05-06 00:16] falls asleep\n', '[1518-04-06 00:43] falls asleep\n', '[1518-11-04 00:42] falls asleep\n', '[1518-07-10 00:48] wakes up\n', '[1518-08-14 23:58] Guard #2273 begins shift\n', '[1518-08-05 00:34] wakes up\n', '[1518-06-10 23:54] Guard #3167 begins shift\n', '[1518-11-19 00:36] wakes up\n', '[1518-07-28 00:53] falls asleep\n', '[1518-10-03 00:39] falls asleep\n', '[1518-05-27 23:52] Guard #251 begins shift\n', '[1518-04-19 00:38] falls asleep\n', '[1518-09-20 00:13] wakes up\n', '[1518-06-24 00:55] wakes up\n', '[1518-04-13 23:54] Guard #179 begins shift\n', '[1518-08-27 00:39] falls asleep\n', '[1518-05-20 00:11] falls asleep\n', '[1518-06-07 00:28] wakes up\n', '[1518-10-08 00:03] falls asleep\n', '[1518-10-31 00:32] wakes up\n', '[1518-05-11 00:01] Guard #179 begins shift\n', '[1518-11-02 00:28] wakes up\n', '[1518-10-22 00:01] Guard #251 begins shift\n', '[1518-11-02 00:51] falls asleep\n', '[1518-06-10 00:56] falls asleep\n', '[1518-08-11 00:52] wakes up\n', '[1518-05-14 00:13] wakes up\n', '[1518-11-10 00:55] falls asleep\n', '[1518-08-07 00:59] wakes up\n', '[1518-06-21 00:27] wakes up\n', '[1518-09-12 00:02] Guard #3319 begins shift\n', '[1518-10-23 00:49] wakes up\n', '[1518-11-03 23:58] Guard #1783 begins shift\n', '[1518-10-20 00:03] Guard #3167 begins shift\n', '[1518-04-18 00:04] falls asleep\n', '[1518-07-06 23:57] Guard #3467 begins shift\n', '[1518-08-03 00:28] falls asleep\n', '[1518-11-12 00:20] wakes up\n', '[1518-07-20 00:52] wakes up\n', '[1518-08-23 00:39] falls asleep\n', '[1518-04-21 00:23] falls asleep\n', '[1518-11-03 00:08] falls asleep\n', '[1518-07-26 00:57] wakes up\n', '[1518-04-17 00:31] falls asleep\n', '[1518-06-14 00:04] Guard #1783 begins shift\n', '[1518-09-14 00:45] wakes up\n', '[1518-06-16 00:58] wakes up\n', '[1518-06-19 00:41] wakes up\n', '[1518-06-19 00:28] falls asleep\n', '[1518-09-09 00:18] falls asleep\n', '[1518-08-10 00:01] Guard #457 begins shift\n', '[1518-05-26 00:00] Guard #1783 begins shift\n', '[1518-09-12 23:46] Guard #3467 begins shift\n', '[1518-06-12 00:25] falls asleep\n', '[1518-11-07 00:00] Guard #3467 begins shift\n', '[1518-07-22 00:31] falls asleep\n', '[1518-04-17 00:59] wakes up\n', '[1518-08-13 00:32] falls asleep\n', '[1518-05-08 00:52] wakes up\n', '[1518-05-12 00:11] falls asleep\n', '[1518-06-01 00:31] falls asleep\n', '[1518-05-01 23:58] Guard #1783 begins shift\n', '[1518-05-14 00:47] wakes up\n', '[1518-05-02 23:56] Guard #457 begins shift\n', '[1518-07-30 00:03] Guard #3167 begins shift\n', '[1518-05-30 23:51] Guard #911 begins shift\n', '[1518-09-25 00:54] wakes up\n', '[1518-07-04 00:52] wakes up\n', '[1518-05-22 00:27] falls asleep\n', '[1518-05-10 00:55] wakes up\n', '[1518-04-14 00:30] wakes up\n', '[1518-04-26 00:04] Guard #2917 begins shift\n', '[1518-05-24 00:27] falls asleep\n', '[1518-07-02 00:57] wakes up\n', '[1518-07-01 23:48] Guard #3467 begins shift\n', '[1518-11-09 00:03] Guard #619 begins shift\n', '[1518-11-03 00:17] falls asleep\n', '[1518-07-19 23:57] Guard #457 begins shift\n', '[1518-09-21 00:02] Guard #3167 begins shift\n', '[1518-04-30 00:21] falls asleep\n', '[1518-07-31 00:25] falls asleep\n', '[1518-10-27 00:02] Guard #1783 begins shift\n', '[1518-09-13 00:49] wakes up\n', '[1518-09-20 00:00] Guard #499 begins shift\n', '[1518-07-01 00:04] Guard #499 begins shift\n', '[1518-08-15 23:50] Guard #2467 begins shift\n', '[1518-05-03 00:25] wakes up\n', '[1518-06-08 23:48] Guard #1811 begins shift\n', '[1518-04-12 00:57] wakes up\n', '[1518-08-16 00:00] falls asleep\n', '[1518-09-02 00:13] wakes up\n', '[1518-11-19 00:14] falls asleep\n', '[1518-10-25 00:52] wakes up\n', '[1518-04-23 00:20] wakes up\n', '[1518-05-28 00:08] wakes up\n', '[1518-08-07 00:54] wakes up\n', '[1518-09-19 00:48] falls asleep\n', '[1518-05-16 00:58] wakes up\n', '[1518-04-14 00:40] falls asleep\n', '[1518-05-02 00:45] wakes up\n', '[1518-06-13 00:44] wakes up\n', '[1518-05-14 23:47] Guard #2467 begins shift\n', '[1518-11-13 00:58] wakes up\n', '[1518-05-11 23:59] Guard #2477 begins shift\n', '[1518-09-01 00:40] wakes up\n', '[1518-06-07 00:12] falls asleep\n', '[1518-10-15 00:00] Guard #751 begins shift\n', '[1518-11-02 00:52] wakes up\n', '[1518-05-16 00:54] falls asleep\n', '[1518-10-25 00:01] Guard #2657 begins shift\n', '[1518-10-06 00:55] falls asleep\n', '[1518-07-12 00:53] wakes up\n', '[1518-10-27 00:41] falls asleep\n', '[1518-11-06 00:54] falls asleep\n', '[1518-06-06 23:57] Guard #2477 begins shift\n', '[1518-11-09 23:56] Guard #619 begins shift\n', '[1518-04-21 00:51] wakes up\n', '[1518-11-19 00:58] wakes up\n', '[1518-04-29 00:38] falls asleep\n', '[1518-08-28 00:03] falls asleep\n', '[1518-04-28 00:52] wakes up\n', '[1518-11-01 00:15] falls asleep\n', '[1518-10-31 00:27] falls asleep\n', '[1518-10-02 00:49] falls asleep\n', '[1518-04-07 00:08] falls asleep\n', '[1518-10-14 00:03] Guard #2467 begins shift\n', '[1518-10-01 00:29] falls asleep\n', '[1518-09-28 00:38] falls asleep\n', '[1518-06-10 00:18] falls asleep\n', '[1518-07-25 00:35] falls asleep\n', '[1518-06-28 00:35] wakes up\n', '[1518-11-14 00:51] wakes up\n', '[1518-06-21 00:14] falls asleep\n', '[1518-07-16 00:39] wakes up\n', '[1518-10-31 00:02] Guard #179 begins shift\n', '[1518-04-14 00:57] wakes up\n', '[1518-07-11 00:59] wakes up\n', '[1518-05-14 00:11] falls asleep\n', '[1518-04-15 00:58] wakes up\n', '[1518-09-03 00:30] wakes up\n', '[1518-07-21 00:03] falls asleep\n', '[1518-11-10 00:26] falls asleep\n', '[1518-09-26 00:29] falls asleep\n', '[1518-11-17 00:27] wakes up\n', '[1518-09-23 00:51] wakes up\n', '[1518-07-07 00:10] falls asleep\n', '[1518-08-30 00:01] falls asleep\n', '[1518-08-06 00:26] wakes up\n', '[1518-10-08 00:18] wakes up\n', '[1518-07-01 00:27] wakes up\n', '[1518-05-09 00:03] Guard #2467 begins shift\n', '[1518-06-24 00:08] falls asleep\n', '[1518-10-09 23:59] Guard #1051 begins shift\n', '[1518-09-22 00:09] falls asleep\n', '[1518-05-21 00:00] Guard #1783 begins shift\n', '[1518-06-04 00:52] wakes up\n', '[1518-10-08 23:58] Guard #1051 begins shift\n', '[1518-09-07 23:52] Guard #619 begins shift\n', '[1518-08-20 00:15] wakes up\n', '[1518-06-11 00:53] falls asleep\n', '[1518-11-12 00:16] falls asleep\n', '[1518-05-30 00:56] wakes up\n', '[1518-07-24 00:24] falls asleep\n', '[1518-07-02 00:04] falls asleep\n', '[1518-06-16 00:25] falls asleep\n', '[1518-10-14 00:06] falls asleep\n', '[1518-04-12 00:51] wakes up\n', '[1518-08-01 00:00] Guard #3167 begins shift\n', '[1518-11-21 00:53] wakes up\n', '[1518-08-05 00:08] falls asleep\n', '[1518-05-10 00:25] falls asleep\n', '[1518-07-05 00:45] falls asleep\n', '[1518-07-14 00:34] falls asleep\n', '[1518-04-15 23:46] Guard #179 begins shift\n', '[1518-09-30 00:45] falls asleep\n', '[1518-07-27 00:31] wakes up\n', '[1518-06-10 00:44] wakes up\n', '[1518-04-27 00:58] wakes up\n', '[1518-07-19 00:18] falls asleep\n', '[1518-06-04 00:02] falls asleep\n', '[1518-06-22 00:55] wakes up\n', '[1518-07-30 00:20] falls asleep\n', '[1518-08-04 00:46] wakes up\n', '[1518-08-02 00:59] wakes up\n', '[1518-06-13 00:49] falls asleep\n', '[1518-04-22 00:28] falls asleep\n', '[1518-11-14 23:57] Guard #3319 begins shift\n', '[1518-08-26 00:09] falls asleep\n', '[1518-06-13 00:04] Guard #179 begins shift\n', '[1518-11-06 00:55] wakes up\n', '[1518-06-09 00:00] falls asleep\n', '[1518-05-14 00:23] falls asleep\n', '[1518-09-22 00:21] falls asleep\n', '[1518-10-10 00:31] wakes up\n', '[1518-10-29 00:09] falls asleep\n', '[1518-04-12 23:58] Guard #3167 begins shift\n', '[1518-10-13 00:42] wakes up\n', '[1518-08-18 00:03] wakes up\n', '[1518-05-02 00:26] falls asleep\n', '[1518-04-23 00:01] Guard #499 begins shift\n', '[1518-08-20 00:25] falls asleep\n', '[1518-08-22 00:42] falls asleep\n', '[1518-04-17 23:53] Guard #2273 begins shift\n', '[1518-08-23 23:58] Guard #179 begins shift\n', '[1518-04-24 23:59] Guard #1783 begins shift\n', '[1518-04-29 00:56] wakes up\n', '[1518-10-19 00:16] falls asleep\n', '[1518-09-30 00:04] falls asleep\n', '[1518-09-21 00:47] falls asleep\n', '[1518-06-06 00:42] wakes up\n', '[1518-08-26 00:38] wakes up\n', '[1518-07-26 00:18] wakes up\n', '[1518-06-25 00:04] falls asleep\n', '[1518-07-13 23:56] Guard #2467 begins shift\n', '[1518-09-10 00:31] falls asleep\n', '[1518-09-13 00:05] falls asleep\n', '[1518-10-19 00:28] wakes up\n', '[1518-10-04 00:52] wakes up\n', '[1518-10-04 00:51] falls asleep\n', '[1518-10-29 00:53] wakes up\n', '[1518-07-29 00:53] wakes up\n', '[1518-11-21 00:02] Guard #2273 begins shift\n', '[1518-10-27 00:17] falls asleep\n', '[1518-05-23 00:28] wakes up\n', '[1518-04-27 00:03] Guard #2273 begins shift\n', '[1518-06-05 00:49] falls asleep\n', '[1518-07-22 23:56] Guard #619 begins shift\n', '[1518-09-07 00:22] falls asleep\n', '[1518-07-29 00:00] Guard #499 begins shift\n', '[1518-07-16 00:03] Guard #2273 begins shift\n', '[1518-11-03 00:13] wakes up\n', '[1518-11-13 23:59] Guard #911 begins shift\n', '[1518-08-30 23:59] Guard #643 begins shift\n', '[1518-07-22 00:07] wakes up\n', '[1518-05-11 00:55] falls asleep\n', '[1518-09-24 00:41] wakes up\n', '[1518-06-11 00:58] wakes up\n', '[1518-09-16 00:29] falls asleep\n', '[1518-04-22 00:53] wakes up\n', '[1518-09-18 23:57] Guard #2273 begins shift\n', '[1518-04-26 00:51] wakes up\n', '[1518-06-16 00:04] Guard #457 begins shift\n', '[1518-10-24 00:56] wakes up\n', '[1518-06-23 00:05] falls asleep\n', '[1518-05-27 00:39] wakes up\n', '[1518-08-17 00:36] wakes up\n', '[1518-07-08 00:53] wakes up\n', '[1518-07-04 00:13] falls asleep\n', '[1518-10-18 00:34] wakes up\n', '[1518-10-10 00:06] falls asleep\n', '[1518-08-01 00:46] wakes up\n', '[1518-07-06 00:53] wakes up\n', '[1518-04-13 00:51] wakes up\n', '[1518-07-30 23:56] Guard #619 begins shift\n', '[1518-07-15 00:20] falls asleep\n', '[1518-07-25 23:57] Guard #179 begins shift\n', '[1518-07-19 00:04] Guard #911 begins shift\n', '[1518-10-15 00:43] wakes up\n', '[1518-09-26 00:58] wakes up\n', '[1518-06-17 00:31] falls asleep\n', '[1518-06-12 00:01] Guard #911 begins shift\n', '[1518-05-15 00:58] wakes up\n', '[1518-04-06 23:59] Guard #1783 begins shift\n', '[1518-09-03 23:57] Guard #619 begins shift\n', '[1518-04-27 00:27] falls asleep\n', '[1518-07-01 00:20] falls asleep\n', '[1518-09-29 23:50] Guard #911 begins shift\n', '[1518-06-10 00:58] wakes up\n', '[1518-10-12 00:52] falls asleep\n', '[1518-04-06 00:32] wakes up\n', '[1518-08-18 00:01] falls asleep\n', '[1518-07-15 00:45] wakes up\n', '[1518-11-04 23:57] Guard #2657 begins shift\n', '[1518-06-03 00:50] falls asleep\n', '[1518-10-07 00:04] falls asleep\n', '[1518-10-15 00:58] wakes up\n', '[1518-08-07 00:57] falls asleep\n', '[1518-08-17 00:01] falls asleep\n', '[1518-06-26 23:58] Guard #3467 begins shift\n', '[1518-07-22 00:03] falls asleep\n', '[1518-10-23 00:42] falls asleep\n', '[1518-10-04 00:03] Guard #619 begins shift\n', '[1518-11-17 00:45] falls asleep\n', '[1518-11-23 00:26] wakes up\n', '[1518-09-10 00:07] falls asleep\n', '[1518-08-12 00:04] Guard #1051 begins shift\n', '[1518-06-15 00:43] wakes up\n', '[1518-11-05 00:07] falls asleep\n', '[1518-07-07 00:53] wakes up\n', '[1518-04-07 23:58] Guard #2657 begins shift\n', '[1518-04-27 00:53] falls asleep\n', '[1518-10-21 00:52] wakes up\n', '[1518-11-11 00:18] wakes up\n', '[1518-10-22 00:26] falls asleep\n', '[1518-07-24 23:47] Guard #3319 begins shift\n']
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 43, in <module>
    tid = 60*(int(vakna.split(":")[0])-int(somna.split(":")[0])) + int(vakna.split(":")[1])-int(somna.split(":")[1])
NameError: name 'somna' is not defined
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
499 23
499 12
1783 47
2657 12
751 27
619 30
1783 42
2273 19
2273 2
3167 17
3167 10
179 27
179 17
179 7
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 57, in <module>
    print(g, sov)
KeyboardInterrupt
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
499 23
499 12
1783 47
2657 12
751 27
619 30
1783 42
2273 19
2273 2
3167 17
3167 10
179 27
179 17
179 7
179 4
179 54
751 28
2273 9
2273 23
2273 3
643 18
3319 1
619 28
619 25
499 14
1051 10
1051 21
1783 5
2917 33
2273 14
2273 1
2273 1
2971 9
643 18
457 3
1783 4
1783 1
1783 19
457 9
2657 28
1811 9
751 28
751 4
457 4
2467 1
2467 18
2467 4
2467 2
179 4
2477 41
1783 5
251 2
251 24
2467 30
2467 10
1811 13
1811 2
1811 4
179 36
499 1
2917 27
2917 2
643 4
643 21
1783 16
3467 24
3467 21
3467 9
3467 3
3319 5
3319 16
3319 6
3319 9
1783 43
2917 23
251 5
2467 12
2917 2
2917 9
911 38
643 5
3167 45
179 19
179 2
2477 50
179 2
643 32
2477 16
1811 45
251 26
251 5
251 2
3167 46
3167 5
911 5
911 21
179 20
179 7
1783 35
1811 39
1811 3
457 21
457 7
3467 16
1783 15
499 13
2917 29
2273 13
2273 13
3319 26
643 34
2467 47
3319 31
3319 8
3167 30
3467 24
1051 31
1811 5
1811 12
2467 50
499 7
499 3
3467 35
3467 7
2657 3
1811 39
179 13
1051 20
1051 15
3467 25
3467 6
3467 1
643 14
643 1
3467 21
3467 4
1783 5
179 50
2477 35
2477 2
751 8
2467 11
2467 25
1051 5
1051 13
2273 29
2273 22
2273 4
2657 22
911 12
911 20
457 27
2467 12
2467 4
2467 2
2917 4
2917 15
619 8
643 34
3319 31
3319 17
179 7
179 25
1051 4
2477 4
2477 3
499 3
3167 1
3167 17
619 28
3167 19
457 17
2477 2
2971 3
251 26
499 5
2477 50
2477 2
911 1
251 6
457 2
2273 21
2273 1
1051 8
1051 6
3467 25
457 6
2273 41
2467 59
2477 35
2971 2
2971 27
2917 10
499 4
499 27
251 14
251 21
1783 17
1783 3
2467 9
179 1
619 13
1783 29
1783 11
3467 10
2273 5
2273 15
643 43
251 29
643 5
751 4
751 1
3319 3
3319 4
2917 1
619 17
499 21
3319 19
2273 2
619 48
2273 13
2273 12
2273 18
2273 17
1783 38
3319 27
3467 44
643 27
911 21
3319 3
3319 30
2657 22
2657 17
619 27
2273 5
2273 4
499 5
499 13
3167 11
3167 2
3467 8
3467 26
3467 7
643 26
643 13
179 27
2467 39
2467 1
1051 29
1783 21
179 27
179 18
911 38
911 8
251 13
251 13
2971 7
2971 9
643 18
619 1
751 4
643 1
643 2
643 4
2657 24
2971 15
2971 18
1051 27
1051 25
1051 6
3167 6
1811 30
2467 51
751 22
751 2
1811 31
751 10
1783 12
3167 38
751 1
751 9
251 8
251 5
2971 7
179 28
2657 30
911 15
1783 4
1783 12
1051 49
2477 20
2477 7
2657 4
179 5
457 32
2477 9
2477 1
1811 5
1811 38
1783 5
2657 35
2467 9
2467 17
2467 1
3467 21
3467 19
179 23
179 2
619 16
619 2
619 19
619 2
499 13
499 7
499 4
499 30
179 2
911 16
3319 12
3467 36
911 12
911 1
1783 5
1783 3
2971 2
2971 1
2971 19
3167 51
2273 12
2273 5
3319 35
251 23
[['499', 205], ['1783', 397], ['2657', 197], ['751', 148], ['619', 264], ['2273', 324], ['3167', 298], ['179', 427], ['643', 320], ['3319', 283], ['1051', 269], ['2917', 155], ['2971', 119], ['457', 128], ['1811', 275], ['2467', 414], ['2477', 277], ['251', 222], ['3467', 392], ['911', 208]]
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
['2971', 119]
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
['179', 427]
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
['179', 427]
3
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
[['499', 205], ['1783', 397], ['2657', 197], ['751', 148], ['619', 264], ['2273', 324], ['3167', 298], ['179', 427], ['643', 320], ['3319', 283], ['1051', 269], ['2917', 155], ['2971', 119], ['457', 128], ['1811', 275], ['2467', 414], ['2477', 277], ['251', 222], ['3467', 392], ['911', 208]]
['179', 427]
3
>>> 
=================== RESTART: /Users/luxia/Documents/aoc2018/aoc4a.py ==================
00:09
00:43
00:08
00:35
00:23
00:29
00:06
00:32
00:55
00:09
00:41
00:03
00:40
00:39
00:54
00:01
00:31
00:04
00:25
00:54
00:38
00:42
00:23
00:28
00:06
00:17Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc2018/aoc4a.py", line 41, in <module>
    print(somna)
KeyboardInterrupt
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
input 5 på 225 0
addition
notzero
notzero
notzero
notzero
notzero
zero
227 99999
zero
0 265
zero
3 99999
zero
0 274
notzero
addition
addition
notzero
zero
0 300
addition
addition
zero
0 314
lessthan
multiplication
notzero
addition
lessthan
multiplication
zero
0 344
lessthan
multiplication
zero
0 359
equal
multiplication
zero
0 374
lessthan
multiplication
notzero
addition
equal
multiplication
notzero
equal
multiplication
notzero
addition
equal
multiplication
notzero
addition
equal
multiplication
notzero
addition
lessthan
multiplication
zero
1 464
addition
lessthan
multiplication
notzero
addition
lessthan
multiplication
notzero
equal
multiplication
zero
0 509
equal
multiplication
notzero
addition
lessthan
multiplication
zero
0 539
equal
multiplication
zero
1 554
addition
lessthan
multiplication
zero
1 569
addition
equal
multiplication
notzero
lessthan
multiplication
zero
0 599
equal
multiplication
zero
0 614
lessthan
multiplication
notzero
addition
equal
multiplication
notzero
equal
multiplication
notzero
addition
lessthan
multiplication
zero
1 674
addition
output
9168267
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 104, in <module>
    runprog(5)
  File "/Users/luxia/Documents/aoc5b.py", line 32, in runprog
    b = listan[i+2]
IndexError: list index out of range
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
9168267
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 107, in <module>
    runprog(5)
  File "/Users/luxia/Documents/aoc5b.py", line 35, in runprog
    b = listan[i+2]
IndexError: list index out of range
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
output
9168267
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 107, in <module>
    runprog(5)
  File "/Users/luxia/Documents/aoc5b.py", line 35, in runprog
    b = listan[i+2]
IndexError: list index out of range
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
output
0
output
0
output
0
output
0
output
0
output
0
output
0
output
0
output
0
output
6745903
stop at 99
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
output
11
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 108, in <module>
    runprog(1, listan)
  File "/Users/luxia/Documents/aoc5b.py", line 36, in runprog
    c = listan[i+3]
IndexError: list index out of range
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
11
None
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
44
None
33
None
22
None
11
None
0
None
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
4
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 112, in <module>
    second = runprog([fas, second], listan)
  File "/Users/luxia/Documents/aoc5b.py", line 64, in runprog
    listan[cepa] = apa * bepa
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
4
4
3
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 113, in <module>
    second = runprog([fas, second], listan)
  File "/Users/luxia/Documents/aoc5b.py", line 64, in runprog
    listan[cepa] = apa * bepa
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
4
input 2
input 1
4
3
input 2
input 1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 114, in <module>
    second = runprog([fas, second], listan)
  File "/Users/luxia/Documents/aoc5b.py", line 64, in runprog
    listan[cepa] = apa * bepa
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
4
input 2
input 1
4
3
input 2
input 1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 114, in <module>
    second = runprog([fas, second], startlist)
  File "/Users/luxia/Documents/aoc5b.py", line 64, in runprog
    listan[cepa] = apa * bepa
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
fas: 4
input 2
input 1
4
fas: 3
input 2
input 1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 114, in <module>
    second = runprog([fas, second], startlist)
  File "/Users/luxia/Documents/aoc5b.py", line 64, in runprog
    listan[cepa] = apa * bepa
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
amplifier number: 1
fas: 4
input 2
input 1
4
amplifier number: 2
fas: 3
input 2
input 1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 116, in <module>
    second = runprog([fas, second], startlist)
  File "/Users/luxia/Documents/aoc5b.py", line 63, in runprog
    listan[cepa] = apa * bepa
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
amplifier number: 1 fas: 4 input: 0
input 2
input 1
4
amplifier number: 2 fas: 3 input: None
input 2
input 1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 115, in <module>
    second = runprog([fas, second], startlist)
  File "/Users/luxia/Documents/aoc5b.py", line 63, in runprog
    listan[cepa] = apa * bepa
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
amplifier number: 1 fas: 4 input: 0
input 2
input 1
4
output from amplifier 1 was None
amplifier number: 2 fas: 3 input: None
input 2
input 1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 115, in <module>
    second = runprog([fas, second], startlist)
  File "/Users/luxia/Documents/aoc5b.py", line 63, in runprog
    listan[cepa] = apa * bepa
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
amplifier number: 1 fas: 4 input: 0
input 4
input 0
4
output from amplifier 1 was None
amplifier number: 2 fas: 3 input: None
input 3
input None
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 115, in <module>
    second = runprog([fas, second], startlist)
  File "/Users/luxia/Documents/aoc5b.py", line 63, in runprog
    listan[cepa] = apa * bepa
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
amplifier number: 1 fas: 4 input: 0
[4, 0]
input 4
input 0
4
output from amplifier 1 was None
amplifier number: 2 fas: 3 input: None
[3, None]
input 3
input None
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 106, in <module>
    second = runprog([fas, second], startlist)
  File "/Users/luxia/Documents/aoc5b.py", line 62, in runprog
    listan[cepa] = apa * bepa
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
amplifier number: 1 fas: 4 input: 0
[4, 0]
input 4
input 0
output from amplifier 1 was 4
amplifier number: 2 fas: 3 input: 4
[3, 4]
input 3
input 4
output from amplifier 2 was 43
amplifier number: 3 fas: 2 input: 43
[2, 43]
input 2
input 43
output from amplifier 3 was 432
amplifier number: 4 fas: 1 input: 432
[1, 432]
input 1
input 432
output from amplifier 4 was 4321
amplifier number: 5 fas: 0 input: 4321
[0, 4321]
input 0
input 4321
output from amplifier 5 was 43210
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
amplifier number: 1 fas: 0 input: 0
[0, 0]
input 0
input 0
output from amplifier 1 was 5
amplifier number: 2 fas: 1 input: 5
[1, 5]
input 1
input 5
output from amplifier 2 was 54
amplifier number: 3 fas: 2 input: 54
[2, 54]
input 2
input 54
output from amplifier 3 was 543
amplifier number: 4 fas: 3 input: 543
[3, 543]
input 3
input 543
output from amplifier 4 was 5432
amplifier number: 5 fas: 4 input: 5432
[4, 5432]
input 4
input 5432
output from amplifier 5 was 54321
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
amplifier number: 1 fas: 1 input: 0
[1, 0]
input 1
input 0
output from amplifier 1 was 6
amplifier number: 2 fas: 0 input: 6
[0, 6]
input 0
input 6
output from amplifier 2 was 65
amplifier number: 3 fas: 4 input: 65
[4, 65]
input 4
input 65
output from amplifier 3 was 652
amplifier number: 4 fas: 3 input: 652
[3, 652]
input 3
input 652
output from amplifier 4 was 6521
amplifier number: 5 fas: 2 input: 6521
[2, 6521]
input 2
input 6521
output from amplifier 5 was 65210
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
[1, 0]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 106, in <module>
    second = runprog([fas, second], startlist)
  File "/Users/luxia/Documents/aoc5b.py", line 45, in runprog
    apa = listan[a]
IndexError: list index out of range
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
[0, 0]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 113, in <module>
    second = runprog([fas, second], startlist)
  File "/Users/luxia/Documents/aoc5b.py", line 45, in runprog
    apa = listan[a]
IndexError: list index out of range
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
[0, 0]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 113, in <module>
    second = runprog([fas, second], startlist)
  File "/Users/luxia/Documents/aoc5b.py", line 45, in runprog
    apa = listan[a]
IndexError: list index out of range
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[0, 555]
output from amplifier 4 was 5555
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[0, 555]
output from amplifier 4 was 5555
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[0, 555]
output from amplifier 4 was 5555
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[0, 555]
output from amplifier 4 was 5555
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[0, 555]
output from amplifier 4 was 5555
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[1, 555]
output from amplifier 4 was 5556
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[1, 555]
output from amplifier 4 was 5556
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[1, 555]
output from amplifier 4 was 5556
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[1, 555]
output from amplifier 4 was 5556
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[1, 555]
output from amplifier 4 was 5556
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[2, 555]
output from amplifier 4 was 5550
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[2, 555]
output from amplifier 4 was 5550
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[2, 555]
output from amplifier 4 was 5550
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[2, 555]
output from amplifier 4 was 5550
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[2, 555]
output from amplifier 4 was 5550
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[3, 555]
output from amplifier 4 was 5551
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[3, 555]
output from amplifier 4 was 5551
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[3, 555]
output from amplifier 4 was 5551
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[3, 555]
output from amplifier 4 was 5551
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[3, 555]
output from amplifier 4 was 5551
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[4, 555]
output from amplifier 4 was 5552
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[4, 555]
output from amplifier 4 was 5552
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[4, 555]
output from amplifier 4 was 5552
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[4, 555]
output from amplifier 4 was 5552
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[4, 555]
output from amplifier 4 was 5552
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[0, 556]
output from amplifier 4 was 5565
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[0, 556]
output from amplifier 4 was 5565
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[0, 556]
output from amplifier 4 was 5565
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[0, 556]
output from amplifier 4 was 5565
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[0, 556]
output from amplifier 4 was 5565
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[1, 556]
output from amplifier 4 was 5566
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[1, 556]
output from amplifier 4 was 5566
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[1, 556]
output from amplifier 4 was 5566
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[1, 556]
output from amplifier 4 was 5566
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[1, 556]
output from amplifier 4 was 5566
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[2, 556]
output from amplifier 4 was 5560
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[2, 556]
output from amplifier 4 was 5560
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[2, 556]
output from amplifier 4 was 5560
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[2, 556]
output from amplifier 4 was 5560
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[2, 556]
output from amplifier 4 was 5560
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[3, 556]
output from amplifier 4 was 5561
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[3, 556]
output from amplifier 4 was 5561
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[3, 556]
output from amplifier 4 was 5561
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[3, 556]
output from amplifier 4 was 5561
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[3, 556]
output from amplifier 4 was 5561
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[4, 556]
output from amplifier 4 was 5562
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[4, 556]
output from amplifier 4 was 5562
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[4, 556]
output from amplifier 4 was 5562
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[4, 556]
output from amplifier 4 was 5562
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[1, 55]
output from amplifier 3 was 556
[4, 556]
output from amplifier 4 was 5562
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[0, 550]
output from amplifier 4 was 5505
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[0, 550]
output from amplifier 4 was 5505
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[0, 550]
output from amplifier 4 was 5505
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[0, 550]
output from amplifier 4 was 5505
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[0, 550]
output from amplifier 4 was 5505
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[1, 550]
output from amplifier 4 was 5506
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[1, 550]
output from amplifier 4 was 5506
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[1, 550]
output from amplifier 4 was 5506
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[1, 550]
output from amplifier 4 was 5506
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[1, 550]
output from amplifier 4 was 5506
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[2, 550]
output from amplifier 4 was 5500
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[2, 550]
output from amplifier 4 was 5500
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[2, 550]
output from amplifier 4 was 5500
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[2, 550]
output from amplifier 4 was 5500
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[2, 550]
output from amplifier 4 was 5500
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[3, 550]
output from amplifier 4 was 5501
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[3, 550]
output from amplifier 4 was 5501
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[3, 550]
output from amplifier 4 was 5501
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[3, 550]
output from amplifier 4 was 5501
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[3, 550]
output from amplifier 4 was 5501
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[4, 550]
output from amplifier 4 was 5502
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[4, 550]
output from amplifier 4 was 5502
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[4, 550]
output from amplifier 4 was 5502
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[4, 550]
output from amplifier 4 was 5502
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[2, 55]
output from amplifier 3 was 550
[4, 550]
output from amplifier 4 was 5502
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[0, 551]
output from amplifier 4 was 5515
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[0, 551]
output from amplifier 4 was 5515
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[0, 551]
output from amplifier 4 was 5515
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[0, 551]
output from amplifier 4 was 5515
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[0, 551]
output from amplifier 4 was 5515
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[1, 551]
output from amplifier 4 was 5516
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[1, 551]
output from amplifier 4 was 5516
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[1, 551]
output from amplifier 4 was 5516
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[1, 551]
output from amplifier 4 was 5516
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[1, 551]
output from amplifier 4 was 5516
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[2, 551]
output from amplifier 4 was 5510
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[2, 551]
output from amplifier 4 was 5510
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[2, 551]
output from amplifier 4 was 5510
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[2, 551]
output from amplifier 4 was 5510
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[2, 551]
output from amplifier 4 was 5510
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[3, 551]
output from amplifier 4 was 5511
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[3, 551]
output from amplifier 4 was 5511
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[3, 551]
output from amplifier 4 was 5511
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[3, 551]
output from amplifier 4 was 5511
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[3, 551]
output from amplifier 4 was 5511
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[4, 551]
output from amplifier 4 was 5512
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[4, 551]
output from amplifier 4 was 5512
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[4, 551]
output from amplifier 4 was 5512
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[4, 551]
output from amplifier 4 was 5512
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[3, 55]
output from amplifier 3 was 551
[4, 551]
output from amplifier 4 was 5512
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[0, 552]
output from amplifier 4 was 5525
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[0, 552]
output from amplifier 4 was 5525
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[0, 552]
output from amplifier 4 was 5525
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[0, 552]
output from amplifier 4 was 5525
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[0, 552]
output from amplifier 4 was 5525
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[1, 552]
output from amplifier 4 was 5526
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[1, 552]
output from amplifier 4 was 5526
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[1, 552]
output from amplifier 4 was 5526
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[1, 552]
output from amplifier 4 was 5526
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[1, 552]
output from amplifier 4 was 5526
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[2, 552]
output from amplifier 4 was 5520
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[2, 552]
output from amplifier 4 was 5520
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[2, 552]
output from amplifier 4 was 5520
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[2, 552]
output from amplifier 4 was 5520
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[2, 552]
output from amplifier 4 was 5520
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[3, 552]
output from amplifier 4 was 5521
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[3, 552]
output from amplifier 4 was 5521
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[3, 552]
output from amplifier 4 was 5521
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[3, 552]
output from amplifier 4 was 5521
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[3, 552]
output from amplifier 4 was 5521
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[4, 552]
output from amplifier 4 was 5522
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[4, 552]
output from amplifier 4 was 5522
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[4, 552]
output from amplifier 4 was 5522
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[4, 552]
output from amplifier 4 was 5522
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[4, 55]
output from amplifier 3 was 552
[4, 552]
output from amplifier 4 was 5522
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[0, 565]
output from amplifier 4 was 5655
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[0, 565]
output from amplifier 4 was 5655
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[0, 565]
output from amplifier 4 was 5655
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[0, 565]
output from amplifier 4 was 5655
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[0, 565]
output from amplifier 4 was 5655
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[1, 565]
output from amplifier 4 was 5656
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[1, 565]
output from amplifier 4 was 5656
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[1, 565]
output from amplifier 4 was 5656
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[1, 565]
output from amplifier 4 was 5656
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[1, 565]
output from amplifier 4 was 5656
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[2, 565]
output from amplifier 4 was 5650
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[2, 565]
output from amplifier 4 was 5650
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[2, 565]
output from amplifier 4 was 5650
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[2, 565]
output from amplifier 4 was 5650
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[2, 565]
output from amplifier 4 was 5650
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[3, 565]
output from amplifier 4 was 5651
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[3, 565]
output from amplifier 4 was 5651
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[3, 565]
output from amplifier 4 was 5651
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[3, 565]
output from amplifier 4 was 5651
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[3, 565]
output from amplifier 4 was 5651
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[4, 565]
output from amplifier 4 was 5652
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[4, 565]
output from amplifier 4 was 5652
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[4, 565]
output from amplifier 4 was 5652
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[4, 565]
output from amplifier 4 was 5652
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[0, 56]
output from amplifier 3 was 565
[4, 565]
output from amplifier 4 was 5652
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[0, 566]
output from amplifier 4 was 5665
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[0, 566]
output from amplifier 4 was 5665
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[0, 566]
output from amplifier 4 was 5665
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[0, 566]
output from amplifier 4 was 5665
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[0, 566]
output from amplifier 4 was 5665
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[1, 566]
output from amplifier 4 was 5666
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[1, 566]
output from amplifier 4 was 5666
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[1, 566]
output from amplifier 4 was 5666
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[1, 566]
output from amplifier 4 was 5666
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[1, 566]
output from amplifier 4 was 5666
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[2, 566]
output from amplifier 4 was 5660
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[2, 566]
output from amplifier 4 was 5660
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[2, 566]
output from amplifier 4 was 5660
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[2, 566]
output from amplifier 4 was 5660
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[2, 566]
output from amplifier 4 was 5660
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[3, 566]
output from amplifier 4 was 5661
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[3, 566]
output from amplifier 4 was 5661
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[3, 566]
output from amplifier 4 was 5661
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[3, 566]
output from amplifier 4 was 5661
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[3, 566]
output from amplifier 4 was 5661
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[4, 566]
output from amplifier 4 was 5662
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[4, 566]
output from amplifier 4 was 5662
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[4, 566]
output from amplifier 4 was 5662
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[4, 566]
output from amplifier 4 was 5662
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[1, 56]
output from amplifier 3 was 566
[4, 566]
output from amplifier 4 was 5662
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[0, 560]
output from amplifier 4 was 5605
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[0, 560]
output from amplifier 4 was 5605
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[0, 560]
output from amplifier 4 was 5605
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[0, 560]
output from amplifier 4 was 5605
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[0, 560]
output from amplifier 4 was 5605
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[1, 560]
output from amplifier 4 was 5606
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[1, 560]
output from amplifier 4 was 5606
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[1, 560]
output from amplifier 4 was 5606
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[1, 560]
output from amplifier 4 was 5606
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[1, 560]
output from amplifier 4 was 5606
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[2, 560]
output from amplifier 4 was 5600
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[2, 560]
output from amplifier 4 was 5600
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[2, 560]
output from amplifier 4 was 5600
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[2, 560]
output from amplifier 4 was 5600
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[2, 560]
output from amplifier 4 was 5600
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[3, 560]
output from amplifier 4 was 5601
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[3, 560]
output from amplifier 4 was 5601
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[3, 560]
output from amplifier 4 was 5601
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[3, 560]
output from amplifier 4 was 5601
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[3, 560]
output from amplifier 4 was 5601
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[4, 560]
output from amplifier 4 was 5602
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[4, 560]
output from amplifier 4 was 5602
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[4, 560]
output from amplifier 4 was 5602
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[4, 560]
output from amplifier 4 was 5602
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[2, 56]
output from amplifier 3 was 560
[4, 560]
output from amplifier 4 was 5602
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[3, 56]
output from amplifier 3 was 561
[0, 561]
output from amplifier 4 was 5615
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[3, 56]
output from amplifier 3 was 561
[0, 561]
output from amplifier 4 was 5615
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[3, 56]
output from amplifier 3 was 561
[0, 561]
output from amplifier 4 was 5615
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[3, 56]
output from amplifier 3 was 561
[0, 561]
output from amplifier 4 was 5615
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[3, 56]
output from amplifier 3 was 561
[0, 561]
output from amplifier 4 was 5615
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[3, 56]
output from amplifier 3 was 561
[1, 561]
output from amplifier 4 was 5616
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[3, 56]
output from amplifier 3 was 561
[1, 561]
output from amplifier 4 was 5616
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[3, 56]
output from amplifier 3 was 561
[1, 561]
output from amplifier 4 was 5616
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[3, 56]
output from amplifier 3 was 561
[1, 561]
output from amplifier 4 was 5616
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[3, 56]
output from amplifier 3 was 561
[1, 561]
output from amplifier 4 was 5616
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[3, 56]
output from amplifier 3 was 561
[2, 561]
output from amplifier 4 was 5610
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[3, 56]
output from amplifier 3 was 561
[2, 561]
output from amplifier 4 was 5610
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[3, 56]
output from amplifier 3 was 561
[2, 561]
output from amplifier 4 was 5610
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[3, 56]
output from amplifier 3 was 561
[2, 561]
output from amplifier 4 was 5610
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[3, 56]
output from amplifier 3 was 561
[2, 561]
output from amplifier 4 was 5610
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[3, 56]
output from amplifier 3 was 561
[3, 561]
output from amplifier 4 was 5611
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[3, 56]
output from amplifier 3 was 561
[3, 561]
output from amplifier 4 was 5611
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[3, 56]
output from amplifier 3 was 561
[3, 561]
output from amplifier 4 was 5611
[0, 0]
output from amplifier 1 was 5
[1, 5]
output from amplifier 2 was 56
[3, 56]
output from amplifier 3 was
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
[0, 0]
output from amplifier 1 was 5
resultat: 5
[0, 5]
output from amplifier 2 was 55
resultat: 55
[0, 55]
output from amplifier 3 was 555
resultat: 555
[0, 555]
output from amplifier 4 was 5555
resultat: 5555
[0, 5555]
output from amplifier 5 was 55555
resultat: 55555
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[0, 555]
output from amplifier 4 was 5555
[1, 5555]
output from amplifier 5 was 55556
resultat: 55556
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[0, 555]
output from amplifier 4 was 5555
[2, 5555]
output from amplifier 5 was 55550
resultat: 55550
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[0, 555]
output from amplifier 4 was 5555
[3, 5555]
output from amplifier 5 was 55551
resultat: 55551
[0, 0]
output from amplifier 1 was 5
[0, 5]
output from amplifier 2 was 55
[0, 55]
output from amplifier 3 was 555
[0, 555]
output from amplifier 4 was 5555
[4, 5555]
output from amplifier 5 was 55552
resultat: 55552
[0, 0]
output from amplifier 1 was 5
resultat: 5
[0, 5]
output from amplifier 2 was 55
resultat: 55
[0, 55]
output from amplifier 3 was 555
resultat: Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 117, in <module>
    print("resultat:", second)
KeyboardInterrupt
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[0, 55]
resultat: 555
[0, 555]
resultat: 5555
[0, 5555]
resultat: 55555
[0, 0]
[0, 5]
[0, 55]
[0, 555]
[1, 5555]
resultat: 55556
[0, 0]
[0, 5]
[0, 55]
[0, 555]
[2, 5555]
resultat: 55550
[0, 0]
[0, 5]
[0, 55]
[0, 555]
[3, 5555]
resultat: 55551
[0, 0]
[0, 5]
[0, 55]
[0, 555]
[4, 5555]
resultat: 55552
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[0, 55]
resultat: 555
[1, 555]
[0, 5556]
resultat: 55565
[0, 0]
[0, 5]
[0, 55]
[1, 555]
resultat: 5556
[1, 5556]
resultat: 55566
[0, 0]
[0, 5]
[0, 55]
[1, 555]
[2, 5556]
resultat: 55560
[0, 0]
[0, 5]
[0, 55]
[1, 555]
[3, 5556]
resultat: 55561
[0, 0]
[0, 5]
[0, 55]
[1, 555]
[4, 5556]
resultat: 55562
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[0, 55]
resultat: 555
[2, 555]
[0, 5550]
resultat: 55505
[0, 0]
[0, 5]
[0, 55]
[2, 555]
[1, 5550]
resultat: 55506
[0, 0]
[0, 5]
[0, 55]
[2, 555]
resultat: 5550
[2, 5550]
resultat: 55500
[0, 0]
[0, 5]
[0, 55]
[2, 555]
[3, 5550]
resultat: 55501
[0, 0]
[0, 5]
[0, 55]
[2, 555]
[4, 5550]
resultat: 55502
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[0, 55]
resultat: 555
[3, 555]
[0, 5551]
resultat: 55515
[0, 0]
[0, 5]
[0, 55]
[3, 555]
[1, 5551]
resultat: 55516
[0, 0]
[0, 5]
[0, 55]
[3, 555]
[2, 5551]
resultat: 55510
[0, 0]
[0, 5]
[0, 55]
[3, 555]
resultat: 5551
[3, 5551]
resultat: 55511
[0, 0]
[0, 5]
[0, 55]
[3, 555]
[4, 5551]
resultat: 55512
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[0, 55]
resultat: 555
[4, 555]
[0, 5552]
resultat: 55525
[0, 0]
[0, 5]
[0, 55]
[4, 555]
[1, 5552]
resultat: 55526
[0, 0]
[0, 5]
[0, 55]
[4, 555]
[2, 5552]
resultat: 55520
[0, 0]
[0, 5]
[0, 55]
[4, 555]
[3, 5552]
resultat: 55521
[0, 0]
[0, 5]
[0, 55]
[4, 555]
resultat: 5552
[4, 5552]
resultat: 55522
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[1, 55]
[0, 556]
resultat: 5565
[0, 5565]
resultat: 55655
[0, 0]
[0, 5]
[1, 55]
resultat: 556
[0, 556]
[1, 5565]
resultat: 55656
[0, 0]
[0, 5]
[1, 55]
[0, 556]
[2, 5565]
resultat: 55650
[0, 0]
[0, 5]
[1, 55]
[0, 556]
[3, 5565]
resultat: 55651
[0, 0]
[0, 5]
[1, 55]
[0, 556]
[4, 5565]
resultat: 55652
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[1, 55]
[1, 556]
[0, 5566]
resultat: 55665
[0, 0]
[0, 5]
[1, 55]
resultat: 556
[1, 556]
resultat: 5566
[1, 5566]
resultat: 55666
[0, 0]
[0, 5]
[1, 55]
[1, 556]
[2, 5566]
resultat: 55660
[0, 0]
[0, 5]
[1, 55]
[1, 556]
[3, 5566]
resultat: 55661
[0, 0]
[0, 5]
[1, 55]
[1, 556]
[4, 5566]
resultat: 55662
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[1, 55]
[2, 556]
[0, 5560]
resultat: 55605
[0, 0]
[0, 5]
[1, 55]
resultat: 556
[2, 556]
[1, 5560]
resultat: 55606
[0, 0]
[0, 5]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 114, in <module>
    second = runprog([fas, second], startlist)
  File "/Users/luxia/Documents/aoc5b.py", line 20, in runprog
    print(inputs)
KeyboardInterrupt
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[0, 55]
resultat: 555
[0, 555]
resultat: 5555
[0, 5555]
resultat: 55555
[0, 0]
[0, 5]
[0, 55]
[0, 555]
[1, 5555]
resultat: 55556
[0, 0]
[0, 5]
[0, 55]
[0, 555]
[2, 5555]
resultat: 55550
[0, 0]
[0, 5]
[0, 55]
[0, 555]
[3, 5555]
resultat: 55551
[0, 0]
[0, 5]
[0, 55]
[0, 555]
[4, 5555]
resultat: 55552
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[0, 55]
resultat: 555
[1, 555]
[0, 5556]
resultat: 55565
[0, 0]
[0, 5]
[0, 55]
[1, 555]
resultat: 5556
[1, 5556]
resultat: 55566
[0, 0]
[0, 5]
[0, 55]
[1, 555]
[2, 5556]
resultat: 55560
[0, 0]
[0, 5]
[0, 55]
[1, 555]
[3, 5556]
resultat: 55561
[0, 0]
[0, 5]
[0, 55]
[1, 555]
[4, 5556]
resultat: 55562
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[0, 55]
resultat: 555
[2, 555]
[0, 5550]
resultat: 55505
[0, 0]
[0, 5]
[0, 55]
[2, 555]
[1, 5550]
resultat: 55506
[0, 0]
[0, 5]
[0, 55]
[2, 555]
resultat: 5550
[2, 5550]
resultat: 55500
[0, 0]
[0, 5]
[0, 55]
[2, 555]
[3, 5550]
resultat: 55501
[0, 0]
[0, 5]
[0, 55]
[2, 555]
[4, 5550]
resultat: 55502
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[0, 55]
resultat: 555
[3, 555]
[0, 5551]
resultat: 55515
[0, 0]
[0, 5]
[0, 55]
[3, 555]
[1, 5551]
resultat: 55516
[0, 0]
[0, 5]
[0, 55]
[3, 555]
[2, 5551]
resultat: 55510
[0, 0]
[0, 5]
[0, 55]
[3, 555]
resultat: 5551
[3, 5551]
resultat: 55511
[0, 0]
[0, 5]
[0, 55]
[3, 555]
[4, 5551]
resultat: 55512
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[0, 55]
resultat: 555
[4, 555]
[0, 5552]
resultat: 55525
[0, 0]
[0, 5]
[0, 55]
[4, 555]
[1, 5552]
resultat: 55526
[0, 0]
[0, 5]
[0, 55]
[4, 555]
[2, 5552]
resultat: 55520
[0, 0]
[0, 5]
[0, 55]
[4, 555]
[3, 5552]
resultat: 55521
[0, 0]
[0, 5]
[0, 55]
[4, 555]
resultat: 5552
[4, 5552]
resultat: 55522
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[1, 55]
[0, 556]
resultat: 5565
[0, 5565]
resultat: 55655
[0, 0]
[0, 5]
[1, 55]
resultat: 556
[0, 556]
[1, 5565]
resultat: 55656
[0, 0]
[0, 5]
[1, 55]
[0, 556]
[2, 5565]
resultat: 55650
[0, 0]
[0, 5]
[1, 55]
[0, 556]
[3, 5565]
resultat: 55651
[0, 0]
[0, 5]
[1, 55]
[0, 556]
[4, 5565]
resultat: 55652
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[1, 55]
[1, 556]
[0, 5566]
resultat: 55665
[0, 0]
[0, 5]
[1, 55]
resultat: 556
[1, 556]
resultat: 5566
[1, 5566]
resultat: 55666
[0, 0]
[0, 5]
[1, 55]
[1, 556]
[2, 5566]
resultat: 55660
[0, 0]
[0, 5]
[1, 55]
[1, 556]
[3, 5566]
resultat: 55661
[0, 0]
[0, 5]
[1, 55]
[1, 556]
[4, 5566]
resultat: 55662
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[1, 55]
[2, 556]
[0, 5560]
resultat: 55605
[0, 0]
[0, 5]
[1, 55]
resultat: 556
[2, 556]
[1, 5560]
resultat: 55606
[0, 0]
[0, 5]
[1, 55]
[2, 556]
resultat: 5560
[2, 5560]
resultat: 55600
[0, 0]
[0, 5]
[1, 55]
[2, 556]
[3, 5560]
resultat: 55601
[0, 0]
[0, 5]
[1, 55]
[2, 556]
[4, 5560]
resultat: 55602
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[1, 55]
[3, 556]
[0, 5561]
resultat: 55615
[0, 0]
[0, 5]
[1, 55]
resultat: 556
[3, 556]
[1, 5561]
resultat: 55616
[0, 0]
[0, 5]
[1, 55]
[3, 556]
[2, 5561]
resultat: 55610
[0, 0]
[0, 5]
[1, 55]
[3, 556]
resultat: 5561
[3, 5561]
resultat: 55611
[0, 0]
[0, 5]
[1, 55]
[3, 556]
[4, 5561]
resultat: 55612
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[1, 55]
[4, 556]
[0, 5562]
resultat: 55625
[0, 0]
[0, 5]
[1, 55]
resultat: 556
[4, 556]
[1, 5562]
resultat: 55626
[0, 0]
[0, 5]
[1, 55]
[4, 556]
[2, 5562]
resultat: 55620
[0, 0]
[0, 5]
[1, 55]
[4, 556]
[3, 5562]
resultat: 55621
[0, 0]
[0, 5]
[1, 55]
[4, 556]
resultat: 5562
[4, 5562]
resultat: 55622
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[2, 55]
[0, 550]
resultat: 5505
[0, 5505]
resultat: 55055
[0, 0]
[0, 5]
[2, 55]
[0, 550]
[1, 5505]
resultat: 55056
[0, 0]
[0, 5]
[2, 55]
resultat: 550
[0, 550]
[2, 5505]
resultat: 55050
[0, 0]
[0, 5]
[2, 55]
[0, 550]
[3, 5505]
resultat: 55051
[0, 0]
[0, 5]
[2, 55]
[0, 550]
[4, 5505]
resultat: 55052
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[2, 55]
[1, 550]
[0, 5506]
resultat: 55065
[0, 0]
[0, 5]
[2, 55]
[1, 550]
resultat: 5506
[1, 5506]
resultat: 55066
[0, 0]
[0, 5]
[2, 55]
resultat: 550
[1, 550]
[2, 5506]
resultat: 55060
[0, 0]
[0, 5]
[2, 55]
[1, 550]
[3, 5506]
resultat: 55061
[0, 0]
[0, 5]
[2, 55]
[1, 550]
[4, 5506]
resultat: 55062
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[2, 55]
[2, 550]
[0, 5500]
resultat: 55005
[0, 0]
[0, 5]
[2, 55]
[2, 550]
[1, 5500]
resultat: 55006
[0, 0]
[0, 5]
[2, 55]
resultat: 550
[2, 550]
resultat: 5500
[2, 5500]
resultat: 55000
[0, 0]
[0, 5]
[2, 55]
[2, 550]
[3, 5500]
resultat: 55001
[0, 0]
[0, 5]
[2, 55]
[2, 550]
[4, 5500]
resultat: 55002
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[2, 55]
[3, 550]
[0, 5501]
resultat: 55015
[0, 0]
[0, 5]
[2, 55]
[3, 550]
[1, 5501]
resultat: 55016
[0, 0]
[0, 5]
[2, 55]
resultat: 550
[3, 550]
[2, 5501]
resultat: 55010
[0, 0]
[0, 5]
[2, 55]
[3, 550]
resultat: 5501
[3, 5501]
resultat: 55011
[0, 0]
[0, 5]
[2, 55]
[3, 550]
[4, 5501]
resultat: 55012
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[2, 55]
[4, 550]
[0, 5502]
resultat: 55025
[0, 0]
[0, 5]
[2, 55]
[4, 550]
[1, 5502]
resultat: 55026
[0, 0]
[0, 5]
[2, 55]
resultat: 550
[4, 550]
[2, 5502]
resultat: 55020
[0, 0]
[0, 5]
[2, 55]
[4, 550]
[3, 5502]
resultat: 55021
[0, 0]
[0, 5]
[2, 55]
[4, 550]
resultat: 5502
[4, 5502]
resultat: 55022
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[3, 55]
[0, 551]
resultat: 5515
[0, 5515]
resultat: 55155
[0, 0]
[0, 5]
[3, 55]
[0, 551]
[1, 5515]
resultat: 55156
[0, 0]
[0, 5]
[3, 55]
[0, 551]
[2, 5515]
resultat: 55150
[0, 0]
[0, 5]
[3, 55]
resultat: 551
[0, 551]
[3, 5515]
resultat: 55151
[0, 0]
[0, 5]
[3, 55]
[0, 551]
[4, 5515]
resultat: 55152
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[3, 55]
[1, 551]
[0, 5516]
resultat: 55165
[0, 0]
[0, 5]
[3, 55]
[1, 551]
resultat: 5516
[1, 5516]
resultat: 55166
[0, 0]
[0, 5]
[3, 55]
[1, 551]
[2, 5516]
resultat: 55160
[0, 0]
[0, 5]
[3, 55]
resultat: 551
[1, 551]
[3, 5516]
resultat: 55161
[0, 0]
[0, 5]
[3, 55]
[1, 551]
[4, 5516]
resultat: 55162
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[3, 55]
[2, 551]
[0, 5510]
resultat: 55105
[0, 0]
[0, 5]
[3, 55]
[2, 551]
[1, 5510]
resultat: 55106
[0, 0]
[0, 5]
[3, 55]
[2, 551]
resultat: 5510
[2, 5510]
resultat: 55100
[0, 0]
[0, 5]
[3, 55]
resultat: 551
[2, 551]
[3, 5510]
resultat: 55101
[0, 0]
[0, 5]
[3, 55]
[2, 551]
[4, 5510]
resultat: 55102
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[3, 55]
[3, 551]
[0, 5511]
resultat: 55115
[0, 0]
[0, 5]
[3, 55]
[3, 551]
[1, 5511]
resultat: 55116
[0, 0]
[0, 5]
[3, 55]
[3, 551]
[2, 5511]
resultat: 55110
[0, 0]
[0, 5]
[3, 55]
resultat: 551
[3, 551]
resultat: 5511
[3, 5511]
resultat: 55111
[0, 0]
[0, 5]
[3, 55]
[3, 551]
[4, 5511]
resultat: 55112
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[3, 55]
[4, 551]
[0, 5512]
resultat: 55125
[0, 0]
[0, 5]
[3, 55]
[4, 551]
[1, 5512]
resultat: 55126
[0, 0]
[0, 5]
[3, 55]
[4, 551]
[2, 5512]
resultat: 55120
[0, 0]
[0, 5]
[3, 55]
resultat: 551
[4, 551]
[3, 5512]
resultat: 55121
[0, 0]
[0, 5]
[3, 55]
[4, 551]
resultat: 5512
[4, 5512]
resultat: 55122
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[4, 55]
[0, 552]
resultat: 5525
[0, 5525]
resultat: 55255
[0, 0]
[0, 5]
[4, 55]
[0, 552]
[1, 5525]
resultat: 55256
[0, 0]
[0, 5]
[4, 55]
[0, 552]
[2, 5525]
resultat: 55250
[0, 0]
[0, 5]
[4, 55]
[0, 552]
[3, 5525]
resultat: 55251
[0, 0]
[0, 5]
[4, 55]
resultat: 552
[0, 552]
[4, 5525]
resultat: 55252
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[4, 55]
[1, 552]
[0, 5526]
resultat: 55265
[0, 0]
[0, 5]
[4, 55]
[1, 552]
resultat: 5526
[1, 5526]
resultat: 55266
[0, 0]
[0, 5]
[4, 55]
[1, 552]
[2, 5526]
resultat: 55260
[0, 0]
[0, 5]
[4, 55]
[1, 552]
[3, 5526]
resultat: 55261
[0, 0]
[0, 5]
[4, 55]
resultat: 552
[1, 552]
[4, 5526]
resultat: 55262
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[4, 55]
[2, 552]
[0, 5520]
resultat: 55205
[0, 0]
[0, 5]
[4, 55]
[2, 552]
[1, 5520]
resultat: 55206
[0, 0]
[0, 5]
[4, 55]
[2, 552]
resultat: 5520
[2, 5520]
resultat: 55200
[0, 0]
[0, 5]
[4, 55]
[2, 552]
[3, 5520]
resultat: 55201
[0, 0]
[0, 5]
[4, 55]
resultat: 552
[2, 552]
[4, 5520]
resultat: 55202
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[4, 55]
[3, 552]
[0, 5521]
resultat: 55215
[0, 0]
[0, 5]
[4, 55]
[3, 552]
[1, 5521]
resultat: 55216
[0, 0]
[0, 5]
[4, 55]
[3, 552]
[2, 5521]
resultat: 55210
[0, 0]
[0, 5]
[4, 55]
[3, 552]
resultat: 5521
[3, 5521]
resultat: 55211
[0, 0]
[0, 5]
[4, 55]
resultat: 552
[3, 552]
[4, 5521]
resultat: 55212
[0, 0]
resultat: 5
[0, 5]
resultat: 55
[4, 55]
[4, 552]
[0, 5522]
resultat: 55225
[0, 0]
[0, 5]
[4, 55]
[4, 552]
[1, 5522]
resultat: 55226
[0, 0]
[0, 5]
[4, 55]
[4, 552]
[2, 5522]
resultat: 55220
[0, 0]
[0, 5]
[4, 55]
[4, 552]
[3, 5522]
resultat: 55221
[0, 0]
[0, 5]
[4, 55]
resultat: 552
[4, 552]
resultat: 5522
[4, 5522]
resultat: 55222
[0, 0]
resultat: 5
[1, 5]
[0, 56]
resultat: 565
[0, 565]
resultat: 5655
[0, 5655]
resultat: 56555
[0, 0]
[1, 5]
resultat: 56
[0, 56]
[0, 565]
[1, 5655]
resultat: 56556
[0, 0]
[1, 5]
[0, 56]
[0, 565]
[2, 5655]
resultat: 56550
[0, 0]
[1, 5]
[0, 56]
[0, 565]
[3, 5655]
resultat: 56551
[0, 0]
[1, 5]
[0, 56]
[0, 565]
[4, 5655]
resultat: 56552
[0, 0]
resultat: 5
[1, 5]
[0, 56]
resultat: 565
[1, 565]
[0, 5656]
resultat: 56565
[0, 0]
[1, 5]
resultat: 56
[0, 56]
[1, 565]
resultat: 5656
[1, 5656]
resultat: 56566
[0, 0]
[1, 5]
[0, 56]
[1, 565]
[2, 5656]
resultat: 56560
[0, 0]
[1, 5]
[0, 56]
[1, 565]
[3, 5656]
resultat: 56561
[0, 0]
[1, 5]
[0, 56]
[1, 565]
[4, 5656]
resultat: 56562
[0, 0]
resultat: 5
[1, 5]
[0, 56]
resultat: 565
[2, 565]
[0, 5650]
resultat: 56505
[0, 0]
[1, 5]
resultat: 56
[0, 56]
[2, 565]
[1, 5650]
resultat: 56506
[0, 0]
[1, 5]
[0, 56]
[2, 565]
resultat: 5650
[2, 5650]
resultat: 56500
[0, 0]
[1, 5]
[0, 56]
[2, 565]
[3, 5650]
resultat: 56501
[0, 0]
[1, 5]
[0, 56]
[2, 565]
[4, 5650]
resultat: 56502
[0, 0]
resultat: 5
[1, 5]
[0, 56]
resultat: 565
[3, 565]
[0, 5651]
resultat: 56515
[0, 0]
[1, 5]
resultat: 56
[0, 56]
[3, 565]
[1, 5651]
resultat: 56516
[0, 0]
[1, 5]
[0, 56]
[3, 565]
[2, 5651]
resultat: 56510
[0, 0]
[1, 5]
[0, 56]
[3, 565]
resultat: 5651
[3, 5651]
resultat: 56511
[0, 0]
[1, 5]
[0, 56]
[3, 565]
[4, 5651]
resultat: 56512
[0, 0]
resultat: 5
[1, 5]
[0, 56]
resultat: 565
[4, 565]
[0, 5652]
resultat: 56525
[0, 0]
[1, 5]
resultat: 56
[0, 56]
[4, 565]
[1, 5652]
resultat: 56526
[0, 0]
[1, 5]
[0, 56]
[4, 565]
[2, 5652]
resultat: 56520
[0, 0]
[1, 5]
[0, 56]
[4, 565]
[3, 5652]
resultat: 56521
[0, 0]
[1, 5]
[0, 56]
[4, 565]
resultat: 5652
[4, 5652]
resultat: 56522
[0, 0]
resultat: 5
[1, 5]
[1, 56]
[0, 566]
resultat: 5665
[0, 5665]
resultat: 56655
[0, 0]
[1, 5]
resultat: 56
[1, 56]
resultat: 566
[0, 566]
[1, 5665]
resultat: 56656
[0, 0]
[1, 5]
[1, 56]
[0, 566]
[2, 5665]
resultat: 56650
[0, 0]
[1, 5]
[1, 56]
[0, 566]
[3, 5665]
resultat: 56651
[0, 0]
[1, 5]
[1, 56]
[0, 566]
[4, 5665]
resultat: 56652
[0, 0]
resultat: 5
[1, 5]
[1, 56]
[1, 566]
[0, 5666]
resultat: 56665
[0, 0]
[1, 5]
resultat: 56
[1, 56]
resultat: 566
[1, 566]
resultat: 5666
[1, 5666]
resultat: 56666
[0, 0]
[1, 5]
[1, 56]
[1, 566]
[2, 5666]
resultat: 56660
[0, 0]
[1, 5]
[1, 56]
[1, 566]
[3, 5666]
resultat: 56661
[0, 0]
[1, 5]
[1, 56]
[1, 566]
[4, 5666]
resultat: 56662
[0, 0]
resultat: 5
[1, 5]
[1, 56]
[2, 566]
[0, 5660]
resultat: 56605
[0, 0]
[1, 5]
resultat: 56
[1, 56]
resultat: 566
[2, 566]
[1, 5660]
resultat: 56606
[0, 0]
[1, 5]
[1, 56]
[2, 566]
resultat: 5660
[2, 5660]
resultat: 56600
[0, 0]
[1, 5]
[1, 56]
[2, 566]
[3, 5660]
resultat: 56601
[0, 0]
[1, 5]
[1, 56]
[2, 566]
[4, 5660]
resultat: 56602
[0, 0]
resultat: 5
[1, 5]
[1, 56]
[3, 566]
[0, 5661]
resultat: 56615
[0, 0]
[1, 5]
resultat: 56
[1, 56]
resultat: 566
[3, 566]
[1, 5661]
resultat: 56616
[0, 0]
[1, 5]
[1, 56]
[3, 566]
[2, 5661]
resultat: 56610
[0, 0]
[1, 5]
[1, 56]
[3, 566]
resultat: 5661
[3, 5661]
resultat: 56611
[0, 0]
[1, 5]
[1, 56]
[3, 566]
[4, 5661]
resultat: 56612
[0, 0]
resultat: 5
[1, 5]
[1, 56]
[4, 566]
[0, 5662]
resultat: 56625
[0, 0]
[1, 5]
resultat: 56
[1, 56]
resultat: 566
[4, 566]
[1, 5662]
resultat: 56626
[0, 0]
[1, 5]
[1, 56]
[4, 566]
[2, 5662]
resultat: 56620
[0, 0]
[1, 5]
[1, 56]
[4, 566]
[3, 5662]
resultat: 56621
[0, 0]
[1, 5]
[1, 56]
[4, 566]
resultat: 5662
[4, 5662]
resultat: 56622
[0, 0]
resultat: 5
[1, 5]
[2, 56]
[0, 560]
resultat: 5605
[0, 5605]
resultat: 56055
[0, 0]
[1, 5]
resultat: 56
[2, 56]
[0, 560]
[1, 5605]
resultat: 56056
[0, 0]
[1, 5]
[2, 56]
resultat: 560
[0, 560]
[2, 5605]
resultat: 56050
[0, 0]
[1, 5]
[2, 56]
[0, 560]
[3, 5605]
resultat: 56051
[0, 0]
[1, 5]
[2, 56]
[0, 560]
[4, 5605]
resultat: 56052
[0, 0]
resultat: 5
[1, 5]
[2, 56]
[1, 560]
[0, 5606]
resultat: 56065
[0, 0]
[1, 5]
resultat: 56
[2, 56]
[1, 560]
resultat: 5606
[1, 5606]
resultat: 56066
[0, 0]
[1, 5]
[2, 56]
resultat: 560
[1, 560]
[2, 5606]
resultat: 56060
[0, 0]
[1, 5]
[2, 56]
[1, 560]
[3, 5606]
resultat: 56061
[0, 0]
[1, 5]
[2, 56]
[1, 560]
[4, 5606]
resultat: 56062
[0, 0]
resultat: 5
[1, 5]
[2, 56]
[2, 560]
[0, 5600]
resultat: 56005
[0, 0]
[1, 5]
resultat: 56
[2, 56]
[2, 560]
[1, 5600]
resultat: 56006
[0, 0]
[1, 5]
[2, 56]
resultat: 560
[2, 560]
resultat: 5600
[2, 5600]
resultat: 56000
[0, 0]
[1, 5]
[2, 56]
[2, 560]
[3, 5600]
resultat: 56001
[0, 0]
[1, 5]
[2, 56]
[2, 560]
[4, 5600]
resultat: 56002
[0, 0]
resultat: 5
[1, 5]
[2, 56]
[3, 560]
[0, 5601]
resultat: 56015
[0, 0]
[1, 5]
resultat: 56
[2, 56]
[3, 560]
[1, 5601]
resultat: 56016
[0, 0]
[1, 5]
[2, 56]
resultat: 560
[3, 560]
[2, 5601]
resultat: 56010
[0, 0]
[1, 5]
[2, 56]
[3, 560]
resultat: 5601
[3, 5601]
resultat: 56011
[0, 0]
[1, 5]
[2, 56]
[3, 560]
[4, 5601]
resultat: 56012
[0, 0]
resultat: 5
[1, 5]
[2, 56]
[4, 560]
[0, 5602]
resultat: 56025
[0, 0]
[1, 5]
resultat: 56
[2, 56]
[4, 560]
[1, 5602]
resultat: 56026
[0, 0]
[1, 5]
[2, 56]
resultat: 560
[4, 560]
[2, 5602]
resultat: 56020
[0, 0]
[1, 5]
[2, 56]
[4, 560]
[3, 5602]
resultat: 56021
[0, 0]
[1, 5]
[2, 56]
[4, 560]
resultat: 5602
[4, 5602]
resultat: 56022
[0, 0]
resultat: 5
[1, 5]
[3, 56]
[0, 561]
resultat: 5615
[0, 5615]
resultat: 56155
[0, 0]
[1, 5]
resultat: 56
[3, 56]
[0, 561]
[1, 5615]
resultat: 56156
[0, 0]
[1, 5]
[3, 56]
[0, 561]
[2, 5615]
resultat: 56150
[0, 0]
[1, 5]
[3, 56]
resultat: 561
[0, 561]
[3, 5615]
resultat: 56151
[0, 0]
[1, 5]
[3, 56]
[0, 561]
[4, 5615]
resultat: 56152
[0, 0]
resultat: 5
[1, 5]
[3, 56]
[1, 561]
[0, 5616]
resultat: 56165
[0, 0]
[1, 5]
resultat: 56
[3, 56]
[1, 561]
resultat: 5616
[1, 5616]
resultat: 56166
[0, 0]
[1, 5]
[3, 56]
[1, 561]
[2, 5616]
resultat: 56160
[0, 0]
[1, 5]
[3, 56]
resultat: 561
[1, 561]
[3, 5616]
resultat: 56161
[0, 0]
[1, 5]
[3, 56]
[1, 561]
[4, 5616]
resultat: 56162
[0, 0]
resultat: 5
[1, 5]
[3, 56]
[2, 561]
[0, 5610]
resultat: 56105
[0, 0]
[1, 5]
resultat: 56
[3, 56]
[2, 561]
[1, 5610]
resultat: 56106
[0, 0]
[1, 5]
[3, 56]
[2, 561]
resultat: 5610
[2, 5610]
resultat: 56100
[0, 0]
[1, 5]
[3, 56]
resultat: 561
[2, 561]
[3, 5610]
resultat: 56101
[0, 0]
[1, 5]
[3, 56]
[2, 561]
[4, 5610]
resultat: 56102
[0, 0]
resultat: 5
[1, 5]
[3, 56]
[3, 561]
[0, 5611]
resultat: 56115
[0, 0]
[1, 5]
resultat: 56
[3, 56]
[3, 561]
[1, 5611]
resultat: 56116
[0, 0]
[1, 5]
[3, 56]
[3, 561]
[2, 5611]
resultat: 56110
[0, 0]
[1, 5]
[3, 56]
resultat: 561
[3, 561]
resultat: 5611
[3, 5611]
resultat: 56111
[0, 0]
[1, 5]
[3, 56]
[3, 561]
[4, 5611]
resultat: 56112
[0, 0]
resultat: 5
[1, 5]
[3, 56]
[4, 561]
[0, 5612]
resultat: 56125
[0, 0]
[1, 5]
resultat: 56
[3, 56]
[4, 561]
[1, 5612]
resultat: 56126
[0, 0]
[1, 5]
[3, 56]
[4, 561]
[2, 5612]
resultat: 56120
[0, 0]
[1, 5]
[3, 56]
resultat: 561
[4, 561]
[3, 5612]
resultat: 56121
[0, 0]
[1, 5]
[3, 56]
[4, 561]
resultat: 5612
[4, 5612]
resultat: 56122
[0, 0]
resultat: 5
[1, 5]
[4, 56]
[0, 562]
resultat: 5625
[0, 5625]
resultat: 56255
[0, 0]
[1, 5]
resultat: 56
[4, 56]
[0, 562]
[1, 5625]
resultat: 56256
[0, 0]
[1, 5]
[4, 56]
[0, 562]
[2, 5625]
resultat: 56250
[0, 0]
[1, 5]
[4, 56]
[0, 562]
[3, 5625]
resultat: 56251
[0, 0]
[1, 5]
[4, 56]
resultat: 562
[0, 562]
[4, 5625]
resultat: 56252
[0, 0]
resultat: 5
[1, 5]
[4, 56]
[1, 562]
[0, 5626]
resultat: 56265
[0, 0]
[1, 5]
resultat: 56
[4, 56]
[1, 562]
resultat: 5626
[1, 5626]
resultat: 56266
[0, 0]
[1, 5]
[4, 56]
[1, 562]
[2, 5626]
resultat: 56260
[0, 0]
[1, 5]
[4, 56]
[1, 562]
[3, 5626]
resultat: 56261
[0, 0]
[1, 5]
[4, 56]
resultat: 562
[1, 562]
[4, 5626]
resultat: 56262
[0, 0]
resultat: 5
[1, 5]
[4, 56]
[2, 562]
[0, 5620]
resultat: 56205
[0, 0]
[1, 5]
resultat: 56
[4, 56]
[2, 562]
[1, 5620]
resultat: 56206
[0, 0]
[1, 5]
[4, 56]
[2, 562]
resultat: 5620
[2, 5620]
resultat: 56200
[0, 0]
[1, 5]
[4, 56]
[2, 562]
[3, 5620]
resultat: 56201
[0, 0]
[1, 5]
[4, 56]
resultat: 562
[2, 562]
[4, 5620]
resultat: 56202
[0, 0]
resultat: 5
[1, 5]
[4, 56]
[3, 562]
[0, 5621]
resultat: 56215
[0, 0]
[1, 5]
resultat: 56
[4, 56]
[3, 562]
[1, 5621]
resultat: 56216
[0, 0]
[1, 5]
[4, 56]
[3, 562]
[2, 5621]
resultat: 56210
[0, 0]
[1, 5]
[4, 56]
[3, 562]
resultat: 5621
[3, 5621]
resultat: 56211
[0, 0]
[1, 5]
[4, 56]
resultat: 562
[3, 562]
[4, 5621]
resultat: 56212
[0, 0]
resultat: 5
[1, 5]
[4, 56]
[4, 562]
[0, 5622]
resultat: 56225
[0, 0]
[1, 5]
resultat: 56
[4, 56]
[4, 562]
[1, 5622]
resultat: 56226
[0, 0]
[1, 5]
[4, 56]
[4, 562]
[2, 5622]
resultat: 56220
[0, 0]
[1, 5]
[4, 56]
[4, 562]
[3, 5622]
resultat: 56221
[0, 0]
[1, 5]
[4, 56]
resultat: 562
[4, 562]
resultat: 5622
[4, 5622]
resultat: 56222
[0, 0]
resultat: 5
[2, 5]
[0, 50]
resultat: 505
[0, 505]
resultat: 5055
[0, 5055]
resultat: 50555
[0, 0]
[2, 5]
[0, 50]
[0, 505]
[1, 5055]
resultat: 50556
[0, 0]
[2, 5]
resultat: 50
[0, 50]
[0, 505]
[2, 5055]
resultat: 50550
[0, 0]
[2, 5]
[0, 50]
[0, 505]
[3, 5055]
resultat: 50551
[0, 0]
[2, 5]
[0, 50]
[0, 505]
[4, 5055]
resultat: 50552
[0, 0]
resultat: 5
[2, 5]
[0, 50]
resultat: 505
[1, 505]
[0, 5056]
resultat: 50565
[0, 0]
[2, 5]
[0, 50]
[1, 505]
resultat: 5056
[1, 5056]
resultat: 50566
[0, 0]
[2, 5]
resultat: 50
[0, 50]
[1, 505]
[2, 5056]
resultat: 50560
[0, 0]
[2, 5]
[0, 50]
[1, 505]
[3, 5056]
resultat: 50561
[0, 0]
[2, 5]
[0, 50]
[1, 505]
[4, 5056]
resultat: 50562
[0, 0]
resultat: 5
[2, 5]
[0, 50]
resultat: 505
[2, 505]
[0, 5050]
resultat: 50505
[0, 0]
[2, 5]
[0, 50]
[2, 505]
[1, 5050]
resultat: 50506
[0, 0]
[2, 5]
resultat: 50
[0, 50]
[2, 505]
resultat: 5050
[2, 5050]
resultat: 50500
[0, 0]
[2, 5]
[0, 50]
[2, 505]
[3, 5050]
resultat: 50501
[0, 0]
[2, 5]
[0, 50]
[2, 505]
[4, 5050]
resultat: 50502
[0, 0]
resultat: 5
[2, 5]
[0, 50]
resultat: 505
[3, 505]
[0, 5051]
resultat: 50515
[0, 0]
[2, 5]
[0, 50]
[3, 505]
[1, 5051]
resultat: 50516
[0, 0]
[2, 5]
resultat: 50
[0, 50]
[3, 505]
[2, 5051]
resultat: 50510
[0, 0]
[2, 5]
[0, 50]
[3, 505]
resultat: 5051
[3, 5051]
resultat: 50511
[0, 0]
[2, 5]
[0, 50]
[3, 505]
[4, 5051]
resultat: 50512
[0, 0]
resultat: 5
[2, 5]
[0, 50]
resultat: 505
[4, 505]
[0, 5052]
resultat: 50525
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
resultat: 5
resultat: 55
resultat: 555
resultat: 5555
resultat: 55555
resultat: 55556
resultat: 55550
resultat: 55551
resultat: 55552
resultat: 5
resultat: 55
resultat: 555
resultat: 55565
resultat: 5556
resultat: 55566
resultat: 55560
resultat: 55561
resultat: 55562
resultat: 5
resultat: 55
resultat: 555
resultat: 55505
resultat: 55506
resultat: 5550
resultat: 55500
resultat: 55501
resultat: 55502
resultat: 5
resultat: 55
resultat: 555
resultat: 55515
resultat: 55516
resultat: 55510
resultat: 5551
resultat: 55511
resultat: 55512
resultat: 5
resultat: 55
resultat: 555
resultat: 55525
resultat: 55526
resultat: 55520
resultat: 55521
resultat: 5552
resultat: 55522
resultat: 5
resultat: 55
resultat: 5565
resultat: 55655
resultat: 556
resultat: 55656
resultat: 55650
resultat: 55651
resultat: 55652
resultat: 5
resultat: 55
resultat: 55665
resultat: 556
resultat: 5566
resultat: 55666
resultat: 55660
resultat: 55661
resultat: 55662
resultat: 5
resultat: 55
resultat: 55605
resultat: 556
resultat: 55606
resultat: 5560
resultat: 55600
resultat: 55601
resultat: 55602
resultat: 5
resultat: 55
resultat: 55615
resultat: 556
resultat: 55616
resultat: 55610
resultat: 5561
resultat: 55611
resultat: 55612
resultat: 5
resultat: 55
resultat: 55625
resultat: 556
resultat: 55626
resultat: 55620
resultat: 55621
resultat: 5562
resultat: 55622
resultat: 5
resultat: 55
resultat: 5505
resultat: 55055
resultat: 55056
resultat: 550
resultat: 55050
resultat: 55051
resultat: 55052
resultat: 5
resultat: 55
resultat: 55065
resultat: 5506
resultat: 55066
resultat: 550
resultat: 55060
resultat: 55061
resultat: 55062
resultat: 5
resultat: 55
resultat: 55005
resultat: 55006
resultat: 550
resultat: 5500
resultat: 55000
resultat: 55001
resultat: 55002
resultat: 5
resultat: 55
resultat: 55015
resultat: 55016
resultat: 550
resultat: 55010
resultat: 5501
resultat: 55011
resultat: 55012
resultat: 5
resultat: 55
resultat: 55025
resultat: 55026
resultat: 550
resultat: 55020
resultat: 55021
resultat: 5502
resultat: 55022
resultat: 5
resultat: 55
resultat: 5515
resultat: 55155
resultat: 55156
resultat: 55150
resultat: 551
resultat: 55151
resultat: 55152
resultat: 5
resultat: 55
resultat: 55165
resultat: 5516
resultat: 55166
resultat: 55160
resultat: 551
resultat: 55161
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1

66666
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 115, in <module>
    second = runprog([fas, second], startlist)
  File "/Users/luxia/Documents/aoc5b.py", line 45, in runprog
    apa = listan[a]
IndexError: list index out of range
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
[0, 0, 0, 0, 0]
[0, 0, 0, 0, 0]
[0, 0, 0, 0, 0]
[0, 0, 0, 0, 0]
[0, 0, 0, 0, 0]
[0, 0, 0, 0, 1]
[0, 0, 0, 0, 2]
[0, 0, 0, 0, 3]
[0, 0, 0, 0, 4]
[0, 0, 0, 1, 0]
[0, 0, 0, 1, 0]
[0, 0, 0, 1, 0]
[0, 0, 0, 1, 0]
[0, 0, 0, 1, 1]
[0, 0, 0, 1, 1]
[0, 0, 0, 1, 2]
[0, 0, 0, 1, 3]
[0, 0, 0, 1, 4]
[0, 0, 0, 2, 0]
[0, 0, 0, 2, 0]
[0, 0, 0, 2, 0]
[0, 0, 0, 2, 0]
[0, 0, 0, 2, 1]
[0, 0, 0, 2, 2]
[0, 0, 0, 2, 2]
[0, 0, 0, 2, 3]
[0, 0, 0, 2, 4]
[0, 0, 0, 3, 0]
[0, 0, 0, 3, 0]
[0, 0, 0, 3, 0]
[0, 0, 0, 3, 0]
[0, 0, 0, 3, 1]
[0, 0, 0, 3, 2]
[0, 0, 0, 3, 3]
[0, 0, 0, 3, 3]
[0, 0, 0, 3, 4]
[0, 0, 0, 4, 0]
[0, 0, 0, 4, 0]
[0, 0, 0, 4, 0]
[0, 0, 0, 4, 0]
[0, 0, 0, 4, 1]
[0, 0, 0, 4, 2]
[0, 0, 0, 4, 3]
[0, 0, 0, 4, 4]
[0, 0, 0, 4, 4]
[0, 0, 1, 0, 0]
[0, 0, 1, 0, 0]
[0, 0, 1, 0, 0]
[0, 0, 1, 0, 0]
[0, 0, 1, 0, 1]
[0, 0, 1, 0, 1]
[0, 0, 1, 0, 2]
[0, 0, 1, 0, 3]
[0, 0, 1, 0, 4]
[0, 0, 1, 1, 0]
[0, 0, 1, 1, 0]
[0, 0, 1, 1, 0]
[0, 0, 1, 1, 1]
[0, 0, 1, 1, 1]
[0, 0, 1, 1, 1]
[0, 0, 1, 1, 2]
[0, 0, 1, 1, 3]
[0, 0, 1, 1, 4]
[0, 0, 1, 2, 0]
[0, 0, 1, 2, 0]
[0, 0, 1, 2, 0]
[0, 0, 1, 2, 1]
[0, 0, 1, 2, 1]
[0, 0, 1, 2, 2]
[0, 0, 1, 2, 2]
[0, 0, 1, 2, 3]
[0, 0, 1, 2, 4]
[0, 0, 1, 3, 0]
[0, 0, 1, 3, 0]
[0, 0, 1, 3, 0]
[0, 0, 1, 3, 1]
[0, 0, 1, 3, 1]
[0, 0, 1, 3, 2]
[0, 0, 1, 3, 3]
[0, 0, 1, 3, 3]
[0, 0, 1, 3, 4]
[0, 0, 1, 4, 0]
[0, 0, 1, 4, 0]
[0, 0, 1, 4, 0]
[0, 0, 1, 4, 1]
[0, 0, 1, 4, 1]
[0, 0, 1, 4, 2]
[0, 0, 1, 4, 3]
[0, 0, 1, 4, 4]
[0, 0, 1, 4, 4]
[0, 0, 2, 0, 0]
[0, 0, 2, 0, 0]
[0, 0, 2, 0, 0]
[0, 0, 2, 0, 0]
[0, 0, 2, 0, 1]
[0, 0, 2, 0, 2]
[0, 0, 2, 0, 2]
[0, 0, 2, 0, 3]
[0, 0, 2, 0, 4]
[0, 0, 2, 1, 0]
[0, 0, 2, 1, 0]
[0, 0, 2, 1, 0]
[0, 0, 2, 1, 1]
[0, 0, 2, 1, 1]
[0, 0, 2, 1, 2]
[0, 0, 2, 1, 2]
[0, 0, 2, 1, 3]
[0, 0, 2, 1, 4]
[0, 0, 2, 2, 0]
[0, 0, 2, 2, 0]
[0, 0, 2, 2, 0]
[0, 0, 2, 2, 1]
[0, 0, 2, 2, 2]
[0, 0, 2, 2, 2]
[0, 0, 2, 2, 2]
[0, 0, 2, 2, 3]
[0, 0, 2, 2, 4]
[0, 0, 2, 3, 0]
[0, 0, 2, 3, 0]
[0, 0, 2, 3, 0]
[0, 0, 2, 3, 1]
[0, 0, 2, 3, 2]
[0, 0, 2, 3, 2]
[0, 0, 2, 3, 3]
[0, 0, 2, 3, 3]
[0, 0, 2, 3, 4]
[0, 0, 2, 4, 0]
[0, 0, 2, 4, 0]
[0, 0, 2, 4, 0]
[0, 0, 2, 4, 1]
[0, 0, 2, 4, 2]
[0, 0, 2, 4, 2]
[0, 0, 2, 4, 3]
[0, 0, 2, 4, 4]
[0, 0, 2, 4, 4]
[0, 0, 3, 0, 0]
[0, 0, 3, 0, 0]
[0, 0, 3, 0, 0]
[0, 0, 3, 0, 0]
[0, 0, 3, 0, 1]
[0, 0, 3, 0, 2]
[0, 0, 3, 0, 3]
[0, 0, 3, 0, 3]
[0, 0, 3, 0, 4]
[0, 0, 3, 1, 0]
[0, 0, 3, 1, 0]
[0, 0, 3, 1, 0]
[0, 0, 3, 1, 1]
[0, 0, 3, 1, 1]
[0, 0, 3, 1, 2]
[0, 0, 3, 1, 3]
[0, 0, 3, 1, 3]
[0, 0, 3, 1, 4]
[0, 0, 3, 2, 0]
[0, 0, 3, 2, 0]
[0, 0, 3, 2, 0]
[0, 0, 3, 2, 1]
[0, 0, 3, 2, 2]
[0, 0, 3, 2, 2]
[0, 0, 3, 2, 3]
[0, 0, 3, 2, 3]
[0, 0, 3, 2, 4]
[0, 0, 3, 3, 0]
[0, 0, 3, 3, 0]
[0, 0, 3, 3, 0]
[0, 0, 3, 3, 1]
[0, 0, 3, 3, 2]
[0, 0, 3, 3, 3]
[0, 0, 3, 3, 3]
[0, 0, 3, 3, 3]
[0, 0, 3, 3, 4]
[0, 0, 3, 4, 0]
[0, 0, 3, 4, 0]
[0, 0, 3, 4, 0]
[0, 0, 3, 4, 1]
[0, 0, 3, 4, 2]
[0, 0, 3, 4, 3]
[0, 0, 3, 4, 3]
[0, 0, 3, 4, 4]
[0, 0, 3, 4, 4]
[0, 0, 4, 0, 0]
[0, 0, 4, 0, 0]
[0, 0, 4, 0, 0]
[0, 0, 4, 0, 0]
[0, 0, 4, 0, 1]
[0, 0, 4, 0, 2]
[0, 0, 4, 0, 3]
[0, 0, 4, 0, 4]
[0, 0, 4, 0, 4]
[0, 0, 4, 1, 0]
[0, 0, 4, 1, 0]
[0, 0, 4, 1, 0]
[0, 0, 4, 1, 1]
[0, 0, 4, 1, 1]
[0, 0, 4, 1, 2]
[0, 0, 4, 1, 3]
[0, 0, 4, 1, 4]
[0, 0, 4, 1, 4]
[0, 0, 4, 2, 0]
[0, 0, 4, 2, 0]
[0, 0, 4, 2, 0]
[0, 0, 4, 2, 1]
[0, 0, 4, 2, 2]
[0, 0, 4, 2, 2]
[0, 0, 4, 2, 3]
[0, 0, 4, 2, 4]
[0, 0, 4, 2, 4]
[0, 0, 4, 3, 0]
[0, 0, 4, 3, 0]
[0, 0, 4, 3, 0]
[0, 0, 4, 3, 1]
[0, 0, 4, 3, 2]
[0, 0, 4, 3, 3]
[0, 0, 4, 3, 3]
[0, 0, 4, 3, 4]
[0, 0, 4, 3, 4]
[0, 0, 4, 4, 0]
[0, 0, 4, 4, 0]
[0, 0, 4, 4, 0]
[0, 0, 4, 4, 1]
[0, 0, 4, 4, 2]
[0, 0, 4, 4, 3]
[0, 0, 4, 4, 4]
[0, 0, 4, 4, 4]
[0, 0, 4, 4, 4]
[0, 1, 0, 0, 0]
[0, 1, 0, 0, 0]
[0, 1, 0, 0, 0]
[0, 1, 0, 0, 0]
[0, 1, 0, 0, 1]
[0, 1, 0, 0, 1]
[0, 1, 0, 0, 2]
[0, 1, 0, 0, 3]
[0, 1, 0, 0, 4]
[0, 1, 0, 1, 0]
[0, 1, 0, 1, 0]
[0, 1, 0, 1, 0]
[0, 1, 0, 1, 1]
[0, 1, 0, 1, 1]
[0, 1, 0, 1, 1]
[0, 1, 0, 1, 2]
[0, 1, 0, 1, 3]
[0, 1, 0, 1, 4]
[0, 1, 0, 2, 0]
[0, 1, 0, 2, 0]
[0, 1, 0, 2, 0]
[0, 1, 0, 2, 1]
[0, 1, 0, 2, 1]
[0, 1, 0, 2, 2]
[0, 1, 0, 2, 2]
[0, 1, 0, 2, 3]
[0, 1, 0, 2, 4]
[0, 1, 0, 3, 0]
[0, 1, 0, 3, 0]
[0, 1, 0, 3, 0]
[0, 1, 0, 3, 1]
[0, 1, 0, 3, 1]
[0, 1, 0, 3, 2]
[0, 1, 0, 3, 3]
[0, 1, 0, 3, 3]
[0, 1, 0, 3, 4]
[0, 1, 0, 4, 0]
[0, 1, 0, 4, 0]
[0, 1, 0, 4, 0]
[0, 1, 0, 4, 1]
[0, 1, 0, 4, 1]
[0, 1, 0, 4, 2]
[0, 1, 0, 4, 3]
[0, 1, 0, 4, 4]
[0, 1, 0, 4, 4]
[0, 1, 1, 0, 0]
[0, 1, 1, 0, 0]
[0, 1, 1, 0, 0]
[0, 1, 1, 0, 1]
[0, 1, 1, 0, 1]
[0, 1, 1, 0, 1]
[0, 1, 1, 0, 2]
[0, 1, 1, 0, 3]
[0, 1, 1, 0, 4]
[0, 1, 1, 1, 0]
[0, 1, 1, 1, 0]
[0, 1, 1, 1, 1]
[0, 1, 1, 1, 1]
[0, 1, 1, 1, 1]
[0, 1, 1, 1, 1]
[0, 1, 1, 1, 2]
[0, 1, 1, 1, 3]
[0, 1, 1, 1, 4]
[0, 1, 1, 2, 0]
[0, 1, 1, 2, 0]
[0, 1, 1, 2, 1]
[0, 1, 1, 2, 1]
[0, 1, 1, 2, 1]
[0, 1, 1, 2, 2]
[0, 1, 1, 2, 2]
[0, 1, 1, 2, 3]
[0, 1, 1, 2, 4]
[0, 1, 1, 3, 0]
[0, 1, 1, 3, 0]
[0, 1, 1, 3, 1]
[0, 1, 1, 3, 1]
[0, 1, 1, 3, 1]
[0, 1, 1, 3, 2]
[0, 1, 1, 3, 3]
[0, 1, 1, 3, 3]
[0, 1, 1, 3, 4]
[0, 1, 1, 4, 0]
[0, 1, 1, 4, 0]
[0, 1, 1, 4, 1]
[0, 1, 1, 4, 1]
[0, 1, 1, 4, 1]
[0, 1, 1, 4, 2]
[0, 1, 1, 4, 3]
[0, 1, 1, 4, 4]
[0, 1, 1, 4, 4]
[0, 1, 2, 0, 0]
[0, 1, 2, 0, 0]
[0, 1, 2, 0, 0]
[0, 1, 2, 0, 1]
[0, 1, 2, 0, 1]
[0, 1, 2, 0, 2]
[0, 1, 2, 0, 2]
[0, 1, 2, 0, 3]
[0, 1, 2, 0, 4]
[0, 1, 2, 1, 0]
[0, 1, 2, 1, 0]
[0, 1, 2, 1, 1]
[0, 1, 2, 1, 1]
[0, 1, 2, 1, 1]
[0, 1, 2, 1, 2]
[0, 1, 2, 1, 2]
[0, 1, 2, 1, 3]
[0, 1, 2, 1, 4]
[0, 1, 2, 2, 0]
[0, 1, 2, 2, 0]
[0, 1, 2, 2, 1]
[0, 1, 2, 2, 1]
[0, 1, 2, 2, 2]
[0, 1, 2, 2, 2]
[0, 1, 2, 2, 2]
[0, 1, 2, 2, 3]
[0, 1, 2, 2, 4]
[0, 1, 2, 3, 0]
[0, 1, 2, 3, 0]
[0, 1, 2, 3, 1]
[0, 1, 2, 3, 1]
[0, 1, 2, 3, 2]
[0, 1, 2, 3, 2]
[0, 1, 2, 3, 3]
[0, 1, 2, 3, 3]
[0, 1, 2, 3, 4]
[0, 1, 2, 4, 0]
[0, 1, 2, 4, 0]
[0, 1, 2, 4, 1]
[0, 1, 2, 4, 1]
[0, 1, 2, 4, 2]
[0, 1, 2, 4, 2]
[0, 1, 2, 4, 3]
[0, 1, 2, 4, 4]
[0, 1, 2, 4, 4]
[0, 1, 3, 0, 0]
[0, 1, 3, 0, 0]
[0, 1, 3, 0, 0]
[0, 1, 3, 0, 1]
[0, 1, 3, 0, 1]
[0, 1, 3, 0, 2]
[0, 1, 3, 0, 3]
[0, 1, 3, 0, 3]
[0, 1, 3, 0, 4]
[0, 1, 3, 1, 0]
[0, 1, 3, 1, 0]
[0, 1, 3, 1, 1]
[0, 1, 3, 1, 1]
[0, 1, 3, 1, 1]
[0, 1, 3, 1, 2]
[0, 1, 3, 1, 3]
[0, 1, 3, 1, 3]
[0, 1, 3, 1, 4]
[0, 1, 3, 2, 0]
[0, 1, 3, 2, 0]
[0, 1, 3, 2, 1]
[0, 1, 3, 2, 1]
[0, 1, 3, 2, 2]
[0, 1, 3, 2, 2]
[0, 1, 3, 2, 3]
[0, 1, 3, 2, 3]
[0, 1, 3, 2, 4]
[0, 1, 3, 3, 0]
[0, 1, 3, 3, 0]
[0, 1, 3, 3, 1]
[0, 1, 3, 3, 1]
[0, 1, 3, 3, 2]
[0, 1, 3, 3, 3]
[0, 1, 3, 3, 3]
[0, 1, 3, 3, 3]
[0, 1, 3, 3, 4]
[0, 1, 3, 4, 0]
[0, 1, 3, 4, 0]
[0, 1, 3, 4, 1]
[0, 1, 3, 4, 1]
[0, 1, 3, 4, 2]
[0, 1, 3, 4, 3]
[0, 1, 3, 4, 3]
[0, 1, 3, 4, 4]
[0, 1, 3, 4, 4]
[0, 1, 4, 0, 0]
[0, 1, 4, 0, 0]
[0, 1, 4, 0, 0]
[0, 1, 4, 0, 1]
[0, 1, 4, 0, 1]
[0, 1, 4, 0, 2]
[0, 1, 4, 0, 3]
[0, 1, 4, 0, 4]
[0, 1, 4, 0, 4]
[0, 1, 4, 1, 0]
[0, 1, 4, 1, 0]
[0, 1, 4, 1, 1]
[0, 1, 4, 1, 1]
[0, 1, 4, 1, 1]
[0, 1, 4, 1, 2]
[0, 1, 4, 1, 3]
[0, 1, 4, 1, 4]
[0, 1, 4, 1, 4]
[0, 1, 4, 2, 0]
[0, 1, 4, 2, 0]
[0, 1, 4, 2, 1]
[0, 1, 4, 2, 1]
[0, 1, 4, 2, 2]
[0, 1, 4, 2, 2]
[0, 1, 4, 2, 3]
[0, 1, 4, 2, 4]
[0, 1, 4, 2, 4]
[0, 1, 4, 3, 0]
[0, 1, 4, 3, 0]
[0, 1, 4, 3, 1]
[0, 1, 4, 3, 1]
[0, 1, 4, 3, 2]
[0, 1, 4, 3, 3]
[0, 1, 4, 3, 3]
[0, 1, 4, 3, 4]
[0, 1, 4, 3, 4]
[0, 1, 4, 4, 0]
[0, 1, 4, 4, 0]
[0, 1, 4, 4, 1]
[0, 1, 4, 4, 1]
[0, 1, 4, 4, 2]
[0, 1, 4, 4, 3]
[0, 1, 4, 4, 4]
[0, 1, 4, 4, 4]
[0, 1, 4, 4, 4]
[0, 2, 0, 0, 0]
[0, 2, 0, 0, 0]
[0, 2, 0, 0, 0]
[0, 2, 0, 0, 0]
[0, 2, 0, 0, 1]
[0, 2, 0, 0, 2]
[0, 2, 0, 0, 2]
[0, 2, 0, 0, 3]
[0, 2, 0, 0, 4]
[0, 2, 0, 1, 0]
[0, 2, 0, 1, 0]
[0, 2, 0, 1, 0]
[0, 2, 0, 1, 1]
[0, 2, 0, 1, 1]
[0, 2, 0, 1, 2]
[0, 2, 0, 1, 2]
[0, 2, 0, 1, 3]
[0, 2, 0, 1, 4]
[0, 2, 0, 2, 0]
[0, 2, 0, 2, 0]
[0, 2, 0, 2, 0]
[0, 2, 0, 2, 1]
[0, 2, 0, 2, 2]
[0, 2, 0, 2, 2]
[0, 2, 0, 2, 2]
[0, 2, 0, 2, 3]
[0, 2, 0, 2, 4]
[0, 2, 0, 3, 0]
[0, 2, 0, 3, 0]
[0, 2, 0, 3, 0]
[0, 2, 0, 3, 1]
[0, 2, 0, 3, 2]
[0, 2, 0, 3, 2]
[0, 2, 0, 3, 3]
[0, 2, 0, 3, 3]
[0, 2, 0, 3, 4]
[0, 2, 0, 4, 0]
[0, 2, 0, 4, 0]
[0, 2, 0, 4, 0]
[0, 2, 0, 4, 1]
[0, 2, 0, 4, 2]
[0, 2, 0, 4, 2]
[0, 2, 0, 4, 3]
[0, 2, 0, 4, 4]
[0, 2, 0, 4, 4]
[0, 2, 1, 0, 0]
[0, 2, 1, 0, 0]
[0, 2, 1, 0, 0]
[0, 2, 1, 0, 1]
[0, 2, 1, 0, 1]
[0, 2, 1, 0, 2]
[0, 2, 1, 0, 2]
[0, 2, 1, 0, 3]
[0, 2, 1, 0, 4]
[0, 2, 1, 1, 0]
[0, 2, 1, 1, 0]
[0, 2, 1, 1, 1]
[0, 2, 1, 1, 1]
[0, 2, 1, 1, 1]
[0, 2, 1, 1, 2]
[0, 2, 1, 1, 2]
[0, 2, 1, 1, 3]
[0, 2, 1, 1, 4]
[0, 2, 1, 2, 0]
[0, 2, 1, 2, 0]
[0, 2, 1, 2, 1]
[0, 2, 1, 2, 1]
[0, 2, 1, 2, 2]
[0, 2, 1, 2, 2]
[0, 2, 1, 2, 2]
[0, 2, 1, 2, 3]
[0, 2, 1, 2, 4]
[0, 2, 1, 3, 0]
[0, 2, 1, 3, 0]
[0, 2, 1, 3, 1]
[0, 2, 1, 3, 1]
[0, 2, 1, 3, 2]
[0, 2, 1, 3, 2]
[0, 2, 1, 3, 3]
[0, 2, 1, 3, 3]
[0, 2, 1, 3, 4]
[0, 2, 1, 4, 0]
[0, 2, 1, 4, 0]
[0, 2, 1, 4, 1]
[0, 2, 1, 4, 1]
[0, 2, 1, 4, 2]
[0, 2, 1, 4, 2]
[0, 2, 1, 4, 3]
[0, 2, 1, 4, 4]
[0, 2, 1, 4, 4]
[0, 2, 2, 0, 0]
[0, 2, 2, 0, 0]
[0, 2, 2, 0, 0]
[0, 2, 2, 0, 1]
[0, 2, 2, 0, 2]
[0, 2, 2, 0, 2]
[0, 2, 2, 0, 2]
[0, 2, 2, 0, 3]
[0, 2, 2, 0, 4]
[0, 2, 2, 1, 0]
[0, 2, 2, 1, 0]
[0, 2, 2, 1, 1]
[0, 2, 2, 1, 1]
[0, 2, 2, 1, 2]
[0, 2, 2, 1, 2]
[0, 2, 2, 1, 2]
[0, 2, 2, 1, 3]
[0, 2, 2, 1, 4]
[0, 2, 2, 2, 0]
[0, 2, 2, 2, 0]
[0, 2, 2, 2, 1]
[0, 2, 2, 2, 2]
[0, 2, 2, 2, 2]
[0, 2, 2, 2, 2]
[0, 2, 2, 2, 2]
[0, 2, 2, 2, 3]
[0, 2, 2, 2, 4]
[0, 2, 2, 3, 0]
[0, 2, 2, 3, 0]
[0, 2, 2, 3, 1]
[0, 2, 2, 3, 2]
[0, 2, 2, 3, 2]
[0, 2, 2, 3, 2]
[0, 2, 2, 3, 3]
[0, 2, 2, 3, 3]
[0, 2, 2, 3, 4]
[0, 2, 2, 4, 0]
[0, 2, 2, 4, 0]
[0, 2, 2, 4, 1]
[0, 2, 2, 4, 2]
[0, 2, 2, 4, 2]
[0, 2, 2, 4, 2]
[0, 2, 2, 4, 3]
[0, 2, 2, 4, 4]
[0, 2, 2, 4, 4]
[0, 2, 3, 0, 0]
[0, 2, 3, 0, 0]
[0, 2, 3, 0, 0]
[0, 2, 3, 0, 1]
[0, 2, 3, 0, 2]
[0, 2, 3, 0, 2]
[0, 2, 3, 0, 3]
[0, 2, 3, 0, 3]
[0, 2, 3, 0, 4]
[0, 2, 3, 1, 0]
[0, 2, 3, 1, 0]
[0, 2, 3, 1, 1]
[0, 2, 3, 1, 1]
[0, 2, 3, 1, 2]
[0, 2, 3, 1, 2]
[0, 2, 3, 1, 3]
[0, 2, 3, 1, 3]
[0, 2, 3, 1, 4]
[0, 2, 3, 2, 0]
[0, 2, 3, 2, 0]
[0, 2, 3, 2, 1]
[0, 2, 3, 2, 2]
[0, 2, 3, 2, 2]
[0, 2, 3, 2, 2]
[0, 2, 3, 2, 3]
[0, 2, 3, 2, 3]
[0, 2, 3, 2, 4]
[0, 2, 3, 3, 0]
[0, 2, 3, 3, 0]
[0, 2, 3, 3, 1]
[0, 2, 3, 3, 2]
[0, 2, 3, 3, 2]
[0, 2, 3, 3, 3]
[0, 2, 3, 3, 3]
[0, 2, 3, 3, 3]
[0, 2, 3, 3, 4]
[0, 2, 3, 4, 0]
[0, 2, 3, 4, 0]
[0, 2, 3, 4, 1]
[0, 2, 3, 4, 2]
[0, 2, 3, 4, 2]
[0, 2, 3, 4, 3]
[0, 2, 3, 4, 3]
[0, 2, 3, 4, 4]
[0, 2, 3, 4, 4]
[0, 2, 4, 0, 0]
[0, 2, 4, 0, 0]
[0, 2, 4, 0, 0]
[0, 2, 4, 0, 1]
[0, 2, 4, 0, 2]
[0, 2, 4, 0, 2]
[0, 2, 4, 0, 3]
[0, 2, 4, 0, 4]
[0, 2, 4, 0, 4]
[0, 2, 4, 1, 0]
[0, 2, 4, 1, 0]
[0, 2, 4, 1, 1]
[0, 2, 4, 1, 1]
[0, 2, 4, 1, 2]
[0, 2, 4, 1, 2]
[0, 2, 4, 1, 3]
[0, 2, 4, 1, 4]
[0, 2, 4, 1, 4]
[0, 2, 4, 2, 0]
[0, 2, 4, 2, 0]
[0, 2, 4, 2, 1]
[0, 2, 4, 2, 2]
[0, 2, 4, 2, 2]
[0, 2, 4, 2, 2]
[0, 2, 4, 2, 3]
[0, 2, 4, 2, 4]
[0, 2, 4, 2, 4]
[0, 2, 4, 3, 0]
[0, 2, 4, 3, 0]
[0, 2, 4, 3, 1]
[0, 2, 4, 3, 2]
[0, 2, 4, 3, 2]
[0, 2, 4, 3, 3]
[0, 2, 4, 3, 3]
[0, 2, 4, 3, 4]
[0, 2, 4, 3, 4]
[0, 2, 4, 4, 0]
[0, 2, 4, 4, 0]
[0, 2, 4, 4, 1]
[0, 2, 4, 4, 2]
[0, 2, 4, 4, 2]
[0, 2, 4, 4, 3]
[0, 2, 4, 4, 4]
[0, 2, 4, 4, 4]
[0, 2, 4, 4, 4]
[0, 3, 0, 0, 0]
[0, 3, 0, 0, 0]
[0, 3, 0, 0, 0]
[0, 3, 0, 0, 0]
[0, 3, 0, 0, 1]
[0, 3, 0, 0, 2]
[0, 3, 0, 0, 3]
[0, 3, 0, 0, 3]
[0, 3, 0, 0, 4]
[0, 3, 0, 1, 0]
[0, 3, 0, 1, 0]
[0, 3, 0, 1, 0]
[0, 3, 0, 1, 1]
[0, 3, 0, 1, 1]
[0, 3, 0, 1, 2]
[0, 3, 0, 1, 3]
[0, 3, 0, 1, 3]
[0, 3, 0, 1, 4]
[0, 3, 0, 2, 0]
[0, 3, 0, 2, 0]
[0, 3, 0, 2, 0]
[0, 3, 0, 2, 1]
[0, 3, 0, 2, 2]
[0, 3, 0, 2, 2]
[0, 3, 0, 2, 3]
[0, 3, 0, 2, 3]
[0, 3, 0, 2, 4]
[0, 3, 0, 3, 0]
[0, 3, 0, 3, 0]
[0, 3, 0, 3, 0]
[0, 3, 0, 3, 1]
[0, 3, 0, 3, 2]
[0, 3, 0, 3, 3]
[0, 3, 0, 3, 3]
[0, 3, 0, 3, 3]
[0, 3, 0, 3, 4]
[0, 3, 0, 4, 0]
[0, 3, 0, 4, 0]
[0, 3, 0, 4, 0]
[0, 3, 0, 4, 1]
[0, 3, 0, 4, 2]
[0, 3, 0, 4, 3]
[0, 3, 0, 4, 3]
[0, 3, 0, 4, 4]
[0, 3, 0, 4, 4]
[0, 3, 1, 0, 0]
[0, 3, 1, 0, 0]
[0, 3, 1, 0, 0]
[0, 3, 1, 0, 1]
[0, 3, 1, 0, 1]
[0, 3, 1, 0, 2]
[0, 3, 1, 0, 3]
[0, 3, 1, 0, 3]
[0, 3, 1, 0, 4]
[0, 3, 1, 1, 0]
[0, 3, 1, 1, 0]
[0, 3, 1, 1, 1]
[0, 3, 1, 1, 1]
[0, 3, 1, 1, 1]
[0, 3, 1, 1, 2]
[0, 3, 1, 1, 3]
[0, 3, 1, 1, 3]
[0, 3, 1, 1, 4]
[0, 3, 1, 2, 0]
[0, 3, 1, 2, 0]
[0, 3, 1, 2, 1]
[0, 3, 1, 2, 1]
[0, 3, 1, 2, 2]
[0, 3, 1, 2, 2]
[0, 3, 1, 2, 3]
[0, 3, 1, 2, 3]
[0, 3, 1, 2, 4]
[0, 3, 1, 3, 0]
[0, 3, 1, 3, 0]
[0, 3, 1, 3, 1]
[0, 3, 1, 3, 1]
[0, 3, 1, 3, 2]
[0, 3, 1, 3, 3]
[0, 3, 1, 3, 3]
[0, 3, 1, 3, 3]
[0, 3, 1, 3, 4]
[0, 3, 1, 4, 0]
[0, 3, 1, 4, 0]
[0, 3, 1, 4, 1]
[0, 3, 1, 4, 1]
[0, 3, 1, 4, 2]
[0, 3, 1, 4, 3]
[0, 3, 1, 4, 3]
[0, 3, 1, 4, 4]
[0, 3, 1, 4, 4]
[0, 3, 2, 0, 0]
[0, 3, 2, 0, 0]
[0, 3, 2, 0, 0]
[0, 3, 2, 0, 1]
[0, 3, 2, 0, 2]
[0, 3, 2, 0, 2]
[0, 3, 2, 0, 3]
[0, 3, 2, 0, 3]
[0, 3, 2, 0, 4]
[0, 3, 2, 1, 0]
[0, 3, 2, 1, 0]
[0, 3, 2, 1, 1]
[0, 3, 2, 1, 1]
[0, 3, 2, 1, 2]
[0, 3, 2, 1, 2]
[0, 3, 2, 1, 3]
[0, 3, 2, 1, 3]
[0, 3, 2, 1, 4]
[0, 3, 2, 2, 0]
[0, 3, 2, 2, 0]
[0, 3, 2, 2, 1]
[0, 3, 2, 2, 2]
[0, 3, 2, 2, 2]
[0, 3, 2, 2, 2]
[0, 3, 2, 2, 3]
[0, 3, 2, 2, 3]
[0, 3, 2, 2, 4]
[0, 3, 2, 3, 0]
[0, 3, 2, 3, 0]
[0, 3, 2, 3, 1]
[0, 3, 2, 3, 2]
[0, 3, 2, 3, 2]
[0, 3, 2, 3, 3]
[0, 3, 2, 3, 3]
[0, 3, 2, 3, 3]
[0, 3, 2, 3, 4]
[0, 3, 2, 4, 0]
[0, 3, 2, 4, 0]
[0, 3, 2, 4, 1]
[0, 3, 2, 4, 2]
[0, 3, 2, 4, 2]
[0, 3, 2, 4, 3]
[0, 3, 2, 4, 3]
[0, 3, 2, 4, 4]
[0, 3, 2, 4, 4]
[0, 3, 3, 0, 0]
[0, 3, 3, 0, 0]
[0, 3, 3, 0, 0]
[0, 3, 3, 0, 1]
[0, 3, 3, 0, 2]
[0, 3, 3, 0, 3]
[0, 3, 3, 0, 3]
[0, 3, 3, 0, 3]
[0, 3, 3, 0, 4]
[0, 3, 3, 1, 0]
[0, 3, 3, 1, 0]
[0, 3, 3, 1, 1]
[0, 3, 3, 1, 1]
[0, 3, 3, 1, 2]
[0, 3, 3, 1, 3]
[0, 3, 3, 1, 3]
[0, 3, 3, 1, 3]
[0, 3, 3, 1, 4]
[0, 3, 3, 2, 0]
[0, 3, 3, 2, 0]
[0, 3, 3, 2, 1]
[0, 3, 3, 2, 2]
[0, 3, 3, 2, 2]
[0, 3, 3, 2, 3]
[0, 3, 3, 2, 3]
[0, 3, 3, 2, 3]
[0, 3, 3, 2, 4]
[0, 3, 3, 3, 0]
[0, 3, 3, 3, 0]
[0, 3, 3, 3, 1]
[0, 3, 3, 3, 2]
[0, 3, 3, 3, 3]
[0, 3, 3, 3, 3]
[0, 3, 3, 3, 3]
[0, 3, 3, 3, 3]
[0, 3, 3, 3, 4]
[0, 3, 3, 4, 0]
[0, 3, 3, 4, 0]
[0, 3, 3, 4, 1]
[0, 3, 3, 4, 2]
[0, 3, 3, 4, 3]
[0, 3, 3, 4, 3]
[0, 3, 3, 4, 3]
[0, 3, 3, 4, 4]
[0, 3, 3, 4, 4]
[0, 3, 4, 0, 0]
[0, 3, 4, 0, 0]
[0, 3, 4, 0, 0]
[0, 3, 4, 0, 1]
[0, 3, 4, 0, 2]
[0, 3, 4, 0, 3]
[0, 3, 4, 0, 3]
[0, 3, 4, 0, 4]
[0, 3, 4, 0, 4]
[0, 3, 4, 1, 0]
[0, 3, 4, 1, 0]
[0, 3, 4, 1, 1]
[0, 3, 4, 1, 1]
[0, 3, 4, 1, 2]
[0, 3, 4, 1, 3]
[0, 3, 4, 1, 3]
[0, 3, 4, 1, 4]
[0, 3, 4, 1, 4]
[0, 3, 4, 2, 0]
[0, 3, 4, 2, 0]
[0, 3, 4, 2, 1]
[0, 3, 4, 2, 2]
[0, 3, 4, 2, 2]
[0, 3, 4, 2, 3]
[0, 3, 4, 2, 3]
[0, 3, 4, 2, 4]
[0, 3, 4, 2, 4]
[0, 3, 4, 3, 0]
[0, 3, 4, 3, 0]
[0, 3, 4, 3, 1]
[0, 3, 4, 3, 2]
[0, 3, 4, 3, 3]
[0, 3, 4, 3, 3]
[0, 3, 4, 3, 3]
[0, 3, 4, 3, 4]
[0, 3, 4, 3, 4]
[0, 3, 4, 4, 0]
[0, 3, 4, 4, 0]
[0, 3, 4, 4, 1]
[0, 3, 4, 4, 2]
[0, 3, 4, 4, 3]
[0, 3, 4, 4, 3]
[0, 3, 4, 4, 4]
[0, 3, 4, 4, 4]
[0, 3, 4, 4, 4]
[0, 4, 0, 0, 0]
[0, 4, 0, 0, 0]
[0, 4, 0, 0, 0]
[0, 4, 0, 0, 0]
[0, 4, 0, 0, 1]
[0, 4, 0, 0, 2]
[0, 4, 0, 0, 3]
[0, 4, 0, 0, 4]
[0, 4, 0, 0, 4]
[0, 4, 0, 1, 0]
[0, 4, 0, 1, 0]
[0, 4, 0, 1, 0]
[0, 4, 0, 1, 1]
[0, 4, 0, 1, 1]
[0, 4, 0, 1, 2]
[0, 4, 0, 1, 3]
[0, 4, 0, 1, 4]
[0, 4, 0, 1, 4]
[0, 4, 0, 2, 0]
[0, 4, 0, 2, 0]
[0, 4, 0, 2, 0]
[0, 4, 0, 2, 1]
[0, 4, 0, 2, 2]
[0, 4, 0, 2, 2]
[0, 4, 0, 2, 3]
[0, 4, 0, 2, 4]
[0, 4, 0, 2, 4]
[0, 4, 0, 3, 0]
[0, 4, 0, 3, 0]
[0, 4, 0, 3, 0]
[0, 4, 0, 3, 1]
[0, 4, 0, 3, 2]
[0, 4, 0, 3, 3]
[0, 4, 0, 3, 3]
[0, 4, 0, 3, 4]
[0, 4, 0, 3, 4]
[0, 4, 0, 4, 0]
[0, 4, 0, 4, 0]
[0, 4, 0, 4, 0]
[0, 4, 0, 4, 1]
[0, 4, 0, 4, 2]
[0, 4, 0, 4, 3]
[0, 4, 0, 4, 4]
[0, 4, 0, 4, 4]
[0, 4, 0, 4, 4]
[0, 4, 1, 0, 0]
[0, 4, 1, 0, 0]
[0, 4, 1, 0, 0]
[0, 4, 1, 0, 1]
[0, 4, 1, 0, 1]
[0, 4, 1, 0, 2]
[0, 4, 1, 0, 3]
[0, 4, 1, 0, 4]
[0, 4, 1, 0, 4]
[0, 4, 1, 1, 0]
[0, 4, 1, 1, 0]
[0, 4, 1, 1, 1]
[0, 4, 1, 1, 1]
[0, 4, 1, 1, 1]
[0, 4, 1, 1, 2]
[0, 4, 1, 1, 3]
[0, 4, 1, 1, 4]
[0, 4, 1, 1, 4]
[0, 4, 1, 2, 0]
[0, 4, 1, 2, 0]
[0, 4, 1, 2, 1]
[0, 4, 1, 2, 1]
[0, 4, 1, 2, 2]
[0, 4, 1, 2, 2]
[0, 4, 1, 2, 3]
[0, 4, 1, 2, 4]
[0, 4, 1, 2, 4]
[0, 4, 1, 3, 0]
[0, 4, 1, 3, 0]
[0, 4, 1, 3, 1]
[0, 4, 1, 3, 1]
[0, 4, 1, 3, 2]
[0, 4, 1, 3, 3]
[0, 4, 1, 3, 3]
[0, 4, 1, 3, 4]
[0, 4, 1, 3, 4]
[0, 4, 1, 4, 0]
[0, 4, 1, 4, 0]
[0, 4, 1, 4, 1]
[0, 4, 1, 4, 1]
[0, 4, 1, 4, 2]
[0, 4, 1, 4, 3]
[0, 4, 1, 4, 4]
[0, 4, 1, 4, 4]
[0, 4, 1, 4, 4]
[0, 4, 2, 0, 0]
[0, 4, 2, 0, 0]
[0, 4, 2, 0, 0]
[0, 4, 2, 0, 1]
[0, 4, 2, 0, 2]
[0, 4, 2, 0, 2]
[0, 4, 2, 0, 3]
[0, 4, 2, 0, 4]
[0, 4, 2, 0, 4]
[0, 4, 2, 1, 0]
[0, 4, 2, 1, 0]
[0, 4, 2, 1, 1]
[0, 4, 2, 1, 1]
[0, 4, 2, 1, 2]
[0, 4, 2, 1, 2]
[0, 4, 2, 1, 3]
[0, 4, 2, 1, 4]
[0, 4, 2, 1, 4]
[0, 4, 2, 2, 0]
[0, 4, 2, 2, 0]
[0, 4, 2, 2, 1]
[0, 4, 2, 2, 2]
[0, 4, 2, 2, 2]
[0, 4, 2, 2, 2]
[0, 4, 2, 2, 3]
[0, 4, 2, 2, 4]
[0, 4, 2, 2, 4]
[0, 4, 2, 3, 0]
[0, 4, 2, 3, 0]
[0, 4, 2, 3, 1]
[0, 4, 2, 3, 2]
[0, 4, 2, 3, 2]
[0, 4, 2, 3, 3]
[0, 4, 2, 3, 3]
[0, 4, 2, 3, 4]
[0, 4, 2, 3, 4]
[0, 4, 2, 4, 0]
[0, 4, 2, 4, 0]
[0, 4, 2, 4, 1]
[0, 4, 2, 4, 2]
[0, 4, 2, 4, 2]
[0, 4, 2, 4, 3]
[0, 4, 2, 4, 4]
[0, 4, 2, 4, 4]
[0, 4, 2, 4, 4]
[0, 4, 3, 0, 0]
[0, 4, 3, 0, 0]
[0, 4, 3, 0, 0]
[0, 4, 3, 0, 1]
[0, 4, 3, 0, 2]
[0, 4, 3, 0, 3]
[0, 4, 3, 0, 3]
[0, 4, 3, 0, 4]
[0, 4, 3, 0, 4]
[0, 4, 3, 1, 0]
[0, 4, 3, 1, 0]
[0, 4, 3, 1, 1]
[0, 4, 3, 1, 1]
[0, 4, 3, 1, 2]
[0, 4, 3, 1, 3]
[0, 4, 3, 1, 3]
[0, 4, 3, 1, 4]
[0, 4, 3, 1, 4]
[0, 4, 3, 2, 0]
[0, 4, 3, 2, 0]
[0, 4, 3, 2, 1]
[0, 4, 3, 2, 2]
[0, 4, 3, 2, 2]
[0, 4, 3, 2, 3]
[0, 4, 3, 2, 3]
[0, 4, 3, 2, 4]
[0, 4, 3, 2, 4]
[0, 4, 3, 3, 0]
[0, 4, 3, 3, 0]
[0, 4, 3, 3, 1]
[0, 4, 3, 3, 2]
[0, 4, 3, 3, 3]
[0, 4, 3, 3, 3]
[0, 4, 3, 3, 3]
[0, 4, 3, 3, 4]
[0, 4, 3, 3, 4]
[0, 4, 3, 4, 0]
[0, 4, 3, 4, 0]
[0, 4, 3, 4, 1]
[0, 4, 3, 4, 2]
[0, 4, 3, 4, 3]
[0, 4, 3, 4, 3]
[0, 4, 3, 4, 4]
[0, 4, 3, 4, 4]
[0, 4, 3, 4, 4]
[0, 4, 4, 0, 0]
[0, 4, 4, 0, 0]
[0, 4, 4, 0, 0]
[0, 4, 4, 0, 1]
[0, 4, 4, 0, 2]
[0, 4, 4, 0, 3]
[0, 4, 4, 0, 4]
[0, 4, 4, 0, 4]
[0, 4, 4, 0, 4]
[0, 4, 4, 1, 0]
[0, 4, 4, 1, 0]
[0, 4, 4, 1, 1]
[0, 4, 4, 1, 1]
[0, 4, 4, 1, 2]
[0, 4, 4, 1, 3]
[0, 4, 4, 1, 4]
[0, 4, 4, 1, 4]
[0, 4, 4, 1, 4]
[0, 4, 4, 2, 0]
[0, 4, 4, 2, 0]
[0, 4, 4, 2, 1]
[0, 4, 4, 2, 2]
[0, 4, 4, 2, 2]
[0, 4, 4, 2, 3]
[0, 4, 4, 2, 4]
[0, 4, 4, 2, 4]
[0, 4, 4, 2, 4]
[0, 4, 4, 3, 0]
[0, 4, 4, 3, 0]
[0, 4, 4, 3, 1]
[0, 4, 4, 3, 2]
[0, 4, 4, 3, 3]
[0, 4, 4, 3, 3]
[0, 4, 4, 3, 4]
[0, 4, 4, 3, 4]
[0, 4, 4, 3, 4]
[0, 4, 4, 4, 0]
[0, 4, 4, 4, 0]
[0, 4, 4, 4, 1]
[0, 4, 4, 4, 2]
[0, 4, 4, 4, 3]
[0, 4, 4, 4, 4]
[0, 4, 4, 4, 4]
[0, 4, 4, 4, 4]
[0, 4, 4, 4, 4]
[1, 0, 0, 0, 0]
[1, 0, 0, 0, 0]
[1, 0, 0, 0, 0]
[1, 0, 0, 0, 0]
[1, 0, 0, 0, 1]
[1, 0, 0, 0, 1]
[1, 0, 0, 0, 2]
[1, 0, 0, 0, 3]
[1, 0, 0, 0, 4]
[1, 0, 0, 1, 0]
[1, 0, 0, 1, 0]
[1, 0, 0, 1, 0]
[1, 0, 0, 1, 1]
[1, 0, 0, 1, 1]
[1, 0, 0, 1, 1]
[1, 0, 0, 1, 2]
[1, 0, 0, 1, 3]
[1, 0, 0, 1, 4]
[1, 0, 0, 2, 0]
[1, 0, 0, 2, 0]
[1, 0, 0, 2, 0]
[1, 0, 0, 2, 1]
[1, 0, 0, 2, 1]
[1, 0, 0, 2, 2]
[1, 0, 0, 2, 2]
[1, 0, 0, 2, 3]
[1, 0, 0, 2, 4]
[1, 0, 0, 3, 0]
[1, 0, 0, 3, 0]
[1, 0, 0, 3, 0]
[1, 0, 0, 3, 1]
[1, 0, 0, 3, 1]
[1, 0, 0, 3, 2]
[1, 0, 0, 3, 3]
[1, 0, 0, 3, 3]
[1, 0, 0, 3, 4]
[1, 0, 0, 4, 0]
[1, 0, 0, 4, 0]
[1, 0, 0, 4, 0]
[1, 0, 0, 4, 1]
[1, 0, 0, 4, 1]
[1, 0, 0, 4, 2]
[1, 0, 0, 4, 3]
[1, 0, 0, 4, 4]
[1, 0, 0, 4, 4]
[1, 0, 1, 0, 0]
[1, 0, 1, 0, 0]
[1, 0, 1, 0, 0]
[1, 0, 1, 0, 1]
[1, 0, 1, 0, 1]
[1, 0, 1, 0, 1]
[1, 0, 1, 0, 2]
[1, 0, 1, 0, 3]
[1, 0, 1, 0, 4]
[1, 0, 1, 1, 0]
[1, 0, 1, 1, 0]
[1, 0, 1, 1, 1]
[1, 0, 1, 1, 1]
[1, 0, 1, 1, 1]
[1, 0, 1, 1, 1]
[1, 0, 1, 1, 2]
[1, 0, 1, 1, 3]
[1, 0, 1, 1, 4]
[1, 0, 1, 2, 0]
[1, 0, 1, 2, 0]
[1, 0, 1, 2, 1]
[1, 0, 1, 2, 1]
[1, 0, 1, 2, 1]
[1, 0, 1, 2, 2]
[1, 0, 1, 2, 2]
[1, 0, 1, 2, 3]
[1, 0, 1, 2, 4]
[1, 0, 1, 3, 0]
[1, 0, 1, 3, 0]
[1, 0, 1, 3, 1]
[1, 0, 1, 3, 1]
[1, 0, 1, 3, 1]
[1, 0, 1, 3, 2]
[1, 0, 1, 3, 3]
[1, 0, 1, 3, 3]
[1, 0, 1, 3, 4]
[1, 0, 1, 4, 0]
[1, 0, 1, 4, 0]
[1, 0, 1, 4, 1]
[1, 0, 1, 4, 1]
[1, 0, 1, 4, 1]
[1, 0, 1, 4, 2]
[1, 0, 1, 4, 3]
[1, 0, 1, 4, 4]
[1, 0, 1, 4, 4]
[1, 0, 2, 0, 0]
[1, 0, 2, 0, 0]
[1, 0, 2, 0, 0]
[1, 0, 2, 0, 1]
[1, 0, 2, 0, 1]
[1, 0, 2, 0, 2]
[1, 0, 2, 0, 2]
[1, 0, 2, 0, 3]
[1, 0, 2, 0, 4]
[1, 0, 2, 1, 0]
[1, 0, 2, 1, 0]
[1, 0, 2, 1, 1]
[1, 0, 2, 1, 1]
[1, 0, 2, 1, 1]
[1, 0, 2, 1, 2]
[1, 0, 2, 1, 2]
[1, 0, 2, 1, 3]
[1, 0, 2, 1, 4]
[1, 0, 2, 2, 0]
[1, 0, 2, 2, 0]
[1, 0, 2, 2, 1]
[1, 0, 2, 2, 1]
[1, 0, 2, 2, 2]
[1, 0, 2, 2, 2]
[1, 0, 2, 2, 2]
[1, 0, 2, 2, 3]
[1, 0, 2, 2, 4]
[1, 0, 2, 3, 0]
[1, 0, 2, 3, 0]
[1, 0, 2, 3, 1]
[1, 0, 2, 3, 1]
[1, 0, 2, 3, 2]
[1, 0, 2, 3, 2]
[1, 0, 2, 3, 3]
[1, 0, 2, 3, 3]
[1, 0, 2, 3, 4]
[1, 0, 2, 4, 0]
[1, 0, 2, 4, 0]
[1, 0, 2, 4, 1]
[1, 0, 2, 4, 1]
[1, 0, 2, 4, 2]
[1, 0, 2, 4, 2]
[1, 0, 2, 4, 3]
[1, 0, 2, 4, 4]
[1, 0, 2, 4, 4]
[1, 0, 3, 0, 0]
[1, 0, 3, 0, 0]
[1, 0, 3, 0, 0]
[1, 0, 3, 0, 1]
[1, 0, 3, 0, 1]
[1, 0, 3, 0, 2]
[1, 0, 3, 0, 3]
[1, 0, 3, 0, 3]
[1, 0, 3, 0, 4]
[1, 0, 3, 1, 0]
[1, 0, 3, 1, 0]
[1, 0, 3, 1, 1]
[1, 0, 3, 1, 1]
[1, 0, 3, 1, 1]
[1, 0, 3, 1, 2]
[1, 0, 3, 1, 3]
[1, 0, 3, 1, 3]
[1, 0, 3, 1, 4]
[1, 0, 3, 2, 0]
[1, 0, 3, 2, 0]
[1, 0, 3, 2, 1]
[1, 0, 3, 2, 1]
[1, 0, 3, 2, 2]
[1, 0, 3, 2, 2]
[1, 0, 3, 2, 3]
[1, 0, 3, 2, 3]
[1, 0, 3, 2, 4]
[1, 0, 3, 3, 0]
[1, 0, 3, 3, 0]
[1, 0, 3, 3, 1]
[1, 0, 3, 3, 1]
[1, 0, 3, 3, 2]
[1, 0, 3, 3, 3]
[1, 0, 3, 3, 3]
[1, 0, 3, 3, 3]
[1, 0, 3, 3, 4]
[1, 0, 3, 4, 0]
[1, 0, 3, 4, 0]
[1, 0, 3, 4, 1]
[1, 0, 3, 4, 1]
[1, 0, 3, 4, 2]
[1, 0, 3, 4, 3]
[1, 0, 3, 4, 3]
[1, 0, 3, 4, 4]
[1, 0, 3, 4, 4]
[1, 0, 4, 0, 0]
[1, 0, 4, 0, 0]
[1, 0, 4, 0, 0]
[1, 0, 4, 0, 1]
[1, 0, 4, 0, 1]
[1, 0, 4, 0, 2]
[1, 0, 4, 0, 3]
[1, 0, 4, 0, 4]
[1, 0, 4, 0, 4]
[1, 0, 4, 1, 0]
[1, 0, 4, 1, 0]
[1, 0, 4, 1, 1]
[1, 0, 4, 1, 1]
[1, 0, 4, 1, 1]
[1, 0, 4, 1, 2]
[1, 0, 4, 1, 3]
[1, 0, 4, 1, 4]
[1, 0, 4, 1, 4]
[1, 0, 4, 2, 0]
[1, 0, 4, 2, 0]
[1, 0, 4, 2, 1]
[1, 0, 4, 2, 1]
[1, 0, 4, 2, 2]
[1, 0, 4, 2, 2]
[1, 0, 4, 2, 3]
[1, 0, 4, 2, 4]
[1, 0, 4, 2, 4]
[1, 0, 4, 3, 0]
[1, 0, 4, 3, 0]
[1, 0, 4, 3, 1]
[1, 0, 4, 3, 1]
[1, 0, 4, 3, 2]
[1, 0, 4, 3, 3]
[1, 0, 4, 3, 3]
[1, 0, 4, 3, 4]
[1, 0, 4, 3, 4]
[1, 0, 4, 4, 0]
[1, 0, 4, 4, 0]
[1, 0, 4, 4, 1]
[1, 0, 4, 4, 1]
[1, 0, 4, 4, 2]
[1, 0, 4, 4, 3]
[1, 0, 4, 4, 4]
[1, 0, 4, 4, 4]
[1, 0, 4, 4, 4]
[1, 1, 0, 0, 0]
[1, 1, 0, 0, 0]
[1, 1, 0, 0, 0]
[1, 1, 0, 0, 1]
[1, 1, 0, 0, 1]
[1, 1, 0, 0, 1]
[1, 1, 0, 0, 2]
[1, 1, 0, 0, 3]
[1, 1, 0, 0, 4]
[1, 1, 0, 1, 0]
[1, 1, 0, 1, 0]
[1, 1, 0, 1, 1]
[1, 1, 0, 1, 1]
[1, 1, 0, 1, 1]
[1, 1, 0, 1, 1]
[1, 1, 0, 1, 2]
[1, 1, 0, 1, 3]
[1, 1, 0, 1, 4]
[1, 1, 0, 2, 0]
[1, 1, 0, 2, 0]
[1, 1, 0, 2, 1]
[1, 1, 0, 2, 1]
[1, 1, 0, 2, 1]
[1, 1, 0, 2, 2]
[1, 1, 0, 2, 2]
[1, 1, 0, 2, 3]
[1, 1, 0, 2, 4]
[1, 1, 0, 3, 0]
[1, 1, 0, 3, 0]
[1, 1, 0, 3, 1]
[1, 1, 0, 3, 1]
[1, 1, 0, 3, 1]
[1, 1, 0, 3, 2]
[1, 1, 0, 3, 3]
[1, 1, 0, 3, 3]
[1, 1, 0, 3, 4]
[1, 1, 0, 4, 0]
[1, 1, 0, 4, 0]
[1, 1, 0, 4, 1]
[1, 1, 0, 4, 1]
[1, 1, 0, 4, 1]
[1, 1, 0, 4, 2]
[1, 1, 0, 4, 3]
[1, 1, 0, 4, 4]
[1, 1, 0, 4, 4]
[1, 1, 1, 0, 0]
[1, 1, 1, 0, 0]
[1, 1, 1, 0, 1]
[1, 1, 1, 0, 1]
[1, 1, 1, 0, 1]
[1, 1, 1, 0, 1]
[1, 1, 1, 0, 2]
[1, 1, 1, 0, 3]
[1, 1, 1, 0, 4]
[1, 1, 1, 1, 0]
[1, 1, 1, 1, 1]
[1, 1, 1, 1, 1]
[1, 1, 1, 1, 1]
[1, 1, 1, 1, 1]
[1, 1, 1, 1, 1]
[1, 1, 1, 1, 2]
[1, 1, 1, 1, 3]
[1, 1, 1, 1, 4]
[1, 1, 1, 2, 0]
[1, 1, 1, 2, 1]
[1, 1, 1, 2, 1]
[1, 1, 1, 2, 1]
[1, 1, 1, 2, 1]
[1, 1, 1, 2, 2]
[1, 1, 1, 2, 2]
[1, 1, 1, 2, 3]
[1, 1, 1, 2, 4]
[1, 1, 1, 3, 0]
[1, 1, 1, 3, 1]
[1, 1, 1, 3, 1]
[1, 1, 1, 3, 1]
[1, 1, 1, 3, 1]
[1, 1, 1, 3, 2]
[1, 1, 1, 3, 3]
[1, 1, 1, 3, 3]
[1, 1, 1, 3, 4]
[1, 1, 1, 4, 0]
[1, 1, 1, 4, 1]
[1, 1, 1, 4, 1]
[1, 1, 1, 4, 1]
[1, 1, 1, 4, 1]
[1, 1, 1, 4, 2]
[1, 1, 1, 4, 3]
[1, 1, 1, 4, 4]
[1, 1, 1, 4, 4]
[1, 1, 2, 0, 0]
[1, 1, 2, 0, 0]
[1, 1, 2, 0, 1]
[1, 1, 2, 0, 1]
[1, 1, 2, 0, 1]
[1, 1, 2, 0, 2]
[1, 1, 2, 0, 2]
[1, 1, 2, 0, 3]
[1, 1, 2, 0, 4]
[1, 1, 2, 1, 0]
[1, 1, 2, 1, 1]
[1, 1, 2, 1, 1]
[1, 1, 2, 1, 1]
[1, 1, 2, 1, 1]
[1, 1, 2, 1, 2]
[1, 1, 2, 1, 2]
[1, 1, 2, 1, 3]
[1, 1, 2, 1, 4]
[1, 1, 2, 2, 0]
[1, 1, 2, 2, 1]
[1, 1, 2, 2, 1]
[1, 1, 2, 2, 1]
[1, 1, 2, 2, 2]
[1, 1, 2, 2, 2]
[1, 1, 2, 2, 2]
[1, 1, 2, 2, 3]
[1, 1, 2, 2, 4]
[1, 1, 2, 3, 0]
[1, 1, 2, 3, 1]
[1, 1, 2, 3, 1]
[1, 1, 2, 3, 1]
[1, 1, 2, 3, 2]
[1, 1, 2, 3, 2]
[1, 1, 2, 3, 3]
[1, 1, 2, 3, 3]
[1, 1, 2, 3, 4]
[1, 1, 2, 4, 0]
[1, 1, 2, 4, 1]
[1, 1, 2, 4, 1]
[1, 1, 2, 4, 1]
[1, 1, 2, 4, 2]
[1, 1, 2, 4, 2]
[1, 1, 2, 4, 3]
[1, 1, 2, 4, 4]
[1, 1, 2, 4, 4]
[1, 1, 3, 0, 0]
[1, 1, 3, 0, 0]
[1, 1, 3, 0, 1]
[1, 1, 3, 0, 1]
[1, 1, 3, 0, 1]
[1, 1, 3, 0, 2]
[1, 1, 3, 0, 3]
[1, 1, 3, 0, 3]
[1, 1, 3, 0, 4]
[1, 1, 3, 1, 0]
[1, 1, 3, 1, 1]
[1, 1, 3, 1, 1]
[1, 1, 3, 1, 1]
[1, 1, 3, 1, 1]
[1, 1, 3, 1, 2]
[1, 1, 3, 1, 3]
[1, 1, 3, 1, 3]
[1, 1, 3, 1, 4]
[1, 1, 3, 2, 0]
[1, 1, 3, 2, 1]
[1, 1, 3, 2, 1]
[1, 1, 3, 2, 1]
[1, 1, 3, 2, 2]
[1, 1, 3, 2, 2]
[1, 1, 3, 2, 3]
[1, 1, 3, 2, 3]
[1, 1, 3, 2, 4]
[1, 1, 3, 3, 0]
[1, 1, 3, 3, 1]
[1, 1, 3, 3, 1]
[1, 1, 3, 3, 1]
[1, 1, 3, 3, 2]
[1, 1, 3, 3, 3]
[1, 1, 3, 3, 3]
[1, 1, 3, 3, 3]
[1, 1, 3, 3, 4]
[1, 1, 3, 4, 0]
[1, 1, 3, 4, 1]
[1, 1, 3, 4, 1]
[1, 1, 3, 4, 1]
[1, 1, 3, 4, 2]
[1, 1, 3, 4, 3]
[1, 1, 3, 4, 3]
[1, 1, 3, 4, 4]
[1, 1, 3, 4, 4]
[1, 1, 4, 0, 0]
[1, 1, 4, 0, 0]
[1, 1, 4, 0, 1]
[1, 1, 4, 0, 1]
[1, 1, 4, 0, 1]
[1, 1, 4, 0, 2]
[1, 1, 4, 0, 3]
[1, 1, 4, 0, 4]
[1, 1, 4, 0, 4]
[1, 1, 4, 1, 0]
[1, 1, 4, 1, 1]
[1, 1, 4, 1, 1]
[1, 1, 4, 1, 1]
[1, 1, 4, 1, 1]
[1, 1, 4, 1, 2]
[1, 1, 4, 1, 3]
[1, 1, 4, 1, 4]
[1, 1, 4, 1, 4]
[1, 1, 4, 2, 0]
[1, 1, 4, 2, 1]
[1, 1, 4, 2, 1]
[1, 1, 4, 2, 1]
[1, 1, 4, 2, 2]
[1, 1, 4, 2, 2]
[1, 1, 4, 2, 3]
[1, 1, 4, 2, 4]
[1, 1, 4, 2, 4]
[1, 1, 4, 3, 0]
[1, 1, 4, 3, 1]
[1, 1, 4, 3, 1]
[1, 1, 4, 3, 1]
[1, 1, 4, 3, 2]
[1, 1, 4, 3, 3]
[1, 1, 4, 3, 3]
[1, 1, 4, 3, 4]
[1, 1, 4, 3, 4]
[1, 1, 4, 4, 0]
[1, 1, 4, 4, 1]
[1, 1, 4, 4, 1]
[1, 1, 4, 4, 1]
[1, 1, 4, 4, 2]
[1, 1, 4, 4, 3]
[1, 1, 4, 4, 4]
[1, 1, 4, 4, 4]
[1, 1, 4, 4, 4]
[1, 2, 0, 0, 0]
[1, 2, 0, 0, 0]
[1, 2, 0, 0, 0]
[1, 2, 0, 0, 1]
[1, 2, 0, 0, 1]
[1, 2, 0, 0, 2]
[1, 2, 0, 0, 2]
[1, 2, 0, 0, 3]
[1, 2, 0, 0, 4]
[1, 2, 0, 1, 0]
[1, 2, 0, 1, 0]
[1, 2, 0, 1, 1]
[1, 2, 0, 1, 1]
[1, 2, 0, 1, 1]
[1, 2, 0, 1, 2]
[1, 2, 0, 1, 2]
[1, 2, 0, 1, 3]
[1, 2, 0, 1, 4]
[1, 2, 0, 2, 0]
[1, 2, 0, 2, 0]
[1, 2, 0, 2, 1]
[1, 2, 0, 2, 1]
[1, 2, 0, 2, 2]
[1, 2, 0, 2, 2]
[1, 2, 0, 2, 2]
[1, 2, 0, 2, 3]
[1, 2, 0, 2, 4]
[1, 2, 0, 3, 0]
[1, 2, 0, 3, 0]
[1, 2, 0, 3, 1]
[1, 2, 0, 3, 1]
[1, 2, 0, 3, 2]
[1, 2, 0, 3, 2]
[1, 2, 0, 3, 3]
[1, 2, 0, 3, 3]
[1, 2, 0, 3, 4]
[1, 2, 0, 4, 0]
[1, 2, 0, 4, 0]
[1, 2, 0, 4, 1]
[1, 2, 0, 4, 1]
[1, 2, 0, 4, 2]
[1, 2, 0, 4, 2]
[1, 2, 0, 4, 3]
[1, 2, 0, 4, 4]
[1, 2, 0, 4, 4]
[1, 2, 1, 0, 0]
[1, 2, 1, 0, 0]
[1, 2, 1, 0, 1]
[1, 2, 1, 0, 1]
[1, 2, 1, 0, 1]
[1, 2, 1, 0, 2]
[1, 2, 1, 0, 2]
[1, 2, 1, 0, 3]
[1, 2, 1, 0, 4]
[1, 2, 1, 1, 0]
[1, 2, 1, 1, 1]
[1, 2, 1, 1, 1]
[1, 2, 1, 1, 1]
[1, 2, 1, 1, 1]
[1, 2, 1, 1, 2]
[1, 2, 1, 1, 2]
[1, 2, 1, 1, 3]
[1, 2, 1, 1, 4]
[1, 2, 1, 2, 0]
[1, 2, 1, 2, 1]
[1, 2, 1, 2, 1]
[1, 2, 1, 2, 1]
[1, 2, 1, 2, 2]
[1, 2, 1, 2, 2]
[1, 2, 1, 2, 2]
[1, 2, 1, 2, 3]
[1, 2, 1, 2, 4]
[1, 2, 1, 3, 0]
[1, 2, 1, 3, 1]
[1, 2, 1, 3, 1]
[1, 2, 1, 3, 1]
[1, 2, 1, 3, 2]
[1, 2, 1, 3, 2]
[1, 2, 1, 3, 3]
[1, 2, 1, 3, 3]
[1, 2, 1, 3, 4]
[1, 2, 1, 4, 0]
[1, 2, 1, 4, 1]
[1, 2, 1, 4, 1]
[1, 2, 1, 4, 1]
[1, 2, 1, 4, 2]
[1, 2, 1, 4, 2]
[1, 2, 1, 4, 3]
[1, 2, 1, 4, 4]
[1, 2, 1, 4, 4]
[1, 2, 2, 0, 0]
[1, 2, 2, 0, 0]
[1, 2, 2, 0, 1]
[1, 2, 2, 0, 1]
[1, 2, 2, 0, 2]
[1, 2, 2, 0, 2]
[1, 2, 2, 0, 2]
[1, 2, 2, 0, 3]
[1, 2, 2, 0, 4]
[1, 2, 2, 1, 0]
[1, 2, 2, 1, 1]
[1, 2, 2, 1, 1]
[1, 2, 2, 1, 1]
[1, 2, 2, 1, 2]
[1, 2, 2, 1, 2]
[1, 2, 2, 1, 2]
[1, 2, 2, 1, 3]
[1, 2, 2, 1, 4]
[1, 2, 2, 2, 0]
[1, 2, 2, 2, 1]
[1, 2, 2, 2, 1]
[1, 2, 2, 2, 2]
[1, 2, 2, 2, 2]
[1, 2, 2, 2, 2]
[1, 2, 2, 2, 2]
[1, 2, 2, 2, 3]
[1, 2, 2, 2, 4]
[1, 2, 2, 3, 0]
[1, 2, 2, 3, 1]
[1, 2, 2, 3, 1]
[1, 2, 2, 3, 2]
[1, 2, 2, 3, 2]
[1, 2, 2, 3, 2]
[1, 2, 2, 3, 3]
[1, 2, 2, 3, 3]
[1, 2, 2, 3, 4]
[1, 2, 2, 4, 0]
[1, 2, 2, 4, 1]
[1, 2, 2, 4, 1]
[1, 2, 2, 4, 2]
[1, 2, 2, 4, 2]
[1, 2, 2, 4, 2]
[1, 2, 2, 4, 3]
[1, 2, 2, 4, 4]
[1, 2, 2, 4, 4]
[1, 2, 3, 0, 0]
[1, 2, 3, 0, 0]
[1, 2, 3, 0, 1]
[1, 2, 3, 0, 1]
[1, 2, 3, 0, 2]
[1, 2, 3, 0, 2]
[1, 2, 3, 0, 3]
[1, 2, 3, 0, 3]
[1, 2, 3, 0, 4]
[1, 2, 3, 1, 0]
[1, 2, 3, 1, 1]
[1, 2, 3, 1, 1]
[1, 2, 3, 1, 1]
[1, 2, 3, 1, 2]
[1, 2, 3, 1, 2]
[1, 2, 3, 1, 3]
[1, 2, 3, 1, 3]
[1, 2, 3, 1, 4]
[1, 2, 3, 2, 0]
[1, 2, 3, 2, 1]
[1, 2, 3, 2, 1]
[1, 2, 3, 2, 2]
[1, 2, 3, 2, 2]
[1, 2, 3, 2, 2]
[1, 2, 3, 2, 3]
[1, 2, 3, 2, 3]
[1, 2, 3, 2, 4]
[1, 2, 3, 3, 0]
[1, 2, 3, 3, 1]
[1, 2, 3, 3, 1]
[1, 2, 3, 3, 2]
[1, 2, 3, 3, 2]
[1, 2, 3, 3, 3]
[1, 2, 3, 3, 3]
[1, 2, 3, 3, 3]
[1, 2, 3, 3, 4]
[1, 2, 3, 4, 0]
[1, 2, 3, 4, 1]
[1, 2, 3, 4, 1]
[1, 2, 3, 4, 2]
[1, 2, 3, 4, 2]
[1, 2, 3, 4, 3]
[1, 2, 3, 4, 3]
[1, 2, 3, 4, 4]
[1, 2, 3, 4, 4]
[1, 2, 4, 0, 0]
[1, 2, 4, 0, 0]
[1, 2, 4, 0, 1]
[1, 2, 4, 0, 1]
[1, 2, 4, 0, 2]
[1, 2, 4, 0, 2]
[1, 2, 4, 0, 3]
[1, 2, 4, 0, 4]
[1, 2, 4, 0, 4]
[1, 2, 4, 1, 0]
[1, 2, 4, 1, 1]
[1, 2, 4, 1, 1]
[1, 2, 4, 1, 1]
[1, 2, 4, 1, 2]
[1, 2, 4, 1, 2]
[1, 2, 4, 1, 3]
[1, 2, 4, 1, 4]
[1, 2, 4, 1, 4]
[1, 2, 4, 2, 0]
[1, 2, 4, 2, 1]
[1, 2, 4, 2, 1]
[1, 2, 4, 2, 2]
[1, 2, 4, 2, 2]
[1, 2, 4, 2, 2]
[1, 2, 4, 2, 3]
[1, 2, 4, 2, 4]
[1, 2, 4, 2, 4]
[1, 2, 4, 3, 0]
[1, 2, 4, 3, 1]
[1, 2, 4, 3, 1]
[1, 2, 4, 3, 2]
[1, 2, 4, 3, 2]
[1, 2, 4, 3, 3]
[1, 2, 4, 3, 3]
[1, 2, 4, 3, 4]
[1, 2, 4, 3, 4]
[1, 2, 4, 4, 0]
[1, 2, 4, 4, 1]
[1, 2, 4, 4, 1]
[1, 2, 4, 4, 2]
[1, 2, 4, 4, 2]
[1, 2, 4, 4, 3]
[1, 2, 4, 4, 4]
[1, 2, 4, 4, 4]
[1, 2, 4, 4, 4]
[1, 3, 0, 0, 0]
[1, 3, 0, 0, 0]
[1, 3, 0, 0, 0]
[1, 3, 0, 0, 1]
[1, 3, 0, 0, 1]
[1, 3, 0, 0, 2]
[1, 3, 0, 0, 3]
[1, 3, 0, 0, 3]
[1, 3, 0, 0, 4]
[1, 3, 0, 1, 0]
[1, 3, 0, 1, 0]
[1, 3, 0, 1, 1]
[1, 3, 0, 1, 1]
[1, 3, 0, 1, 1]
[1, 3, 0, 1, 2]
[1, 3, 0, 1, 3]
[1, 3, 0, 1, 3]
[1, 3, 0, 1, 4]
[1, 3, 0, 2, 0]
[1, 3, 0, 2, 0]
[1, 3, 0, 2, 1]
[1, 3, 0, 2, 1]
[1, 3, 0, 2, 2]
[1, 3, 0, 2, 2]
[1, 3, 0, 2, 3]
[1, 3, 0, 2, 3]
[1, 3, 0, 2, 4]
[1, 3, 0, 3, 0]
[1, 3, 0, 3, 0]
[1, 3, 0, 3, 1]
[1, 3, 0, 3, 1]
[1, 3, 0, 3, 2]
[1, 3, 0, 3, 3]
[1, 3, 0, 3, 3]
[1, 3, 0, 3, 3]
[1, 3, 0, 3, 4]
[1, 3, 0, 4, 0]
[1, 3, 0, 4, 0]
[1, 3, 0, 4, 1]
[1, 3, 0, 4, 1]
[1, 3, 0, 4, 2]
[1, 3, 0, 4, 3]
[1, 3, 0, 4, 3]
[1, 3, 0, 4, 4]
[1, 3, 0, 4, 4]
[1, 3, 1, 0, 0]
[1, 3, 1, 0, 0]
[1, 3, 1, 0, 1]
[1, 3, 1, 0, 1]
[1, 3, 1, 0, 1]
[1, 3, 1, 0, 2]
[1, 3, 1, 0, 3]
[1, 3, 1, 0, 3]
[1, 3, 1, 0, 4]
[1, 3, 1, 1, 0]
[1, 3, 1, 1, 1]
[1, 3, 1, 1, 1]
[1, 3, 1, 1, 1]
[1, 3, 1, 1, 1]
[1, 3, 1, 1, 2]
[1, 3, 1, 1, 3]
[1, 3, 1, 1, 3]
[1, 3, 1, 1, 4]
[1, 3, 1, 2, 0]
[1, 3, 1, 2, 1]
[1, 3, 1, 2, 1]
[1, 3, 1, 2, 1]
[1, 3, 1, 2, 2]
[1, 3, 1, 2, 2]
[1, 3, 1, 2, 3]
[1, 3, 1, 2, 3]
[1, 3, 1, 2, 4]
[1, 3, 1, 3, 0]
[1, 3, 1, 3, 1]
[1, 3, 1, 3, 1]
[1, 3, 1, 3, 1]
[1, 3, 1, 3, 2]
[1, 3, 1, 3, 3]
[1, 3, 1, 3, 3]
[1, 3, 1, 3, 3]
[1, 3, 1, 3, 4]
[1, 3, 1, 4, 0]
[1, 3, 1, 4, 1]
[1, 3, 1, 4, 1]
[1, 3, 1, 4, 1]
[1, 3, 1, 4, 2]
[1, 3, 1, 4, 3]
[1, 3, 1, 4, 3]
[1, 3, 1, 4, 4]
[1, 3, 1, 4, 4]
[1, 3, 2, 0, 0]
[1, 3, 2, 0, 0]
[1, 3, 2, 0, 1]
[1, 3, 2, 0, 1]
[1, 3, 2, 0, 2]
[1, 3, 2, 0, 2]
[1, 3, 2, 0, 3]
[1, 3, 2, 0, 3]
[1, 3, 2, 0, 4]
[1, 3, 2, 1, 0]
[1, 3, 2, 1, 1]
[1, 3, 2, 1, 1]
[1, 3, 2, 1, 1]
[1, 3, 2, 1, 2]
[1, 3, 2, 1, 2]
[1, 3, 2, 1, 3]
[1, 3, 2, 1, 3]
[1, 3, 2, 1, 4]
[1, 3, 2, 2, 0]
[1, 3, 2, 2, 1]
[1, 3, 2, 2, 1]
[1, 3, 2, 2, 2]
[1, 3, 2, 2, 2]
[1, 3, 2, 2, 2]
[1, 3, 2, 2, 3]
[1, 3, 2, 2, 3]
[1, 3, 2, 2, 4]
[1, 3, 2, 3, 0]
[1, 3, 2, 3, 1]
[1, 3, 2, 3, 1]
[1, 3, 2, 3, 2]
[1, 3, 2, 3, 2]
[1, 3, 2, 3, 3]
[1, 3, 2, 3, 3]
[1, 3, 2, 3, 3]
[1, 3, 2, 3, 4]
[1, 3, 2, 4, 0]
[1, 3, 2, 4, 1]
[1, 3, 2, 4, 1]
[1, 3, 2, 4, 2]
[1, 3, 2, 4, 2]
[1, 3, 2, 4, 3]
[1, 3, 2, 4, 3]
[1, 3, 2, 4, 4]
[1, 3, 2, 4, 4]
[1, 3, 3, 0, 0]
[1, 3, 3, 0, 0]
[1, 3, 3, 0, 1]
[1, 3, 3, 0, 1]
[1, 3, 3, 0, 2]
[1, 3, 3, 0, 3]
[1, 3, 3, 0, 3]
[1, 3, 3, 0, 3]
[1, 3, 3, 0, 4]
[1, 3, 3, 1, 0]
[1, 3, 3, 1, 1]
[1, 3, 3, 1, 1]
[1, 3, 3, 1, 1]
[1, 3, 3, 1, 2]
[1, 3, 3, 1, 3]
[1, 3, 3, 1, 3]
[1, 3, 3, 1, 3]
[1, 3, 3, 1, 4]
[1, 3, 3, 2, 0]
[1, 3, 3, 2, 1]
[1, 3, 3, 2, 1]
[1, 3, 3, 2, 2]
[1, 3, 3, 2, 2]
[1, 3, 3, 2, 3]
[1, 3, 3, 2, 3]
[1, 3, 3, 2, 3]
[1, 3, 3, 2, 4]
[1, 3, 3, 3, 0]
[1, 3, 3, 3, 1]
[1, 3, 3, 3, 1]
[1, 3, 3, 3, 2]
[1, 3, 3, 3, 3]
[1, 3, 3, 3, 3]
[1, 3, 3, 3, 3]
[1, 3, 3, 3, 3]
[1, 3, 3, 3, 4]
[1, 3, 3, 4, 0]
[1, 3, 3, 4, 1]
[1, 3, 3, 4, 1]
[1, 3, 3, 4, 2]
[1, 3, 3, 4, 3]
[1, 3, 3, 4, 3]
[1, 3, 3, 4, 3]
[1, 3, 3, 4, 4]
[1, 3, 3, 4, 4]
[1, 3, 4, 0, 0]
[1, 3, 4, 0, 0]
[1, 3, 4, 0, 1]
[1, 3, 4, 0, 1]
[1, 3, 4, 0, 2]
[1, 3, 4, 0, 3]
[1, 3, 4, 0, 3]
[1, 3, 4, 0, 4]
[1, 3, 4, 0, 4]
[1, 3, 4, 1, 0]
[1, 3, 4, 1, 1]
[1, 3, 4, 1, 1]
[1, 3, 4, 1, 1]
[1, 3, 4, 1, 2]
[1, 3, 4, 1, 3]
[1, 3, 4, 1, 3]
[1, 3, 4, 1, 4]
[1, 3, 4, 1, 4]
[1, 3, 4, 2, 0]
[1, 3, 4, 2, 1]
[1, 3, 4, 2, 1]
[1, 3, 4, 2, 2]
[1, 3, 4, 2, 2]
[1, 3, 4, 2, 3]
[1, 3, 4, 2, 3]
[1, 3, 4, 2, 4]
[1, 3, 4, 2, 4]
[1, 3, 4, 3, 0]
[1, 3, 4, 3, 1]
[1, 3, 4, 3, 1]
[1, 3, 4, 3, 2]
[1, 3, 4, 3, 3]
[1, 3, 4, 3, 3]
[1, 3, 4, 3, 3]
[1, 3, 4, 3, 4]
[1, 3, 4, 3, 4]
[1, 3, 4, 4, 0]
[1, 3, 4, 4, 1]
[1, 3, 4, 4, 1]
[1, 3, 4, 4, 2]
[1, 3, 4, 4, 3]
[1, 3, 4, 4, 3]
[1, 3, 4, 4, 4]
[1, 3, 4, 4, 4]
[1, 3, 4, 4, 4]
[1, 4, 0, 0, 0]
[1, 4, 0, 0, 0]
[1, 4, 0, 0, 0]
[1, 4, 0, 0, 1]
[1, 4, 0, 0, 1]
[1, 4, 0, 0, 2]
[1, 4, 0, 0, 3]
[1, 4, 0, 0, 4]
[1, 4, 0, 0, 4]
[1, 4, 0, 1, 0]
[1, 4, 0, 1, 0]
[1, 4, 0, 1, 1]
[1, 4, 0, 1, 1]
[1, 4, 0, 1, 1]
[1, 4, 0, 1, 2]
[1, 4, 0, 1, 3]
[1, 4, 0, 1, 4]
[1, 4, 0, 1, 4]
[1, 4, 0, 2, 0]
[1, 4, 0, 2, 0]
[1, 4, 0, 2, 1]
[1, 4, 0, 2, 1]
[1, 4, 0, 2, 2]
[1, 4, 0, 2, 2]
[1, 4, 0, 2, 3]
[1, 4, 0, 2, 4]
[1, 4, 0, 2, 4]
[1, 4, 0, 3, 0]
[1, 4, 0, 3, 0]
[1, 4, 0, 3, 1]
[1, 4, 0, 3, 1]
[1, 4, 0, 3, 2]
[1, 4, 0, 3, 3]
[1, 4, 0, 3, 3]
[1, 4, 0, 3, 4]
[1, 4, 0, 3, 4]
[1, 4, 0, 4, 0]
[1, 4, 0, 4, 0]
[1, 4, 0, 4, 1]
[1, 4, 0, 4, 1]
[1, 4, 0, 4, 2]
[1, 4, 0, 4, 3]
[1, 4, 0, 4, 4]
[1, 4, 0, 4, 4]
[1, 4, 0, 4, 4]
[1, 4, 1, 0, 0]
[1, 4, 1, 0, 0]
[1, 4, 1, 0, 1]
[1, 4, 1, 0, 1]
[1, 4, 1, 0, 1]
[1, 4, 1, 0, 2]
[1, 4, 1, 0, 3]
[1, 4, 1, 0, 4]
[1, 4, 1, 0, 4]
[1, 4, 1, 1, 0]
[1, 4, 1, 1, 1]
[1, 4, 1, 1, 1]
[1, 4, 1, 1, 1]
[1, 4, 1, 1, 1]
[1, 4, 1, 1, 2]
[1, 4, 1, 1, 3]
[1, 4, 1, 1, 4]
[1, 4, 1, 1, 4]
[1, 4, 1, 2, 0]
[1, 4, 1, 2, 1]
[1, 4, 1, 2, 1]
[1, 4, 1, 2, 1]
[1, 4, 1, 2, 2]
[1, 4, 1, 2, 2]
[1, 4, 1, 2, 3]
[1, 4, 1, 2, 4]
[1, 4, 1, 2, 4]
[1, 4, 1, 3, 0]
[1, 4, 1, 3, 1]
[1, 4, 1, 3, 1]
[1, 4, 1, 3, 1]
[1, 4, 1, 3, 2]
[1, 4, 1, 3, 3]
[1, 4, 1, 3, 3]
[1, 4, 1, 3, 4]
[1, 4, 1, 3, 4]
[1, 4, 1, 4, 0]
[1, 4, 1, 4, 1]
[1, 4, 1, 4, 1]
[1, 4, 1, 4, 1]
[1, 4, 1, 4, 2]
[1, 4, 1, 4, 3]
[1, 4, 1, 4, 4]
[1, 4, 1, 4, 4]
[1, 4, 1, 4, 4]
[1, 4, 2, 0, 0]
[1, 4, 2, 0, 0]
[1, 4, 2, 0, 1]
[1, 4, 2, 0, 1]
[1, 4, 2, 0, 2]
[1, 4, 2, 0, 2]
[1, 4, 2, 0, 3]
[1, 4, 2, 0, 4]
[1, 4, 2, 0, 4]
[1, 4, 2, 1, 0]
[1, 4, 2, 1, 1]
[1, 4, 2, 1, 1]
[1, 4, 2, 1, 1]
[1, 4, 2, 1, 2]
[1, 4, 2, 1, 2]
[1, 4, 2, 1, 3]
[1, 4, 2, 1, 4]
[1, 4, 2, 1, 4]
[1, 4, 2, 2, 0]
[1, 4, 2, 2, 1]
[1, 4, 2, 2, 1]
[1, 4, 2, 2, 2]
[1, 4, 2, 2, 2]
[1, 4, 2, 2, 2]
[1, 4, 2, 2, 3]
[1, 4, 2, 2, 4]
[1, 4, 2, 2, 4]
[1, 4, 2, 3, 0]
[1, 4, 2, 3, 1]
[1, 4, 2, 3, 1]
[1, 4, 2, 3, 2]
[1, 4, 2, 3, 2]
[1, 4, 2, 3, 3]
[1, 4, 2, 3, 3]
[1, 4, 2, 3, 4]
[1, 4, 2, 3, 4]
[1, 4, 2, 4, 0]
[1, 4, 2, 4, 1]
[1, 4, 2, 4, 1]
[1, 4, 2, 4, 2]
[1, 4, 2, 4, 2]
[1, 4, 2, 4, 3]
[1, 4, 2, 4, 4]
[1, 4, 2, 4, 4]
[1, 4, 2, 4, 4]
[1, 4, 3, 0, 0]
[1, 4, 3, 0, 0]
[1, 4, 3, 0, 1]
[1, 4, 3, 0, 1]
[1, 4, 3, 0, 2]
[1, 4, 3, 0, 3]
[1, 4, 3, 0, 3]
[1, 4, 3, 0, 4]
[1, 4, 3, 0, 4]
[1, 4, 3, 1, 0]
[1, 4, 3, 1, 1]
[1, 4, 3, 1, 1]
[1, 4, 3, 1, 1]
[1, 4, 3, 1, 2]
[1, 4, 3, 1, 3]
[1, 4, 3, 1, 3]
[1, 4, 3, 1, 4]
[1, 4, 3, 1, 4]
[1, 4, 3, 2, 0]
[1, 4, 3, 2, 1]
[1, 4, 3, 2, 1]
[1, 4, 3, 2, 2]
[1, 4, 3, 2, 2]
[1, 4, 3, 2, 3]
[1, 4, 3, 2, 3]
[1, 4, 3, 2, 4]
[1, 4, 3, 2, 4]
[1, 4, 3, 3, 0]
[1, 4, 3, 3, 1]
[1, 4, 3, 3, 1]
[1, 4, 3, 3, 2]
[1, 4, 3, 3, 3]
[1, 4, 3, 3, 3]
[1, 4, 3, 3, 3]
[1, 4, 3, 3, 4]
[1, 4, 3, 3, 4]
[1, 4, 3, 4, 0]
[1, 4, 3, 4, 1]
[1, 4, 3, 4, 1]
[1, 4, 3, 4, 2]
[1, 4, 3, 4, 3]
[1, 4, 3, 4, 3]
[1, 4, 3, 4, 4]
[1, 4, 3, 4, 4]
[1, 4, 3, 4, 4]
[1, 4, 4, 0, 0]
[1, 4, 4, 0, 0]
[1, 4, 4, 0, 1]
[1, 4, 4, 0, 1]
[1, 4, 4, 0, 2]
[1, 4, 4, 0, 3]
[1, 4, 4, 0, 4]
[1, 4, 4, 0, 4]
[1, 4, 4, 0, 4]
[1, 4, 4, 1, 0]
[1, 4, 4, 1, 1]
[1, 4, 4, 1, 1]
[1, 4, 4, 1, 1]
[1, 4, 4, 1, 2]
[1, 4, 4, 1, 3]
[1, 4, 4, 1, 4]
[1, 4, 4, 1, 4]
[1, 4, 4, 1, 4]
[1, 4, 4, 2, 0]
[1, 4, 4, 2, 1]
[1, 4, 4, 2, 1]
[1, 4, 4, 2, 2]
[1, 4, 4, 2, 2]
[1, 4, 4, 2, 3]
[1, 4, 4, 2, 4]
[1, 4, 4, 2, 4]
[1, 4, 4, 2, 4]
[1, 4, 4, 3, 0]
[1, 4, 4, 3, 1]
[1, 4, 4, 3, 1]
[1, 4, 4, 3, 2]
[1, 4, 4, 3, 3]
[1, 4, 4, 3, 3]
[1, 4, 4, 3, 4]
[1, 4, 4, 3, 4]
[1, 4, 4, 3, 4]
[1, 4, 4, 4, 0]
[1, 4, 4, 4, 1]
[1, 4, 4, 4, 1]
[1, 4, 4, 4, 2]
[1, 4, 4, 4, 3]
[1, 4, 4, 4, 4]
[1, 4, 4, 4, 4]
[1, 4, 4, 4, 4]
[1, 4, 4, 4, 4]
[2, 0, 0, 0, 0]
[2, 0, 0, 0, 0]
[2, 0, 0, 0, 0]
[2, 0, 0, 0, 0]
[2, 0, 0, 0, 1]
[2, 0, 0, 0, 2]
[2, 0, 0, 0, 2]
[2, 0, 0, 0, 3]
[2, 0, 0, 0, 4]
[2, 0, 0, 1, 0]
[2, 0, 0, 1, 0]
[2, 0, 0, 1, 0]
[2, 0, 0, 1, 1]
[2, 0, 0, 1, 1]
[2, 0, 0, 1, 2]
[2, 0, 0, 1, 2]
[2, 0, 0, 1, 3]
[2, 0, 0, 1, 4]
[2, 0, 0, 2, 0]
[2, 0, 0, 2, 0]
[2, 0, 0, 2, 0]
[2, 0, 0, 2, 1]
[2, 0, 0, 2, 2]
[2, 0, 0, 2, 2]
[2, 0, 0, 2, 2]
[2, 0, 0, 2, 3]
[2, 0, 0, 2, 4]
[2, 0, 0, 3, 0]
[2, 0, 0, 3, 0]
[2, 0, 0, 3, 0]
[2, 0, 0, 3, 1]
[2, 0, 0, 3, 2]
[2, 0, 0, 3, 2]
[2, 0, 0, 3, 3]
[2, 0, 0, 3, 3]
[2, 0, 0, 3, 4]
[2, 0, 0, 4, 0]
[2, 0, 0, 4, 0]
[2, 0, 0, 4, 0]
[2, 0, 0, 4, 1]
[2, 0, 0, 4, 2]
[2, 0, 0, 4, 2]
[2, 0, 0, 4, 3]
[2, 0, 0, 4, 4]
[2, 0, 0, 4, 4]
[2, 0, 1, 0, 0]
[2, 0, 1, 0, 0]
[2, 0, 1, 0, 0]
[2, 0, 1, 0, 1]
[2, 0, 1, 0, 1]
[2, 0, 1, 0, 2]
[2, 0, 1, 0, 2]
[2, 0, 1, 0, 3]
[2, 0, 1, 0, 4]
[2, 0, 1, 1, 0]
[2, 0, 1, 1, 0]
[2, 0, 1, 1, 1]
[2, 0, 1, 1, 1]
[2, 0, 1, 1, 1]
[2, 0, 1, 1, 2]
[2, 0, 1, 1, 2]
[2, 0, 1, 1, 3]
[2, 0, 1, 1, 4]
[2, 0, 1, 2, 0]
[2, 0, 1, 2, 0]
[2, 0, 1, 2, 1]
[2, 0, 1, 2, 1]
[2, 0, 1, 2, 2]
[2, 0, 1, 2, 2]
[2, 0, 1, 2, 2]
[2, 0, 1, 2, 3]
[2, 0, 1, 2, 4]
[2, 0, 1, 3, 0]
[2, 0, 1, 3, 0]
[2, 0, 1, 3, 1]
[2, 0, 1, 3, 1]
[2, 0, 1, 3, 2]
[2, 0, 1, 3, 2]
[2, 0, 1, 3, 3]
[2, 0, 1, 3, 3]
[2, 0, 1, 3, 4]
[2, 0, 1, 4, 0]
[2, 0, 1, 4, 0]
[2, 0, 1, 4, 1]
[2, 0, 1, 4, 1]
[2, 0, 1, 4, 2]
[2, 0, 1, 4, 2]
[2, 0, 1, 4, 3]
[2, 0, 1, 4, 4]
[2, 0, 1, 4, 4]
[2, 0, 2, 0, 0]
[2, 0, 2, 0, 0]
[2, 0, 2, 0, 0]
[2, 0, 2, 0, 1]
[2, 0, 2, 0, 2]
[2, 0, 2, 0, 2]
[2, 0, 2, 0, 2]
[2, 0, 2, 0, 3]
[2, 0, 2, 0, 4]
[2, 0, 2, 1, 0]
[2, 0, 2, 1, 0]
[2, 0, 2, 1, 1]
[2, 0, 2, 1, 1]
[2, 0, 2, 1, 2]
[2, 0, 2, 1, 2]
[2, 0, 2, 1, 2]
[2, 0, 2, 1, 3]
[2, 0, 2, 1, 4]
[2, 0, 2, 2, 0]
[2, 0, 2, 2, 0]
[2, 0, 2, 2, 1]
[2, 0, 2, 2, 2]
[2, 0, 2, 2, 2]
[2, 0, 2, 2, 2]
[2, 0, 2, 2, 2]
[2, 0, 2, 2, 3]
[2, 0, 2, 2, 4]
[2, 0, 2, 3, 0]
[2, 0, 2, 3, 0]
[2, 0, 2, 3, 1]
[2, 0, 2, 3, 2]
[2, 0, 2, 3, 2]
[2, 0, 2, 3, 2]
[2, 0, 2, 3, 3]
[2, 0, 2, 3, 3]
[2, 0, 2, 3, 4]
[2, 0, 2, 4, 0]
[2, 0, 2, 4, 0]
[2, 0, 2, 4, 1]
[2, 0, 2, 4, 2]
[2, 0, 2, 4, 2]
[2, 0, 2, 4, 2]
[2, 0, 2, 4, 3]
[2, 0, 2, 4, 4]
[2, 0, 2, 4, 4]
[2, 0, 3, 0, 0]
[2, 0, 3, 0, 0]
[2, 0, 3, 0, 0]
[2, 0, 3, 0, 1]
[2, 0, 3, 0, 2]
[2, 0, 3, 0, 2]
[2, 0, 3, 0, 3]
[2, 0, 3, 0, 3]
[2, 0, 3, 0, 4]
[2, 0, 3, 1, 0]
[2, 0, 3, 1, 0]
[2, 0, 3, 1, 1]
[2, 0, 3, 1, 1]
[2, 0, 3, 1, 2]
[2, 0, 3, 1, 2]
[2, 0, 3, 1, 3]
[2, 0, 3, 1, 3]
[2, 0, 3, 1, 4]
[2, 0, 3, 2, 0]
[2, 0, 3, 2, 0]
[2, 0, 3, 2, 1]
[2, 0, 3, 2, 2]
[2, 0, 3, 2, 2]
[2, 0, 3, 2, 2]
[2, 0, 3, 2, 3]
[2, 0, 3, 2, 3]
[2, 0, 3, 2, 4]
[2, 0, 3, 3, 0]
[2, 0, 3, 3, 0]
[2, 0, 3, 3, 1]
[2, 0, 3, 3, 2]
[2, 0, 3, 3, 2]
[2, 0, 3, 3, 3]
[2, 0, 3, 3, 3]
[2, 0, 3, 3, 3]
[2, 0, 3, 3, 4]
[2, 0, 3, 4, 0]
[2, 0, 3, 4, 0]
[2, 0, 3, 4, 1]
[2, 0, 3, 4, 2]
[2, 0, 3, 4, 2]
[2, 0, 3, 4, 3]
[2, 0, 3, 4, 3]
[2, 0, 3, 4, 4]
[2, 0, 3, 4, 4]
[2, 0, 4, 0, 0]
[2, 0, 4, 0, 0]
[2, 0, 4, 0, 0]
[2, 0, 4, 0, 1]
[2, 0, 4, 0, 2]
[2, 0, 4, 0, 2]
[2, 0, 4, 0, 3]
[2, 0, 4, 0, 4]
[2, 0, 4, 0, 4]
[2, 0, 4, 1, 0]
[2, 0, 4, 1, 0]
[2, 0, 4, 1, 1]
[2, 0, 4, 1, 1]
[2, 0, 4, 1, 2]
[2, 0, 4, 1, 2]
[2, 0, 4, 1, 3]
[2, 0, 4, 1, 4]
[2, 0, 4, 1, 4]
[2, 0, 4, 2, 0]
[2, 0, 4, 2, 0]
[2, 0, 4, 2, 1]
[2, 0, 4, 2, 2]
[2, 0, 4, 2, 2]
[2, 0, 4, 2, 2]
[2, 0, 4, 2, 3]
[2, 0, 4, 2, 4]
[2, 0, 4, 2, 4]
[2, 0, 4, 3, 0]
[2, 0, 4, 3, 0]
[2, 0, 4, 3, 1]
[2, 0, 4, 3, 2]
[2, 0, 4, 3, 2]
[2, 0, 4, 3, 3]
[2, 0, 4, 3, 3]
[2, 0, 4, 3, 4]
[2, 0, 4, 3, 4]
[2, 0, 4, 4, 0]
[2, 0, 4, 4, 0]
[2, 0, 4, 4, 1]
[2, 0, 4, 4, 2]
[2, 0, 4, 4, 2]
[2, 0, 4, 4, 3]
[2, 0, 4, 4, 4]
[2, 0, 4, 4, 4]
[2, 0, 4, 4, 4]
[2, 1, 0, 0, 0]
[2, 1, 0, 0, 0]
[2, 1, 0, 0, 0]
[2, 1, 0, 0, 1]
[2, 1, 0, 0, 1]
[2, 1, 0, 0, 2]
[2, 1, 0, 0, 2]
[2, 1, 0, 0, 3]
[2, 1, 0, 0, 4]
[2, 1, 0, 1, 0]
[2, 1, 0, 1, 0]
[2, 1, 0, 1, 1]
[2, 1, 0, 1, 1]
[2, 1, 0, 1, 1]
[2, 1, 0, 1, 2]
[2, 1, 0, 1, 2]
[2, 1, 0, 1, 3]
[2, 1, 0, 1, 4]
[2, 1, 0, 2, 0]
[2, 1, 0, 2, 0]
[2, 1, 0, 2, 1]
[2, 1, 0, 2, 1]
[2, 1, 0, 2, 2]
[2, 1, 0, 2, 2]
[2, 1, 0, 2, 2]
[2, 1, 0, 2, 3]
[2, 1, 0, 2, 4]
[2, 1, 0, 3, 0]
[2, 1, 0, 3, 0]
[2, 1, 0, 3, 1]
[2, 1, 0, 3, 1]
[2, 1, 0, 3, 2]
[2, 1, 0, 3, 2]
[2, 1, 0, 3, 3]
[2, 1, 0, 3, 3]
[2, 1, 0, 3, 4]
[2, 1, 0, 4, 0]
[2, 1, 0, 4, 0]
[2, 1, 0, 4, 1]
[2, 1, 0, 4, 1]
[2, 1, 0, 4, 2]
[2, 1, 0, 4, 2]
[2, 1, 0, 4, 3]
[2, 1, 0, 4, 4]
[2, 1, 0, 4, 4]
[2, 1, 1, 0, 0]
[2, 1, 1, 0, 0]
[2, 1, 1, 0, 1]
[2, 1, 1, 0, 1]
[2, 1, 1, 0, 1]
[2, 1, 1, 0, 2]
[2, 1, 1, 0, 2]
[2, 1, 1, 0, 3]
[2, 1, 1, 0, 4]
[2, 1, 1, 1, 0]
[2, 1, 1, 1, 1]
[2, 1, 1, 1, 1]
[2, 1, 1, 1, 1]
[2, 1, 1, 1, 1]
[2, 1, 1, 1, 2]
[2, 1, 1, 1, 2]
[2, 1, 1, 1, 3]
[2, 1, 1, 1, 4]
[2, 1, 1, 2, 0]
[2, 1, 1, 2, 1]
[2, 1, 1, 2, 1]
[2, 1, 1, 2, 1]
[2, 1, 1, 2, 2]
[2, 1, 1, 2, 2]
[2, 1, 1, 2, 2]
[2, 1, 1, 2, 3]
[2, 1, 1, 2, 4]
[2, 1, 1, 3, 0]
[2, 1, 1, 3, 1]
[2, 1, 1, 3, 1]
[2, 1, 1, 3, 1]
[2, 1, 1, 3, 2]
[2, 1, 1, 3, 2]
[2, 1, 1, 3, 3]
[2, 1, 1, 3, 3]
[2, 1, 1, 3, 4]
[2, 1, 1, 4, 0]
[2, 1, 1, 4, 1]
[2, 1, 1, 4, 1]
[2, 1, 1, 4, 1]
[2, 1, 1, 4, 2]
[2, 1, 1, 4, 2]
[2, 1, 1, 4, 3]
[2, 1, 1, 4, 4]
[2, 1, 1, 4, 4]
[2, 1, 2, 0, 0]
[2, 1, 2, 0, 0]
[2, 1, 2, 0, 1]
[2, 1, 2, 0, 1]
[2, 1, 2, 0, 2]
[2, 1, 2, 0, 2]
[2, 1, 2, 0, 2]
[2, 1, 2, 0, 3]
[2, 1, 2, 0, 4]
[2, 1, 2, 1, 0]
[2, 1, 2, 1, 1]
[2, 1, 2, 1, 1]
[2, 1, 2, 1, 1]
[2, 1, 2, 1, 2]
[2, 1, 2, 1, 2]
[2, 1, 2, 1, 2]
[2, 1, 2, 1, 3]
[2, 1, 2, 1, 4]
[2, 1, 2, 2, 0]
[2, 1, 2, 2, 1]
[2, 1, 2, 2, 1]
[2, 1, 2, 2, 2]
[2, 1, 2, 2, 2]
[2, 1, 2, 2, 2]
[2, 1, 2, 2, 2]
[2, 1, 2, 2, 3]
[2, 1, 2, 2, 4]
[2, 1, 2, 3, 0]
[2, 1, 2, 3, 1]
[2, 1, 2, 3, 1]
[2, 1, 2, 3, 2]
[2, 1, 2, 3, 2]
[2, 1, 2, 3, 2]
[2, 1, 2, 3, 3]
[2, 1, 2, 3, 3]
[2, 1, 2, 3, 4]
[2, 1, 2, 4, 0]
[2, 1, 2, 4, 1]
[2, 1, 2, 4, 1]
[2, 1, 2, 4, 2]
[2, 1, 2, 4, 2]
[2, 1, 2, 4, 2]
[2, 1, 2, 4, 3]
[2, 1, 2, 4, 4]
[2, 1, 2, 4, 4]
[2, 1, 3, 0, 0]
[2, 1, 3, 0, 0]
[2, 1, 3, 0, 1]
[2, 1, 3, 0, 1]
[2, 1, 3, 0, 2]
[2, 1, 3, 0, 2]
[2, 1, 3, 0, 3]
[2, 1, 3, 0, 3]
[2, 1, 3, 0, 4]
[2, 1, 3, 1, 0]
[2, 1, 3, 1, 1]
[2, 1, 3, 1, 1]
[2, 1, 3, 1, 1]
[2, 1, 3, 1, 2]
[2, 1, 3, 1, 2]
[2, 1, 3, 1, 3]
[2, 1, 3, 1, 3]
[2, 1, 3, 1, 4]
[2, 1, 3, 2, 0]
[2, 1, 3, 2, 1]
[2, 1, 3, 2, 1]
[2, 1, 3, 2, 2]
[2, 1, 3, 2, 2]
[2, 1, 3, 2, 2]
[2, 1, 3, 2, 3]
[2, 1, 3, 2, 3]
[2, 1, 3, 2, 4]
[2, 1, 3, 3, 0]
[2, 1, 3, 3, 1]
[2, 1, 3, 3, 1]
[2, 1, 3, 3, 2]
[2, 1, 3, 3, 2]
[2, 1, 3, 3, 3]
[2, 1, 3, 3, 3]
[2, 1, 3, 3, 3]
[2, 1, 3, 3, 4]
[2, 1, 3, 4, 0]
[2, 1, 3, 4, 1]
[2, 1, 3, 4, 1]
[2, 1, 3, 4, 2]
[2, 1, 3, 4, 2]
[2, 1, 3, 4, 3]
[2, 1, 3, 4, 3]
[2, 1, 3, 4, 4]
[2, 1, 3, 4, 4]
[2, 1, 4, 0, 0]
[2, 1, 4, 0, 0]
[2, 1, 4, 0, 1]
[2, 1, 4, 0, 1]
[2, 1, 4, 0, 2]
[2, 1, 4, 0, 2]
[2, 1, 4, 0, 3]
[2, 1, 4, 0, 4]
[2, 1, 4, 0, 4]
[2, 1, 4, 1, 0]
[2, 1, 4, 1, 1]
[2, 1, 4, 1, 1]
[2, 1, 4, 1, 1]
[2, 1, 4, 1, 2]
[2, 1, 4, 1, 2]
[2, 1, 4, 1, 3]
[2, 1, 4, 1, 4]
[2, 1, 4, 1, 4]
[2, 1, 4, 2, 0]
[2, 1, 4, 2, 1]
[2, 1, 4, 2, 1]
[2, 1, 4, 2, 2]
[2, 1, 4, 2, 2]
[2, 1, 4, 2, 2]
[2, 1, 4, 2, 3]
[2, 1, 4, 2, 4]
[2, 1, 4, 2, 4]
[2, 1, 4, 3, 0]
[2, 1, 4, 3, 1]
[2, 1, 4, 3, 1]
[2, 1, 4, 3, 2]
[2, 1, 4, 3, 2]
[2, 1, 4, 3, 3]
[2, 1, 4, 3, 3]
[2, 1, 4, 3, 4]
[2, 1, 4, 3, 4]
[2, 1, 4, 4, 0]
[2, 1, 4, 4, 1]
[2, 1, 4, 4, 1]
[2, 1, 4, 4, 2]
[2, 1, 4, 4, 2]
[2, 1, 4, 4, 3]
[2, 1, 4, 4, 4]
[2, 1, 4, 4, 4]
[2, 1, 4, 4, 4]
[2, 2, 0, 0, 0]
[2, 2, 0, 0, 0]
[2, 2, 0, 0, 0]
[2, 2, 0, 0, 1]
[2, 2, 0, 0, 2]
[2, 2, 0, 0, 2]
[2, 2, 0, 0, 2]
[2, 2, 0, 0, 3]
[2, 2, 0, 0, 4]
[2, 2, 0, 1, 0]
[2, 2, 0, 1, 0]
[2, 2, 0, 1, 1]
[2, 2, 0, 1, 1]
[2, 2, 0, 1, 2]
[2, 2, 0, 1, 2]
[2, 2, 0, 1, 2]
[2, 2, 0, 1, 3]
[2, 2, 0, 1, 4]
[2, 2, 0, 2, 0]
[2, 2, 0, 2, 0]
[2, 2, 0, 2, 1]
[2, 2, 0, 2, 2]
[2, 2, 0, 2, 2]
[2, 2, 0, 2, 2]
[2, 2, 0, 2, 2]
[2, 2, 0, 2, 3]
[2, 2, 0, 2, 4]
[2, 2, 0, 3, 0]
[2, 2, 0, 3, 0]
[2, 2, 0, 3, 1]
[2, 2, 0, 3, 2]
[2, 2, 0, 3, 2]
[2, 2, 0, 3, 2]
[2, 2, 0, 3, 3]
[2, 2, 0, 3, 3]
[2, 2, 0, 3, 4]
[2, 2, 0, 4, 0]
[2, 2, 0, 4, 0]
[2, 2, 0, 4, 1]
[2, 2, 0, 4, 2]
[2, 2, 0, 4, 2]
[2, 2, 0, 4, 2]
[2, 2, 0, 4, 3]
[2, 2, 0, 4, 4]
[2, 2, 0, 4, 4]
[2, 2, 1, 0, 0]
[2, 2, 1, 0, 0]
[2, 2, 1, 0, 1]
[2, 2, 1, 0, 1]
[2, 2, 1, 0, 2]
[2, 2, 1, 0, 2]
[2, 2, 1, 0, 2]
[2, 2, 1, 0, 3]
[2, 2, 1, 0, 4]
[2, 2, 1, 1, 0]
[2, 2, 1, 1, 1]
[2, 2, 1, 1, 1]
[2, 2, 1, 1, 1]
[2, 2, 1, 1, 2]
[2, 2, 1, 1, 2]
[2, 2, 1, 1, 2]
[2, 2, 1, 1, 3]
[2, 2, 1, 1, 4]
[2, 2, 1, 2, 0]
[2, 2, 1, 2, 1]
[2, 2, 1, 2, 1]
[2, 2, 1, 2, 2]
[2, 2, 1, 2, 2]
[2, 2, 1, 2, 2]
[2, 2, 1, 2, 2]
[2, 2, 1, 2, 3]
[2, 2, 1, 2, 4]
[2, 2, 1, 3, 0]
[2, 2, 1, 3, 1]
[2, 2, 1, 3, 1]
[2, 2, 1, 3, 2]
[2, 2, 1, 3, 2]
[2, 2, 1, 3, 2]
[2, 2, 1, 3, 3]
[2, 2, 1, 3, 3]
[2, 2, 1, 3, 4]
[2, 2, 1, 4, 0]
[2, 2, 1, 4, 1]
[2, 2, 1, 4, 1]
[2, 2, 1, 4, 2]
[2, 2, 1, 4, 2]
[2, 2, 1, 4, 2]
[2, 2, 1, 4, 3]
[2, 2, 1, 4, 4]
[2, 2, 1, 4, 4]
[2, 2, 2, 0, 0]
[2, 2, 2, 0, 0]
[2, 2, 2, 0, 1]
[2, 2, 2, 0, 2]
[2, 2, 2, 0, 2]
[2, 2, 2, 0, 2]
[2, 2, 2, 0, 2]
[2, 2, 2, 0, 3]
[2, 2, 2, 0, 4]
[2, 2, 2, 1, 0]
[2, 2, 2, 1, 1]
[2, 2, 2, 1, 1]
[2, 2, 2, 1, 2]
[2, 2, 2, 1, 2]
[2, 2, 2, 1, 2]
[2, 2, 2, 1, 2]
[2, 2, 2, 1, 3]
[2, 2, 2, 1, 4]
[2, 2, 2, 2, 0]
[2, 2, 2, 2, 1]
[2, 2, 2, 2, 2]
[2, 2, 2, 2, 2]
[2, 2, 2, 2, 2]
[2, 2, 2, 2, 2]
[2, 2, 2, 2, 2]
[2, 2, 2, 2, 3]
[2, 2, 2, 2, 4]
[2, 2, 2, 3, 0]
[2, 2, 2, 3, 1]
[2, 2, 2, 3, 2]
[2, 2, 2, 3, 2]
[2, 2, 2, 3, 2]
[2, 2, 2, 3, 2]
[2, 2, 2, 3, 3]
[2, 2, 2, 3, 3]
[2, 2, 2, 3, 4]
[2, 2, 2, 4, 0]
[2, 2, 2, 4, 1]
[2, 2, 2, 4, 2]
[2, 2, 2, 4, 2]
[2, 2, 2, 4, 2]
[2, 2, 2, 4, 2]
[2, 2, 2, 4, 3]
[2, 2, 2, 4, 4]
[2, 2, 2, 4, 4]
[2, 2, 3, 0, 0]
[2, 2, 3, 0, 0]
[2, 2, 3, 0, 1]
[2, 2, 3, 0, 2]
[2, 2, 3, 0, 2]
[2, 2, 3, 0, 2]
[2, 2, 3, 0, 3]
[2, 2, 3, 0, 3]
[2, 2, 3, 0, 4]
[2, 2, 3, 1, 0]
[2, 2, 3, 1, 1]
[2, 2, 3, 1, 1]
[2, 2, 3, 1, 2]
[2, 2, 3, 1, 2]
[2, 2, 3, 1, 2]
[2, 2, 3, 1, 3]
[2, 2, 3, 1, 3]
[2, 2, 3, 1, 4]
[2, 2, 3, 2, 0]
[2, 2, 3, 2, 1]
[2, 2, 3, 2, 2]
[2, 2, 3, 2, 2]
[2, 2, 3, 2, 2]
[2, 2, 3, 2, 2]
[2, 2, 3, 2, 3]
[2, 2, 3, 2, 3]
[2, 2, 3, 2, 4]
[2, 2, 3, 3, 0]
[2, 2, 3, 3, 1]
[2, 2, 3, 3, 2]
[2, 2, 3, 3, 2]
[2, 2, 3, 3, 2]
[2, 2, 3, 3, 3]
[2, 2, 3, 3, 3]
[2, 2, 3, 3, 3]
[2, 2, 3, 3, 4]
[2, 2, 3, 4, 0]
[2, 2, 3, 4, 1]
[2, 2, 3, 4, 2]
[2, 2, 3, 4, 2]
[2, 2, 3, 4, 2]
[2, 2, 3, 4, 3]
[2, 2, 3, 4, 3]
[2, 2, 3, 4, 4]
[2, 2, 3, 4, 4]
[2, 2, 4, 0, 0]
[2, 2, 4, 0, 0]
[2, 2, 4, 0, 1]
[2, 2, 4, 0, 2]
[2, 2, 4, 0, 2]
[2, 2, 4, 0, 2]
[2, 2, 4, 0, 3]
[2, 2, 4, 0, 4]
[2, 2, 4, 0, 4]
[2, 2, 4, 1, 0]
[2, 2, 4, 1, 1]
[2, 2, 4, 1, 1]
[2, 2, 4, 1, 2]
[2, 2, 4, 1, 2]
[2, 2, 4, 1, 2]
[2, 2, 4, 1, 3]
[2, 2, 4, 1, 4]
[2, 2, 4, 1, 4]
[2, 2, 4, 2, 0]
[2, 2, 4, 2, 1]
[2, 2, 4, 2, 2]
[2, 2, 4, 2, 2]
[2, 2, 4, 2, 2]
[2, 2, 4, 2, 2]
[2, 2, 4, 2, 3]
[2, 2, 4, 2, 4]
[2, 2, 4, 2, 4]
[2, 2, 4, 3, 0]
[2, 2, 4, 3, 1]
[2, 2, 4, 3, 2]
[2, 2, 4, 3, 2]
[2, 2, 4, 3, 2]
[2, 2, 4, 3, 3]
[2, 2, 4, 3, 3]
[2, 2, 4, 3, 4]
[2, 2, 4, 3, 4]
[2, 2, 4, 4, 0]
[2, 2, 4, 4, 1]
[2, 2, 4, 4, 2]
[2, 2, 4, 4, 2]
[2, 2, 4, 4, 2]
[2, 2, 4, 4, 3]
[2, 2, 4, 4, 4]
[2, 2, 4, 4, 4]
[2, 2, 4, 4, 4]
[2, 3, 0, 0, 0]
[2, 3, 0, 0, 0]
[2, 3, 0, 0, 0]
[2, 3, 0, 0, 1]
[2, 3, 0, 0, 2]
[2, 3, 0, 0, 2]
[2, 3, 0, 0, 3]
[2, 3, 0, 0, 3]
[2, 3, 0, 0, 4]
[2, 3, 0, 1, 0]
[2, 3, 0, 1, 0]
[2, 3, 0, 1, 1]
[2, 3, 0, 1, 1]
[2, 3, 0, 1, 2]
[2, 3, 0, 1, 2]
[2, 3, 0, 1, 3]
[2, 3, 0, 1, 3]
[2, 3, 0, 1, 4]
[2, 3, 0, 2, 0]
[2, 3, 0, 2, 0]
[2, 3, 0, 2, 1]
[2, 3, 0, 2, 2]
[2, 3, 0, 2, 2]
[2, 3, 0, 2, 2]
[2, 3, 0, 2, 3]
[2, 3, 0, 2, 3]
[2, 3, 0, 2, 4]
[2, 3, 0, 3, 0]
[2, 3, 0, 3, 0]
[2, 3, 0, 3, 1]
[2, 3, 0, 3, 2]
[2, 3, 0, 3, 2]
[2, 3, 0, 3, 3]
[2, 3, 0, 3, 3]
[2, 3, 0, 3, 3]
[2, 3, 0, 3, 4]
[2, 3, 0, 4, 0]
[2, 3, 0, 4, 0]
[2, 3, 0, 4, 1]
[2, 3, 0, 4, 2]
[2, 3, 0, 4, 2]
[2, 3, 0, 4, 3]
[2, 3, 0, 4, 3]
[2, 3, 0, 4, 4]
[2, 3, 0, 4, 4]
[2, 3, 1, 0, 0]
[2, 3, 1, 0, 0]
[2, 3, 1, 0, 1]
[2, 3, 1, 0, 1]
[2, 3, 1, 0, 2]
[2, 3, 1, 0, 2]
[2, 3, 1, 0, 3]
[2, 3, 1, 0, 3]
[2, 3, 1, 0, 4]
[2, 3, 1, 1, 0]
[2, 3, 1, 1, 1]
[2, 3, 1, 1, 1]
[2, 3, 1, 1, 1]
[2, 3, 1, 1, 2]
[2, 3, 1, 1, 2]
[2, 3, 1, 1, 3]
[2, 3, 1, 1, 3]
[2, 3, 1, 1, 4]
[2, 3, 1, 2, 0]
[2, 3, 1, 2, 1]
[2, 3, 1, 2, 1]
[2, 3, 1, 2, 2]
[2, 3, 1, 2, 2]
[2, 3, 1, 2, 2]
[2, 3, 1, 2, 3]
[2, 3, 1, 2, 3]
[2, 3, 1, 2, 4]
[2, 3, 1, 3, 0]
[2, 3, 1, 3, 1]
[2, 3, 1, 3, 1]
[2, 3, 1, 3, 2]
[2, 3, 1, 3, 2]
[2, 3, 1, 3, 3]
[2, 3, 1, 3, 3]
[2, 3, 1, 3, 3]
[2, 3, 1, 3, 4]
[2, 3, 1, 4, 0]
[2, 3, 1, 4, 1]
[2, 3, 1, 4, 1]
[2, 3, 1, 4, 2]
[2, 3, 1, 4, 2]
[2, 3, 1, 4, 3]
[2, 3, 1, 4, 3]
[2, 3, 1, 4, 4]
[2, 3, 1, 4, 4]
[2, 3, 2, 0, 0]
[2, 3, 2, 0, 0]
[2, 3, 2, 0, 1]
[2, 3, 2, 0, 2]
[2, 3, 2, 0, 2]
[2, 3, 2, 0, 2]
[2, 3, 2, 0, 3]
[2, 3, 2, 0, 3]
[2, 3, 2, 0, 4]
[2, 3, 2, 1, 0]
[2, 3, 2, 1, 1]
[2, 3, 2, 1, 1]
[2, 3, 2, 1, 2]
[2, 3, 2, 1, 2]
[2, 3, 2, 1, 2]
[2, 3, 2, 1, 3]
[2, 3, 2, 1, 3]
[2, 3, 2, 1, 4]
[2, 3, 2, 2, 0]
[2, 3, 2, 2, 1]
[2, 3, 2, 2, 2]
[2, 3, 2, 2, 2]
[2, 3, 2, 2, 2]
[2, 3, 2, 2, 2]
[2, 3, 2, 2, 3]
[2, 3, 2, 2, 3]
[2, 3, 2, 2, 4]
[2, 3, 2, 3, 0]
[2, 3, 2, 3, 1]
[2, 3, 2, 3, 2]
[2, 3, 2, 3, 2]
[2, 3, 2, 3, 2]
[2, 3, 2, 3, 3]
[2, 3, 2, 3, 3]
[2, 3, 2, 3, 3]
[2, 3, 2, 3, 4]
[2, 3, 2, 4, 0]
[2, 3, 2, 4, 1]
[2, 3, 2, 4, 2]
[2, 3, 2, 4, 2]
[2, 3, 2, 4, 2]
[2, 3, 2, 4, 3]
[2, 3, 2, 4, 3]
[2, 3, 2, 4, 4]
[2, 3, 2, 4, 4]
[2, 3, 3, 0, 0]
[2, 3, 3, 0, 0]
[2, 3, 3, 0, 1]
[2, 3, 3, 0, 2]
[2, 3, 3, 0, 2]
[2, 3, 3, 0, 3]
[2, 3, 3, 0, 3]
[2, 3, 3, 0, 3]
[2, 3, 3, 0, 4]
[2, 3, 3, 1, 0]
[2, 3, 3, 1, 1]
[2, 3, 3, 1, 1]
[2, 3, 3, 1, 2]
[2, 3, 3, 1, 2]
[2, 3, 3, 1, 3]
[2, 3, 3, 1, 3]
[2, 3, 3, 1, 3]
[2, 3, 3, 1, 4]
[2, 3, 3, 2, 0]
[2, 3, 3, 2, 1]
[2, 3, 3, 2, 2]
[2, 3, 3, 2, 2]
[2, 3, 3, 2, 2]
[2, 3, 3, 2, 3]
[2, 3, 3, 2, 3]
[2, 3, 3, 2, 3]
[2, 3, 3, 2, 4]
[2, 3, 3, 3, 0]
[2, 3, 3, 3, 1]
[2, 3, 3, 3, 2]
[2, 3, 3, 3, 2]
[2, 3, 3, 3, 3]
[2, 3, 3, 3, 3]
[2, 3, 3, 3, 3]
[2, 3, 3, 3, 3]
[2, 3, 3, 3, 4]
[2, 3, 3, 4, 0]
[2, 3, 3, 4, 1]
[2, 3, 3, 4, 2]
[2, 3, 3, 4, 2]
[2, 3, 3, 4, 3]
[2, 3, 3, 4, 3]
[2, 3, 3, 4, 3]
[2, 3, 3, 4, 4]
[2, 3, 3, 4, 4]
[2, 3, 4, 0, 0]
[2, 3, 4, 0, 0]
[2, 3, 4, 0, 1]
[2, 3, 4, 0, 2]
[2, 3, 4, 0, 2]
[2, 3, 4, 0, 3]
[2, 3, 4, 0, 3]
[2, 3, 4, 0, 4]
[2, 3, 4, 0, 4]
[2, 3, 4, 1, 0]
[2, 3, 4, 1, 1]
[2, 3, 4, 1, 1]
[2, 3, 4, 1, 2]
[2, 3, 4, 1, 2]
[2, 3, 4, 1, 3]
[2, 3, 4, 1, 3]
[2, 3, 4, 1, 4]
[2, 3, 4, 1, 4]
[2, 3, 4, 2, 0]
[2, 3, 4, 2, 1]
[2, 3, 4, 2, 2]
[2, 3, 4, 2, 2]
[2, 3, 4, 2, 2]
[2, 3, 4, 2, 3]
[2, 3, 4, 2, 3]
[2, 3, 4, 2, 4]
[2, 3, 4, 2, 4]
[2, 3, 4, 3, 0]
[2, 3, 4, 3, 1]
[2, 3, 4, 3, 2]
[2, 3, 4, 3, 2]
[2, 3, 4, 3, 3]
[2, 3, 4, 3, 3]
[2, 3, 4, 3, 3]
[2, 3, 4, 3, 4]
[2, 3, 4, 3, 4]
[2, 3, 4, 4, 0]
[2, 3, 4, 4, 1]
[2, 3, 4, 4, 2]
[2, 3, 4, 4, 2]
[2, 3, 4, 4, 3]
[2, 3, 4, 4, 3]
[2, 3, 4, 4, 4]
[2, 3, 4, 4, 4]
[2, 3, 4, 4, 4]
[2, 4, 0, 0, 0]
[2, 4, 0, 0, 0]
[2, 4, 0, 0, 0]
[2, 4, 0, 0, 1]
[2, 4, 0, 0, 2]
[2, 4, 0, 0, 2]
[2, 4, 0, 0, 3]
[2, 4, 0, 0, 4]
[2, 4, 0, 0, 4]
[2, 4, 0, 1, 0]
[2, 4, 0, 1, 0]
[2, 4, 0, 1, 1]
[2, 4, 0, 1, 1]
[2, 4, 0, 1, 2]
[2, 4, 0, 1, 2]
[2, 4, 0, 1, 3]
[2, 4, 0, 1, 4]
[2, 4, 0, 1, 4]
[2, 4, 0, 2, 0]
[2, 4, 0, 2, 0]
[2, 4, 0, 2, 1]
[2, 4, 0, 2, 2]
[2, 4, 0, 2, 2]
[2, 4, 0, 2, 2]
[2, 4, 0, 2, 3]
[2, 4, 0, 2, 4]
[2, 4, 0, 2, 4]
[2, 4, 0, 3, 0]
[2, 4, 0, 3, 0]
[2, 4, 0, 3, 1]
[2, 4, 0, 3, 2]
[2, 4, 0, 3, 2]
[2, 4, 0, 3, 3]
[2, 4, 0, 3, 3]
[2, 4, 0, 3, 4]
[2, 4, 0, 3, 4]
[2, 4, 0, 4, 0]
[2, 4, 0, 4, 0]
[2, 4, 0, 4, 1]
[2, 4, 0, 4, 2]
[2, 4, 0, 4, 2]
[2, 4, 0, 4, 3]
[2, 4, 0, 4, 4]
[2, 4, 0, 4, 4]
[2, 4, 0, 4, 4]
[2, 4, 1, 0, 0]
[2, 4, 1, 0, 0]
[2, 4, 1, 0, 1]
[2, 4, 1, 0, 1]
[2, 4, 1, 0, 2]
[2, 4, 1, 0, 2]
[2, 4, 1, 0, 3]
[2, 4, 1, 0, 4]
[2, 4, 1, 0, 4]
[2, 4, 1, 1, 0]
[2, 4, 1, 1, 1]
[2, 4, 1, 1, 1]
[2, 4, 1, 1, 1]
[2, 4, 1, 1, 2]
[2, 4, 1, 1, 2]
[2, 4, 1, 1, 3]
[2, 4, 1, 1, 4]
[2, 4, 1, 1, 4]
[2, 4, 1, 2, 0]
[2, 4, 1, 2, 1]
[2, 4, 1, 2, 1]
[2, 4, 1, 2, 2]
[2, 4, 1, 2, 2]
[2, 4, 1, 2, 2]
[2, 4, 1, 2, 3]
[2, 4, 1, 2, 4]
[2, 4, 1, 2, 4]
[2, 4, 1, 3, 0]
[2, 4, 1, 3, 1]
[2, 4, 1, 3, 1]
[2, 4, 1, 3, 2]
[2, 4, 1, 3, 2]
[2, 4, 1, 3, 3]
[2, 4, 1, 3, 3]
[2, 4, 1, 3, 4]
[2, 4, 1, 3, 4]
[2, 4, 1, 4, 0]
[2, 4, 1, 4, 1]
[2, 4, 1, 4, 1]
[2, 4, 1, 4, 2]
[2, 4, 1, 4, 2]
[2, 4, 1, 4, 3]
[2, 4, 1, 4, 4]
[2, 4, 1, 4, 4]
[2, 4, 1, 4, 4]
[2, 4, 2, 0, 0]
[2, 4, 2, 0, 0]
[2, 4, 2, 0, 1]
[2, 4, 2, 0, 2]
[2, 4, 2, 0, 2]
[2, 4, 2, 0, 2]
[2, 4, 2, 0, 3]
[2, 4, 2, 0, 4]
[2, 4, 2, 0, 4]
[2, 4, 2, 1, 0]
[2, 4, 2, 1, 1]
[2, 4, 2, 1, 1]
[2, 4, 2, 1, 2]
[2, 4, 2, 1, 2]
[2, 4, 2, 1, 2]
[2, 4, 2, 1, 3]
[2, 4, 2, 1, 4]
[2, 4, 2, 1, 4]
[2, 4, 2, 2, 0]
[2, 4, 2, 2, 1]
[2, 4, 2, 2, 2]
[2, 4, 2, 2, 2]
[2, 4, 2, 2, 2]
[2, 4, 2, 2, 2]
[2, 4, 2, 2, 3]
[2, 4, 2, 2, 4]
[2, 4, 2, 2, 4]
[2, 4, 2, 3, 0]
[2, 4, 2, 3, 1]
[2, 4, 2, 3, 2]
[2, 4, 2, 3, 2]
[2, 4, 2, 3, 2]
[2, 4, 2, 3, 3]
[2, 4, 2, 3, 3]
[2, 4, 2, 3, 4]
[2, 4, 2, 3, 4]
[2, 4, 2, 4, 0]
[2, 4, 2, 4, 1]
[2, 4, 2, 4, 2]
[2, 4, 2, 4, 2]
[2, 4, 2, 4, 2]
[2, 4, 2, 4, 3]
[2, 4, 2, 4, 4]
[2, 4, 2, 4, 4]
[2, 4, 2, 4, 4]
[2, 4, 3, 0, 0]
[2, 4, 3, 0, 0]
[2, 4, 3, 0, 1]
[2, 4, 3, 0, 2]
[2, 4, 3, 0, 2]
[2, 4, 3, 0, 3]
[2, 4, 3, 0, 3]
[2, 4, 3, 0, 4]
[2, 4, 3, 0, 4]
[2, 4, 3, 1, 0]
[2, 4, 3, 1, 1]
[2, 4, 3, 1, 1]
[2, 4, 3, 1, 2]
[2, 4, 3, 1, 2]
[2, 4, 3, 1, 3]
[2, 4, 3, 1, 3]
[2, 4, 3, 1, 4]
[2, 4, 3, 1, 4]
[2, 4, 3, 2, 0]
[2, 4, 3, 2, 1]
[2, 4, 3, 2, 2]
[2, 4, 3, 2, 2]
[2, 4, 3, 2, 2]
[2, 4, 3, 2, 3]
[2, 4, 3, 2, 3]
[2, 4, 3, 2, 4]
[2, 4, 3, 2, 4]
[2, 4, 3, 3, 0]
[2, 4, 3, 3, 1]
[2, 4, 3, 3, 2]
[2, 4, 3, 3, 2]
[2, 4, 3, 3, 3]
[2, 4, 3, 3, 3]
[2, 4, 3, 3, 3]
[2, 4, 3, 3, 4]
[2, 4, 3, 3, 4]
[2, 4, 3, 4, 0]
[2, 4, 3, 4, 1]
[2, 4, 3, 4, 2]
[2, 4, 3, 4, 2]
[2, 4, 3, 4, 3]
[2, 4, 3, 4, 3]
[2, 4, 3, 4, 4]
[2, 4, 3, 4, 4]
[2, 4, 3, 4, 4]
[2, 4, 4, 0, 0]
[2, 4, 4, 0, 0]
[2, 4, 4, 0, 1]
[2, 4, 4, 0, 2]
[2, 4, 4, 0, 2]
[2, 4, 4, 0, 3]
[2, 4, 4, 0, 4]
[2, 4, 4, 0, 4]
[2, 4, 4, 0, 4]
[2, 4, 4, 1, 0]
[2, 4, 4, 1, 1]
[2, 4, 4, 1, 1]
[2, 4, 4, 1, 2]
[2, 4, 4, 1, 2]
[2, 4, 4, 1, 3]
[2, 4, 4, 1, 4]
[2, 4, 4, 1, 4]
[2, 4, 4, 1, 4]
[2, 4, 4, 2, 0]
[2, 4, 4, 2, 1]
[2, 4, 4, 2, 2]
[2, 4, 4, 2, 2]
[2, 4, 4, 2, 2]
[2, 4, 4, 2, 3]
[2, 4, 4, 2, 4]
[2, 4, 4, 2, 4]
[2, 4, 4, 2, 4]
[2, 4, 4, 3, 0]
[2, 4, 4, 3, 1]
[2, 4, 4, 3, 2]
[2, 4, 4, 3, 2]
[2, 4, 4, 3, 3]
[2, 4, 4, 3, 3]
[2, 4, 4, 3, 4]
[2, 4, 4, 3, 4]
[2, 4, 4, 3, 4]
[2, 4, 4, 4, 0]
[2, 4, 4, 4, 1]
[2, 4, 4, 4, 2]
[2, 4, 4, 4, 2]
[2, 4, 4, 4, 3]
[2, 4, 4, 4, 4]
[2, 4, 4, 4, 4]
[2, 4, 4, 4, 4]
[2, 4, 4, 4, 4]
[3, 0, 0, 0, 0]
[3, 0, 0, 0, 0]
[3, 0, 0, 0, 0]
[3, 0, 0, 0, 0]
[3, 0, 0, 0, 1]
[3, 0, 0, 0, 2]
[3, 0, 0, 0, 3]
[3, 0, 0, 0, 3]
[3, 0, 0, 0, 4]
[3, 0, 0, 1, 0]
[3, 0, 0, 1, 0]
[3, 0, 0, 1, 0]
[3, 0, 0, 1, 1]
[3, 0, 0, 1, 1]
[3, 0, 0, 1, 2]
[3, 0, 0, 1, 3]
[3, 0, 0, 1, 3]
[3, 0, 0, 1, 4]
[3, 0, 0, 2, 0]
[3, 0, 0, 2, 0]
[3, 0, 0, 2, 0]
[3, 0, 0, 2, 1]
[3, 0, 0, 2, 2]
[3, 0, 0, 2, 2]
[3, 0, 0, 2, 3]
[3, 0, 0, 2, 3]
[3, 0, 0, 2, 4]
[3, 0, 0, 3, 0]
[3, 0, 0, 3, 0]
[3, 0, 0, 3, 0]
[3, 0, 0, 3, 1]
[3, 0, 0, 3, 2]
[3, 0, 0, 3, 3]
[3, 0, 0, 3, 3]
[3, 0, 0, 3, 3]
[3, 0, 0, 3, 4]
[3, 0, 0, 4, 0]
[3, 0, 0, 4, 0]
[3, 0, 0, 4, 0]
[3, 0, 0, 4, 1]
[3, 0, 0, 4, 2]
[3, 0, 0, 4, 3]
[3, 0, 0, 4, 3]
[3, 0, 0, 4, 4]
[3, 0, 0, 4, 4]
[3, 0, 1, 0, 0]
[3, 0, 1, 0, 0]
[3, 0, 1, 0, 0]
[3, 0, 1, 0, 1]
[3, 0, 1, 0, 1]
[3, 0, 1, 0, 2]
[3, 0, 1, 0, 3]
[3, 0, 1, 0, 3]
[3, 0, 1, 0, 4]
[3, 0, 1, 1, 0]
[3, 0, 1, 1, 0]
[3, 0, 1, 1, 1]
[3, 0, 1, 1, 1]
[3, 0, 1, 1, 1]
[3, 0, 1, 1, 2]
[3, 0, 1, 1, 3]
[3, 0, 1, 1, 3]
[3, 0, 1, 1, 4]
[3, 0, 1, 2, 0]
[3, 0, 1, 2, 0]
[3, 0, 1, 2, 1]
[3, 0, 1, 2, 1]
[3, 0, 1, 2, 2]
[3, 0, 1, 2, 2]
[3, 0, 1, 2, 3]
[3, 0, 1, 2, 3]
[3, 0, 1, 2, 4]
[3, 0, 1, 3, 0]
[3, 0, 1, 3, 0]
[3, 0, 1, 3, 1]
[3, 0, 1, 3, 1]
[3, 0, 1, 3, 2]
[3, 0, 1, 3, 3]
[3, 0, 1, 3, 3]
[3, 0, 1, 3, 3]
[3, 0, 1, 3, 4]
[3, 0, 1, 4, 0]
[3, 0, 1, 4, 0]
[3, 0, 1, 4, 1]
[3, 0, 1, 4, 1]
[3, 0, 1, 4, 2]
[3, 0, 1, 4, 3]
[3, 0, 1, 4, 3]
[3, 0, 1, 4, 4]
[3, 0, 1, 4, 4]
[3, 0, 2, 0, 0]
[3, 0, 2, 0, 0]
[3, 0, 2, 0, 0]
[3, 0, 2, 0, 1]
[3, 0, 2, 0, 2]
[3, 0, 2, 0, 2]
[3, 0, 2, 0, 3]
[3, 0, 2, 0, 3]
[3, 0, 2, 0, 4]
[3, 0, 2, 1, 0]
[3, 0, 2, 1, 0]
[3, 0, 2, 1, 1]
[3, 0, 2, 1, 1]
[3, 0, 2, 1, 2]
[3, 0, 2, 1, 2]
[3, 0, 2, 1, 3]
[3, 0, 2, 1, 3]
[3, 0, 2, 1, 4]
[3, 0, 2, 2, 0]
[3, 0, 2, 2, 0]
[3, 0, 2, 2, 1]
[3, 0, 2, 2, 2]
[3, 0, 2, 2, 2]
[3, 0, 2, 2, 2]
[3, 0, 2, 2, 3]
[3, 0, 2, 2, 3]
[3, 0, 2, 2, 4]
[3, 0, 2, 3, 0]
[3, 0, 2, 3, 0]
[3, 0, 2, 3, 1]
[3, 0, 2, 3, 2]
[3, 0, 2, 3, 2]
[3, 0, 2, 3, 3]
[3, 0, 2, 3, 3]
[3, 0, 2, 3, 3]
[3, 0, 2, 3, 4]
[3, 0, 2, 4, 0]
[3, 0, 2, 4, 0]
[3, 0, 2, 4, 1]
[3, 0, 2, 4, 2]
[3, 0, 2, 4, 2]
[3, 0, 2, 4, 3]
[3, 0, 2, 4, 3]
[3, 0, 2, 4, 4]
[3, 0, 2, 4, 4]
[3, 0, 3, 0, 0]
[3, 0, 3, 0, 0]
[3, 0, 3, 0, 0]
[3, 0, 3, 0, 1]
[3, 0, 3, 0, 2]
[3, 0, 3, 0, 3]
[3, 0, 3, 0, 3]
[3, 0, 3, 0, 3]
[3, 0, 3, 0, 4]
[3, 0, 3, 1, 0]
[3, 0, 3, 1, 0]
[3, 0, 3, 1, 1]
[3, 0, 3, 1, 1]
[3, 0, 3, 1, 2]
[3, 0, 3, 1, 3]
[3, 0, 3, 1, 3]
[3, 0, 3, 1, 3]
[3, 0, 3, 1, 4]
[3, 0, 3, 2, 0]
[3, 0, 3, 2, 0]
[3, 0, 3, 2, 1]
[3, 0, 3, 2, 2]
[3, 0, 3, 2, 2]
[3, 0, 3, 2, 3]
[3, 0, 3, 2, 3]
[3, 0, 3, 2, 3]
[3, 0, 3, 2, 4]
[3, 0, 3, 3, 0]
[3, 0, 3, 3, 0]
[3, 0, 3, 3, 1]
[3, 0, 3, 3, 2]
[3, 0, 3, 3, 3]
[3, 0, 3, 3, 3]
[3, 0, 3, 3, 3]
[3, 0, 3, 3, 3]
[3, 0, 3, 3, 4]
[3, 0, 3, 4, 0]
[3, 0, 3, 4, 0]
[3, 0, 3, 4, 1]
[3, 0, 3, 4, 2]
[3, 0, 3, 4, 3]
[3, 0, 3, 4, 3]
[3, 0, 3, 4, 3]
[3, 0, 3, 4, 4]
[3, 0, 3, 4, 4]
[3, 0, 4, 0, 0]
[3, 0, 4, 0, 0]
[3, 0, 4, 0, 0]
[3, 0, 4, 0, 1]
[3, 0, 4, 0, 2]
[3, 0, 4, 0, 3]
[3, 0, 4, 0, 3]
[3, 0, 4, 0, 4]
[3, 0, 4, 0, 4]
[3, 0, 4, 1, 0]
[3, 0, 4, 1, 0]
[3, 0, 4, 1, 1]
[3, 0, 4, 1, 1]
[3, 0, 4, 1, 2]
[3, 0, 4, 1, 3]
[3, 0, 4, 1, 3]
[3, 0, 4, 1, 4]
[3, 0, 4, 1, 4]
[3, 0, 4, 2, 0]
[3, 0, 4, 2, 0]
[3, 0, 4, 2, 1]
[3, 0, 4, 2, 2]
[3, 0, 4, 2, 2]
[3, 0, 4, 2, 3]
[3, 0, 4, 2, 3]
[3, 0, 4, 2, 4]
[3, 0, 4, 2, 4]
[3, 0, 4, 3, 0]
[3, 0, 4, 3, 0]
[3, 0, 4, 3, 1]
[3, 0, 4, 3, 2]
[3, 0, 4, 3, 3]
[3, 0, 4, 3, 3]
[3, 0, 4, 3, 3]
[3, 0, 4, 3, 4]
[3, 0, 4, 3, 4]
[3, 0, 4, 4, 0]
[3, 0, 4, 4, 0]
[3, 0, 4, 4, 1]
[3, 0, 4, 4, 2]
[3, 0, 4, 4, 3]
[3, 0, 4, 4, 3]
[3, 0, 4, 4, 4]
[3, 0, 4, 4, 4]
[3, 0, 4, 4, 4]
[3, 1, 0, 0, 0]
[3, 1, 0, 0, 0]
[3, 1, 0, 0, 0]
[3, 1, 0, 0, 1]
[3, 1, 0, 0, 1]
[3, 1, 0, 0, 2]
[3, 1, 0, 0, 3]
[3, 1, 0, 0, 3]
[3, 1, 0, 0, 4]
[3, 1, 0, 1, 0]
[3, 1, 0, 1, 0]
[3, 1, 0, 1, 1]
[3, 1, 0, 1, 1]
[3, 1, 0, 1, 1]
[3, 1, 0, 1, 2]
[3, 1, 0, 1, 3]
[3, 1, 0, 1, 3]
[3, 1, 0, 1, 4]
[3, 1, 0, 2, 0]
[3, 1, 0, 2, 0]
[3, 1, 0, 2, 1]
[3, 1, 0, 2, 1]
[3, 1, 0, 2, 2]
[3, 1, 0, 2, 2]
[3, 1, 0, 2, 3]
[3, 1, 0, 2, 3]
[3, 1, 0, 2, 4]
[3, 1, 0, 3, 0]
[3, 1, 0, 3, 0]
[3, 1, 0, 3, 1]
[3, 1, 0, 3, 1]
[3, 1, 0, 3, 2]
[3, 1, 0, 3, 3]
[3, 1, 0, 3, 3]
[3, 1, 0, 3, 3]
[3, 1, 0, 3, 4]
[3, 1, 0, 4, 0]
[3, 1, 0, 4, 0]
[3, 1, 0, 4, 1]
[3, 1, 0, 4, 1]
[3, 1, 0, 4, 2]
[3, 1, 0, 4, 3]
[3, 1, 0, 4, 3]
[3, 1, 0, 4, 4]
[3, 1, 0, 4, 4]
[3, 1, 1, 0, 0]
[3, 1, 1, 0, 0]
[3, 1, 1, 0, 1]
[3, 1, 1, 0, 1]
[3, 1, 1, 0, 1]
[3, 1, 1, 0, 2]
[3, 1, 1, 0, 3]
[3, 1, 1, 0, 3]
[3, 1, 1, 0, 4]
[3, 1, 1, 1, 0]
[3, 1, 1, 1, 1]
[3, 1, 1, 1, 1]
[3, 1, 1, 1, 1]
[3, 1, 1, 1, 1]
[3, 1, 1, 1, 2]
[3, 1, 1, 1, 3]
[3, 1, 1, 1, 3]
[3, 1, 1, 1, 4]
[3, 1, 1, 2, 0]
[3, 1, 1, 2, 1]
[3, 1, 1, 2, 1]
[3, 1, 1, 2, 1]
[3, 1, 1, 2, 2]
[3, 1, 1, 2, 2]
[3, 1, 1, 2, 3]
[3, 1, 1, 2, 3]
[3, 1, 1, 2, 4]
[3, 1, 1, 3, 0]
[3, 1, 1, 3, 1]
[3, 1, 1, 3, 1]
[3, 1, 1, 3, 1]
[3, 1, 1, 3, 2]
[3, 1, 1, 3, 3]
[3, 1, 1, 3, 3]
[3, 1, 1, 3, 3]
[3, 1, 1, 3, 4]
[3, 1, 1, 4, 0]
[3, 1, 1, 4, 1]
[3, 1, 1, 4, 1]
[3, 1, 1, 4, 1]
[3, 1, 1, 4, 2]
[3, 1, 1, 4, 3]
[3, 1, 1, 4, 3]
[3, 1, 1, 4, 4]
[3, 1, 1, 4, 4]
[3, 1, 2, 0, 0]
[3, 1, 2, 0, 0]
[3, 1, 2, 0, 1]
[3, 1, 2, 0, 1]
[3, 1, 2, 0, 2]
[3, 1, 2, 0, 2]
[3, 1, 2, 0, 3]
[3, 1, 2, 0, 3]
[3, 1, 2, 0, 4]
[3, 1, 2, 1, 0]
[3, 1, 2, 1, 1]
[3, 1, 2, 1, 1]
[3, 1, 2, 1, 1]
[3, 1, 2, 1, 2]
[3, 1, 2, 1, 2]
[3, 1, 2, 1, 3]
[3, 1, 2, 1, 3]
[3, 1, 2, 1, 4]
[3, 1, 2, 2, 0]
[3, 1, 2, 2, 1]
[3, 1, 2, 2, 1]
[3, 1, 2, 2, 2]
[3, 1, 2, 2, 2]
[3, 1, 2, 2, 2]
[3, 1, 2, 2, 3]
[3, 1, 2, 2, 3]
[3, 1, 2, 2, 4]
[3, 1, 2, 3, 0]
[3, 1, 2, 3, 1]
[3, 1, 2, 3, 1]
[3, 1, 2, 3, 2]
[3, 1, 2, 3, 2]
[3, 1, 2, 3, 3]
[3, 1, 2, 3, 3]
[3, 1, 2, 3, 3]
[3, 1, 2, 3, 4]
[3, 1, 2, 4, 0]
[3, 1, 2, 4, 1]
[3, 1, 2, 4, 1]
[3, 1, 2, 4, 2]
[3, 1, 2, 4, 2]
[3, 1, 2, 4, 3]
[3, 1, 2, 4, 3]
[3, 1, 2, 4, 4]
[3, 1, 2, 4, 4]
[3, 1, 3, 0, 0]
[3, 1, 3, 0, 0]
[3, 1, 3, 0, 1]
[3, 1, 3, 0, 1]
[3, 1, 3, 0, 2]
[3, 1, 3, 0, 3]
[3, 1, 3, 0, 3]
[3, 1, 3, 0, 3]
[3, 1, 3, 0, 4]
[3, 1, 3, 1, 0]
[3, 1, 3, 1, 1]
[3, 1, 3, 1, 1]
[3, 1, 3, 1, 1]
[3, 1, 3, 1, 2]
[3, 1, 3, 1, 3]
[3, 1, 3, 1, 3]
[3, 1, 3, 1, 3]
[3, 1, 3, 1, 4]
[3, 1, 3, 2, 0]
[3, 1, 3, 2, 1]
[3, 1, 3, 2, 1]
[3, 1, 3, 2, 2]
[3, 1, 3, 2, 2]
[3, 1, 3, 2, 3]
[3, 1, 3, 2, 3]
[3, 1, 3, 2, 3]
[3, 1, 3, 2, 4]
[3, 1, 3, 3, 0]
[3, 1, 3, 3, 1]
[3, 1, 3, 3, 1]
[3, 1, 3, 3, 2]
[3, 1, 3, 3, 3]
[3, 1, 3, 3, 3]
[3, 1, 3, 3, 3]
[3, 1, 3, 3, 3]
[3, 1, 3, 3, 4]
[3, 1, 3, 4, 0]
[3, 1, 3, 4, 1]
[3, 1, 3, 4, 1]
[3, 1, 3, 4, 2]
[3, 1, 3, 4, 3]
[3, 1, 3, 4, 3]
[3, 1, 3, 4, 3]
[3, 1, 3, 4, 4]
[3, 1, 3, 4, 4]
[3, 1, 4, 0, 0]
[3, 1, 4, 0, 0]
[3, 1, 4, 0, 1]
[3, 1, 4, 0, 1]
[3, 1, 4, 0, 2]
[3, 1, 4, 0, 3]
[3, 1, 4, 0, 3]
[3, 1, 4, 0, 4]
[3, 1, 4, 0, 4]
[3, 1, 4, 1, 0]
[3, 1, 4, 1, 1]
[3, 1, 4, 1, 1]
[3, 1, 4, 1, 1]
[3, 1, 4, 1, 2]
[3, 1, 4, 1, 3]
[3, 1, 4, 1, 3]
[3, 1, 4, 1, 4]
[3, 1, 4, 1, 4]
[3, 1, 4, 2, 0]
[3, 1, 4, 2, 1]
[3, 1, 4, 2, 1]
[3, 1, 4, 2, 2]
[3, 1, 4, 2, 2]
[3, 1, 4, 2, 3]
[3, 1, 4, 2, 3]
[3, 1, 4, 2, 4]
[3, 1, 4, 2, 4]
[3, 1, 4, 3, 0]
[3, 1, 4, 3, 1]
[3, 1, 4, 3, 1]
[3, 1, 4, 3, 2]
[3, 1, 4, 3, 3]
[3, 1, 4, 3, 3]
[3, 1, 4, 3, 3]
[3, 1, 4, 3, 4]
[3, 1, 4, 3, 4]
[3, 1, 4, 4, 0]
[3, 1, 4, 4, 1]
[3, 1, 4, 4, 1]
[3, 1, 4, 4, 2]
[3, 1, 4, 4, 3]
[3, 1, 4, 4, 3]
[3, 1, 4, 4, 4]
[3, 1, 4, 4, 4]
[3, 1, 4, 4, 4]
[3, 2, 0, 0, 0]
[3, 2, 0, 0, 0]
[3, 2, 0, 0, 0]
[3, 2, 0, 0, 1]
[3, 2, 0, 0, 2]
[3, 2, 0, 0, 2]
[3, 2, 0, 0, 3]
[3, 2, 0, 0, 3]
[3, 2, 0, 0, 4]
[3, 2, 0, 1, 0]
[3, 2, 0, 1, 0]
[3, 2, 0, 1, 1]
[3, 2, 0, 1, 1]
[3, 2, 0, 1, 2]
[3, 2, 0, 1, 2]
[3, 2, 0, 1, 3]
[3, 2, 0, 1, 3]
[3, 2, 0, 1, 4]
[3, 2, 0, 2, 0]
[3, 2, 0, 2, 0]
[3, 2, 0, 2, 1]
[3, 2, 0, 2, 2]
[3, 2, 0, 2, 2]
[3, 2, 0, 2, 2]
[3, 2, 0, 2, 3]
[3, 2, 0, 2, 3]
[3, 2, 0, 2, 4]
[3, 2, 0, 3, 0]
[3, 2, 0, 3, 0]
[3, 2, 0, 3, 1]
[3, 2, 0, 3, 2]
[3, 2, 0, 3, 2]
[3, 2, 0, 3, 3]
[3, 2, 0, 3, 3]
[3, 2, 0, 3, 3]
[3, 2, 0, 3, 4]
[3, 2, 0, 4, 0]
[3, 2, 0, 4, 0]
[3, 2, 0, 4, 1]
[3, 2, 0, 4, 2]
[3, 2, 0, 4, 2]
[3, 2, 0, 4, 3]
[3, 2, 0, 4, 3]
[3, 2, 0, 4, 4]
[3, 2, 0, 4, 4]
[3, 2, 1, 0, 0]
[3, 2, 1, 0, 0]
[3, 2, 1, 0, 1]
[3, 2, 1, 0, 1]
[3, 2, 1, 0, 2]
[3, 2, 1, 0, 2]
[3, 2, 1, 0, 3]
[3, 2, 1, 0, 3]
[3, 2, 1, 0, 4]
[3, 2, 1, 1, 0]
[3, 2, 1, 1, 1]
[3, 2, 1, 1, 1]
[3, 2, 1, 1, 1]
[3, 2, 1, 1, 2]
[3, 2, 1, 1, 2]
[3, 2, 1, 1, 3]
[3, 2, 1, 1, 3]
[3, 2, 1, 1, 4]
[3, 2, 1, 2, 0]
[3, 2, 1, 2, 1]
[3, 2, 1, 2, 1]
[3, 2, 1, 2, 2]
[3, 2, 1, 2, 2]
[3, 2, 1, 2, 2]
[3, 2, 1, 2, 3]
[3, 2, 1, 2, 3]
[3, 2, 1, 2, 4]
[3, 2, 1, 3, 0]
[3, 2, 1, 3, 1]
[3, 2, 1, 3, 1]
[3, 2, 1, 3, 2]
[3, 2, 1, 3, 2]
[3, 2, 1, 3, 3]
[3, 2, 1, 3, 3]
[3, 2, 1, 3, 3]
[3, 2, 1, 3, 4]
[3, 2, 1, 4, 0]
[3, 2, 1, 4, 1]
[3, 2, 1, 4, 1]
[3, 2, 1, 4, 2]
[3, 2, 1, 4, 2]
[3, 2, 1, 4, 3]
[3, 2, 1, 4, 3]
[3, 2, 1, 4, 4]
[3, 2, 1, 4, 4]
[3, 2, 2, 0, 0]
[3, 2, 2, 0, 0]
[3, 2, 2, 0, 1]
[3, 2, 2, 0, 2]
[3, 2, 2, 0, 2]
[3, 2, 2, 0, 2]
[3, 2, 2, 0, 3]
[3, 2, 2, 0, 3]
[3, 2, 2, 0, 4]
[3, 2, 2, 1, 0]
[3, 2, 2, 1, 1]
[3, 2, 2, 1, 1]
[3, 2, 2, 1, 2]
[3, 2, 2, 1, 2]
[3, 2, 2, 1, 2]
[3, 2, 2, 1, 3]
[3, 2, 2, 1, 3]
[3, 2, 2, 1, 4]
[3, 2, 2, 2, 0]
[3, 2, 2, 2, 1]
[3, 2, 2, 2, 2]
[3, 2, 2, 2, 2]
[3, 2, 2, 2, 2]
[3, 2, 2, 2, 2]
[3, 2, 2, 2, 3]
[3, 2, 2, 2, 3]
[3, 2, 2, 2, 4]
[3, 2, 2, 3, 0]
[3, 2, 2, 3, 1]
[3, 2, 2, 3, 2]
[3, 2, 2, 3, 2]
[3, 2, 2, 3, 2]
[3, 2, 2, 3, 3]
[3, 2, 2, 3, 3]
[3, 2, 2, 3, 3]
[3, 2, 2, 3, 4]
[3, 2, 2, 4, 0]
[3, 2, 2, 4, 1]
[3, 2, 2, 4, 2]
[3, 2, 2, 4, 2]
[3, 2, 2, 4, 2]
[3, 2, 2, 4, 3]
[3, 2, 2, 4, 3]
[3, 2, 2, 4, 4]
[3, 2, 2, 4, 4]
[3, 2, 3, 0, 0]
[3, 2, 3, 0, 0]
[3, 2, 3, 0, 1]
[3, 2, 3, 0, 2]
[3, 2, 3, 0, 2]
[3, 2, 3, 0, 3]
[3, 2, 3, 0, 3]
[3, 2, 3, 0, 3]
[3, 2, 3, 0, 4]
[3, 2, 3, 1, 0]
[3, 2, 3, 1, 1]
[3, 2, 3, 1, 1]
[3, 2, 3, 1, 2]
[3, 2, 3, 1, 2]
[3, 2, 3, 1, 3]
[3, 2, 3, 1, 3]
[3, 2, 3, 1, 3]
[3, 2, 3, 1, 4]
[3, 2, 3, 2, 0]
[3, 2, 3, 2, 1]
[3, 2, 3, 2, 2]
[3, 2, 3, 2, 2]
[3, 2, 3, 2, 2]
[3, 2, 3, 2, 3]
[3, 2, 3, 2, 3]
[3, 2, 3, 2, 3]
[3, 2, 3, 2, 4]
[3, 2, 3, 3, 0]
[3, 2, 3, 3, 1]
[3, 2, 3, 3, 2]
[3, 2, 3, 3, 2]
[3, 2, 3, 3, 3]
[3, 2, 3, 3, 3]
[3, 2, 3, 3, 3]
[3, 2, 3, 3, 3]
[3, 2, 3, 3, 4]
[3, 2, 3, 4, 0]
[3, 2, 3, 4, 1]
[3, 2, 3, 4, 2]
[3, 2, 3, 4, 2]
[3, 2, 3, 4, 3]
[3, 2, 3, 4, 3]
[3, 2, 3, 4, 3]
[3, 2, 3, 4, 4]
[3, 2, 3, 4, 4]
[3, 2, 4, 0, 0]
[3, 2, 4, 0, 0]
[3, 2, 4, 0, 1]
[3, 2, 4, 0, 2]
[3, 2, 4, 0, 2]
[3, 2, 4, 0, 3]
[3, 2, 4, 0, 3]
[3, 2, 4, 0, 4]
[3, 2, 4, 0, 4]
[3, 2, 4, 1, 0]
[3, 2, 4, 1, 1]
[3, 2, 4, 1, 1]
[3, 2, 4, 1, 2]
[3, 2, 4, 1, 2]
[3, 2, 4, 1, 3]
[3, 2, 4, 1, 3]
[3, 2, 4, 1, 4]
[3, 2, 4, 1, 4]
[3, 2, 4, 2, 0]
[3, 2, 4, 2, 1]
[3, 2, 4, 2, 2]
[3, 2, 4, 2, 2]
[3, 2, 4, 2, 2]
[3, 2, 4, 2, 3]
[3, 2, 4, 2, 3]
[3, 2, 4, 2, 4]
[3, 2, 4, 2, 4]
[3, 2, 4, 3, 0]
[3, 2, 4, 3, 1]
[3, 2, 4, 3, 2]
[3, 2, 4, 3, 2]
[3, 2, 4, 3, 3]
[3, 2, 4, 3, 3]
[3, 2, 4, 3, 3]
[3, 2, 4, 3, 4]
[3, 2, 4, 3, 4]
[3, 2, 4, 4, 0]
[3, 2, 4, 4, 1]
[3, 2, 4, 4, 2]
[3, 2, 4, 4, 2]
[3, 2, 4, 4, 3]
[3, 2, 4, 4, 3]
[3, 2, 4, 4, 4]
[3, 2, 4, 4, 4]
[3, 2, 4, 4, 4]
[3, 3, 0, 0, 0]
[3, 3, 0, 0, 0]
[3, 3, 0, 0, 0]
[3, 3, 0, 0, 1]
[3, 3, 0, 0, 2]
[3, 3, 0, 0, 3]
[3, 3, 0, 0, 3]
[3, 3, 0, 0, 3]
[3, 3, 0, 0, 4]
[3, 3, 0, 1, 0]
[3, 3, 0, 1, 0]
[3, 3, 0, 1, 1]
[3, 3, 0, 1, 1]
[3, 3, 0, 1, 2]
[3, 3, 0, 1, 3]
[3, 3, 0, 1, 3]
[3, 3, 0, 1, 3]
[3, 3, 0, 1, 4]
[3, 3, 0, 2, 0]
[3, 3, 0, 2, 0]
[3, 3, 0, 2, 1]
[3, 3, 0, 2, 2]
[3, 3, 0, 2, 2]
[3, 3, 0, 2, 3]
[3, 3, 0, 2, 3]
[3, 3, 0, 2, 3]
[3, 3, 0, 2, 4]
[3, 3, 0, 3, 0]
[3, 3, 0, 3, 0]
[3, 3, 0, 3, 1]
[3, 3, 0, 3, 2]
[3, 3, 0, 3, 3]
[3, 3, 0, 3, 3]
[3, 3, 0, 3, 3]
[3, 3, 0, 3, 3]
[3, 3, 0, 3, 4]
[3, 3, 0, 4, 0]
[3, 3, 0, 4, 0]
[3, 3, 0, 4, 1]
[3, 3, 0, 4, 2]
[3, 3, 0, 4, 3]
[3, 3, 0, 4, 3]
[3, 3, 0, 4, 3]
[3, 3, 0, 4, 4]
[3, 3, 0, 4, 4]
[3, 3, 1, 0, 0]
[3, 3, 1, 0, 0]
[3, 3, 1, 0, 1]
[3, 3, 1, 0, 1]
[3, 3, 1, 0, 2]
[3, 3, 1, 0, 3]
[3, 3, 1, 0, 3]
[3, 3, 1, 0, 3]
[3, 3, 1, 0, 4]
[3, 3, 1, 1, 0]
[3, 3, 1, 1, 1]
[3, 3, 1, 1, 1]
[3, 3, 1, 1, 1]
[3, 3, 1, 1, 2]
[3, 3, 1, 1, 3]
[3, 3, 1, 1, 3]
[3, 3, 1, 1, 3]
[3, 3, 1, 1, 4]
[3, 3, 1, 2, 0]
[3, 3, 1, 2, 1]
[3, 3, 1, 2, 1]
[3, 3, 1, 2, 2]
[3, 3, 1, 2, 2]
[3, 3, 1, 2, 3]
[3, 3, 1, 2, 3]
[3, 3, 1, 2, 3]
[3, 3, 1, 2, 4]
[3, 3, 1, 3, 0]
[3, 3, 1, 3, 1]
[3, 3, 1, 3, 1]
[3, 3, 1, 3, 2]
[3, 3, 1, 3, 3]
[3, 3, 1, 3, 3]
[3, 3, 1, 3, 3]
[3, 3, 1, 3, 3]
[3, 3, 1, 3, 4]
[3, 3, 1, 4, 0]
[3, 3, 1, 4, 1]
[3, 3, 1, 4, 1]
[3, 3, 1, 4, 2]
[3, 3, 1, 4, 3]
[3, 3, 1, 4, 3]
[3, 3, 1, 4, 3]
[3, 3, 1, 4, 4]
[3, 3, 1, 4, 4]
[3, 3, 2, 0, 0]
[3, 3, 2, 0, 0]
[3, 3, 2, 0, 1]
[3, 3, 2, 0, 2]
[3, 3, 2, 0, 2]
[3, 3, 2, 0, 3]
[3, 3, 2, 0, 3]
[3, 3, 2, 0, 3]
[3, 3, 2, 0, 4]
[3, 3, 2, 1, 0]
[3, 3, 2, 1, 1]
[3, 3, 2, 1, 1]
[3, 3, 2, 1, 2]
[3, 3, 2, 1, 2]
[3, 3, 2, 1, 3]
[3, 3, 2, 1, 3]
[3, 3, 2, 1, 3]
[3, 3, 2, 1, 4]
[3, 3, 2, 2, 0]
[3, 3, 2, 2, 1]
[3, 3, 2, 2, 2]
[3, 3, 2, 2, 2]
[3, 3, 2, 2, 2]
[3, 3, 2, 2, 3]
[3, 3, 2, 2, 3]
[3, 3, 2, 2, 3]
[3, 3, 2, 2, 4]
[3, 3, 2, 3, 0]
[3, 3, 2, 3, 1]
[3, 3, 2, 3, 2]
[3, 3, 2, 3, 2]
[3, 3, 2, 3, 3]
[3, 3, 2, 3, 3]
[3, 3, 2, 3, 3]
[3, 3, 2, 3, 3]
[3, 3, 2, 3, 4]
[3, 3, 2, 4, 0]
[3, 3, 2, 4, 1]
[3, 3, 2, 4, 2]
[3, 3, 2, 4, 2]
[3, 3, 2, 4, 3]
[3, 3, 2, 4, 3]
[3, 3, 2, 4, 3]
[3, 3, 2, 4, 4]
[3, 3, 2, 4, 4]
[3, 3, 3, 0, 0]
[3, 3, 3, 0, 0]
[3, 3, 3, 0, 1]
[3, 3, 3, 0, 2]
[3, 3, 3, 0, 3]
[3, 3, 3, 0, 3]
[3, 3, 3, 0, 3]
[3, 3, 3, 0, 3]
[3, 3, 3, 0, 4]
[3, 3, 3, 1, 0]
[3, 3, 3, 1, 1]
[3, 3, 3, 1, 1]
[3, 3, 3, 1, 2]
[3, 3, 3, 1, 3]
[3, 3, 3, 1, 3]
[3, 3, 3, 1, 3]
[3, 3, 3, 1, 3]
[3, 3, 3, 1, 4]
[3, 3, 3, 2, 0]
[3, 3, 3, 2, 1]
[3, 3, 3, 2, 2]
[3, 3, 3, 2, 2]
[3, 3, 3, 2, 3]
[3, 3, 3, 2, 3]
[3, 3, 3, 2, 3]
[3, 3, 3, 2, 3]
[3, 3, 3, 2, 4]
[3, 3, 3, 3, 0]
[3, 3, 3, 3, 1]
[3, 3, 3, 3, 2]
[3, 3, 3, 3, 3]
[3, 3, 3, 3, 3]
[3, 3, 3, 3, 3]
[3, 3, 3, 3, 3]
[3, 3, 3, 3, 3]
[3, 3, 3, 3, 4]
[3, 3, 3, 4, 0]
[3, 3, 3, 4, 1]
[3, 3, 3, 4, 2]
[3, 3, 3, 4, 3]
[3, 3, 3, 4, 3]
[3, 3, 3, 4, 3]
[3, 3, 3, 4, 3]
[3, 3, 3, 4, 4]
[3, 3, 3, 4, 4]
[3, 3, 4, 0, 0]
[3, 3, 4, 0, 0]
[3, 3, 4, 0, 1]
[3, 3, 4, 0, 2]
[3, 3, 4, 0, 3]
[3, 3, 4, 0, 3]
[3, 3, 4, 0, 3]
[3, 3, 4, 0, 4]
[3, 3, 4, 0, 4]
[3, 3, 4, 1, 0]
[3, 3, 4, 1, 1]
[3, 3, 4, 1, 1]
[3, 3, 4, 1, 2]
[3, 3, 4, 1, 3]
[3, 3, 4, 1, 3]
[3, 3, 4, 1, 3]
[3, 3, 4, 1, 4]
[3, 3, 4, 1, 4]
[3, 3, 4, 2, 0]
[3, 3, 4, 2, 1]
[3, 3, 4, 2, 2]
[3, 3, 4, 2, 2]
[3, 3, 4, 2, 3]
[3, 3, 4, 2, 3]
[3, 3, 4, 2, 3]
[3, 3, 4, 2, 4]
[3, 3, 4, 2, 4]
[3, 3, 4, 3, 0]
[3, 3, 4, 3, 1]
[3, 3, 4, 3, 2]
[3, 3, 4, 3, 3]
[3, 3, 4, 3, 3]
[3, 3, 4, 3, 3]
[3, 3, 4, 3, 3]
[3, 3, 4, 3, 4]
[3, 3, 4, 3, 4]
[3, 3, 4, 4, 0]
[3, 3, 4, 4, 1]
[3, 3, 4, 4, 2]
[3, 3, 4, 4, 3]
[3, 3, 4, 4, 3]
[3, 3, 4, 4, 3]
[3, 3, 4, 4, 4]
[3, 3, 4, 4, 4]
[3, 3, 4, 4, 4]
[3, 4, 0, 0, 0]
[3, 4, 0, 0, 0]
[3, 4, 0, 0, 0]
[3, 4, 0, 0, 1]
[3, 4, 0, 0, 2]
[3, 4, 0, 0, 3]
[3, 4, 0, 0, 3]
[3, 4, 0, 0, 4]
[3, 4, 0, 0, 4]
[3, 4, 0, 1, 0]
[3, 4, 0, 1, 0]
[3, 4, 0, 1, 1]
[3, 4, 0, 1, 1]
[3, 4, 0, 1, 2]
[3, 4, 0, 1, 3]
[3, 4, 0, 1, 3]
[3, 4, 0, 1, 4]
[3, 4, 0, 1, 4]
[3, 4, 0, 2, 0]
[3, 4, 0, 2, 0]
[3, 4, 0, 2, 1]
[3, 4, 0, 2, 2]
[3, 4, 0, 2, 2]
[3, 4, 0, 2, 3]
[3, 4, 0, 2, 3]
[3, 4, 0, 2, 4]
[3, 4, 0, 2, 4]
[3, 4, 0, 3, 0]
[3, 4, 0, 3, 0]
[3, 4, 0, 3, 1]
[3, 4, 0, 3, 2]
[3, 4, 0, 3, 3]
[3, 4, 0, 3, 3]
[3, 4, 0, 3, 3]
[3, 4, 0, 3, 4]
[3, 4, 0, 3, 4]
[3, 4, 0, 4, 0]
[3, 4, 0, 4, 0]
[3, 4, 0, 4, 1]
[3, 4, 0, 4, 2]
[3, 4, 0, 4, 3]
[3, 4, 0, 4, 3]
[3, 4, 0, 4, 4]
[3, 4, 0, 4, 4]
[3, 4, 0, 4, 4]
[3, 4, 1, 0, 0]
[3, 4, 1, 0, 0]
[3, 4, 1, 0, 1]
[3, 4, 1, 0, 1]
[3, 4, 1, 0, 2]
[3, 4, 1, 0, 3]
[3, 4, 1, 0, 3]
[3, 4, 1, 0, 4]
[3, 4, 1, 0, 4]
[3, 4, 1, 1, 0]
[3, 4, 1, 1, 1]
[3, 4, 1, 1, 1]
[3, 4, 1, 1, 1]
[3, 4, 1, 1, 2]
[3, 4, 1, 1, 3]
[3, 4, 1, 1, 3]
[3, 4, 1, 1, 4]
[3, 4, 1, 1, 4]
[3, 4, 1, 2, 0]
[3, 4, 1, 2, 1]
[3, 4, 1, 2, 1]
[3, 4, 1, 2, 2]
[3, 4, 1, 2, 2]
[3, 4, 1, 2, 3]
[3, 4, 1, 2, 3]
[3, 4, 1, 2, 4]
[3, 4, 1, 2, 4]
[3, 4, 1, 3, 0]
[3, 4, 1, 3, 1]
[3, 4, 1, 3, 1]
[3, 4, 1, 3, 2]
[3, 4, 1, 3, 3]
[3, 4, 1, 3, 3]
[3, 4, 1, 3, 3]
[3, 4, 1, 3, 4]
[3, 4, 1, 3, 4]
[3, 4, 1, 4, 0]
[3, 4, 1, 4, 1]
[3, 4, 1, 4, 1]
[3, 4, 1, 4, 2]
[3, 4, 1, 4, 3]
[3, 4, 1, 4, 3]
[3, 4, 1, 4, 4]
[3, 4, 1, 4, 4]
[3, 4, 1, 4, 4]
[3, 4, 2, 0, 0]
[3, 4, 2, 0, 0]
[3, 4, 2, 0, 1]
[3, 4, 2, 0, 2]
[3, 4, 2, 0, 2]
[3, 4, 2, 0, 3]
[3, 4, 2, 0, 3]
[3, 4, 2, 0, 4]
[3, 4, 2, 0, 4]
[3, 4, 2, 1, 0]
[3, 4, 2, 1, 1]
[3, 4, 2, 1, 1]
[3, 4, 2, 1, 2]
[3, 4, 2, 1, 2]
[3, 4, 2, 1, 3]
[3, 4, 2, 1, 3]
[3, 4, 2, 1, 4]
[3, 4, 2, 1, 4]
[3, 4, 2, 2, 0]
[3, 4, 2, 2, 1]
[3, 4, 2, 2, 2]
[3, 4, 2, 2, 2]
[3, 4, 2, 2, 2]
[3, 4, 2, 2, 3]
[3, 4, 2, 2, 3]
[3, 4, 2, 2, 4]
[3, 4, 2, 2, 4]
[3, 4, 2, 3, 0]
[3, 4, 2, 3, 1]
[3, 4, 2, 3, 2]
[3, 4, 2, 3, 2]
[3, 4, 2, 3, 3]
[3, 4, 2, 3, 3]
[3, 4, 2, 3, 3]
[3, 4, 2, 3, 4]
[3, 4, 2, 3, 4]
[3, 4, 2, 4, 0]
[3, 4, 2, 4, 1]
[3, 4, 2, 4, 2]
[3, 4, 2, 4, 2]
[3, 4, 2, 4, 3]
[3, 4, 2, 4, 3]
[3, 4, 2, 4, 4]
[3, 4, 2, 4, 4]
[3, 4, 2, 4, 4]
[3, 4, 3, 0, 0]
[3, 4, 3, 0, 0]
[3, 4, 3, 0, 1]
[3, 4, 3, 0, 2]
[3, 4, 3, 0, 3]
[3, 4, 3, 0, 3]
[3, 4, 3, 0, 3]
[3, 4, 3, 0, 4]
[3, 4, 3, 0, 4]
[3, 4, 3, 1, 0]
[3, 4, 3, 1, 1]
[3, 4, 3, 1, 1]
[3, 4, 3, 1, 2]
[3, 4, 3, 1, 3]
[3, 4, 3, 1, 3]
[3, 4, 3, 1, 3]
[3, 4, 3, 1, 4]
[3, 4, 3, 1, 4]
[3, 4, 3, 2, 0]
[3, 4, 3, 2, 1]
[3, 4, 3, 2, 2]
[3, 4, 3, 2, 2]
[3, 4, 3, 2, 3]
[3, 4, 3, 2, 3]
[3, 4, 3, 2, 3]
[3, 4, 3, 2, 4]
[3, 4, 3, 2, 4]
[3, 4, 3, 3, 0]
[3, 4, 3, 3, 1]
[3, 4, 3, 3, 2]
[3, 4, 3, 3, 3]
[3, 4, 3, 3, 3]
[3, 4, 3, 3, 3]
[3, 4, 3, 3, 3]
[3, 4, 3, 3, 4]
[3, 4, 3, 3, 4]
[3, 4, 3, 4, 0]
[3, 4, 3, 4, 1]
[3, 4, 3, 4, 2]
[3, 4, 3, 4, 3]
[3, 4, 3, 4, 3]
[3, 4, 3, 4, 3]
[3, 4, 3, 4, 4]
[3, 4, 3, 4, 4]
[3, 4, 3, 4, 4]
[3, 4, 4, 0, 0]
[3, 4, 4, 0, 0]
[3, 4, 4, 0, 1]
[3, 4, 4, 0, 2]
[3, 4, 4, 0, 3]
[3, 4, 4, 0, 3]
[3, 4, 4, 0, 4]
[3, 4, 4, 0, 4]
[3, 4, 4, 0, 4]
[3, 4, 4, 1, 0]
[3, 4, 4, 1, 1]
[3, 4, 4, 1, 1]
[3, 4, 4, 1, 2]
[3, 4, 4, 1, 3]
[3, 4, 4, 1, 3]
[3, 4, 4, 1, 4]
[3, 4, 4, 1, 4]
[3, 4, 4, 1, 4]
[3, 4, 4, 2, 0]
[3, 4, 4, 2, 1]
[3, 4, 4, 2, 2]
[3, 4, 4, 2, 2]
[3, 4, 4, 2, 3]
[3, 4, 4, 2, 3]
[3, 4, 4, 2, 4]
[3, 4, 4, 2, 4]
[3, 4, 4, 2, 4]
[3, 4, 4, 3, 0]
[3, 4, 4, 3, 1]
[3, 4, 4, 3, 2]
[3, 4, 4, 3, 3]
[3, 4, 4, 3, 3]
[3, 4, 4, 3, 3]
[3, 4, 4, 3, 4]
[3, 4, 4, 3, 4]
[3, 4, 4, 3, 4]
[3, 4, 4, 4, 0]
[3, 4, 4, 4, 1]
[3, 4, 4, 4, 2]
[3, 4, 4, 4, 3]
[3, 4, 4, 4, 3]
[3, 4, 4, 4, 4]
[3, 4, 4, 4, 4]
[3, 4, 4, 4, 4]
[3, 4, 4, 4, 4]
[4, 0, 0, 0, 0]
[4, 0, 0, 0, 0]
[4, 0, 0, 0, 0]
[4, 0, 0, 0, 0]
[4, 0, 0, 0, 1]
[4, 0, 0, 0, 2]
[4, 0, 0, 0, 3]
[4, 0, 0, 0, 4]
[4, 0, 0, 0, 4]
[4, 0, 0, 1, 0]
[4, 0, 0, 1, 0]
[4, 0, 0, 1, 0]
[4, 0, 0, 1, 1]
[4, 0, 0, 1, 1]
[4, 0, 0, 1, 2]
[4, 0, 0, 1, 3]
[4, 0, 0, 1, 4]
[4, 0, 0, 1, 4]
[4, 0, 0, 2, 0]
[4, 0, 0, 2, 0]
[4, 0, 0, 2, 0]
[4, 0, 0, 2, 1]
[4, 0, 0, 2, 2]
[4, 0, 0, 2, 2]
[4, 0, 0, 2, 3]
[4, 0, 0, 2, 4]
[4, 0, 0, 2, 4]
[4, 0, 0, 3, 0]
[4, 0, 0, 3, 0]
[4, 0, 0, 3, 0]
[4, 0, 0, 3, 1]
[4, 0, 0, 3, 2]
[4, 0, 0, 3, 3]
[4, 0, 0, 3, 3]
[4, 0, 0, 3, 4]
[4, 0, 0, 3, 4]
[4, 0, 0, 4, 0]
[4, 0, 0, 4, 0]
[4, 0, 0, 4, 0]
[4, 0, 0, 4, 1]
[4, 0, 0, 4, 2]
[4, 0, 0, 4, 3]
[4, 0, 0, 4, 4]
[4, 0, 0, 4, 4]
[4, 0, 0, 4, 4]
[4, 0, 1, 0, 0]
[4, 0, 1, 0, 0]
[4, 0, 1, 0, 0]
[4, 0, 1, 0, 1]
[4, 0, 1, 0, 1]
[4, 0, 1, 0, 2]
[4, 0, 1, 0, 3]
[4, 0, 1, 0, 4]
[4, 0, 1, 0, 4]
[4, 0, 1, 1, 0]
[4, 0, 1, 1, 0]
[4, 0, 1, 1, 1]
[4, 0, 1, 1, 1]
[4, 0, 1, 1, 1]
[4, 0, 1, 1, 2]
[4, 0, 1, 1, 3]
[4, 0, 1, 1, 4]
[4, 0, 1, 1, 4]
[4, 0, 1, 2, 0]
[4, 0, 1, 2, 0]
[4, 0, 1, 2, 1]
[4, 0, 1, 2, 1]
[4, 0, 1, 2, 2]
[4, 0, 1, 2, 2]
[4, 0, 1, 2, 3]
[4, 0, 1, 2, 4]
[4, 0, 1, 2, 4]
[4, 0, 1, 3, 0]
[4, 0, 1, 3, 0]
[4, 0, 1, 3, 1]
[4, 0, 1, 3, 1]
[4, 0, 1, 3, 2]
[4, 0, 1, 3, 3]
[4, 0, 1, 3, 3]
[4, 0, 1, 3, 4]
[4, 0, 1, 3, 4]
[4, 0, 1, 4, 0]
[4, 0, 1, 4, 0]
[4, 0, 1, 4, 1]
[4, 0, 1, 4, 1]
[4, 0, 1, 4, 2]
[4, 0, 1, 4, 3]
[4, 0, 1, 4, 4]
[4, 0, 1, 4, 4]
[4, 0, 1, 4, 4]
[4, 0, 2, 0, 0]
[4, 0, 2, 0, 0]
[4, 0, 2, 0, 0]
[4, 0, 2, 0, 1]
[4, 0, 2, 0, 2]
[4, 0, 2, 0, 2]
[4, 0, 2, 0, 3]
[4, 0, 2, 0, 4]
[4, 0, 2, 0, 4]
[4, 0, 2, 1, 0]
[4, 0, 2, 1, 0]
[4, 0, 2, 1, 1]
[4, 0, 2, 1, 1]
[4, 0, 2, 1, 2]
[4, 0, 2, 1, 2]
[4, 0, 2, 1, 3]
[4, 0, 2, 1, 4]
[4, 0, 2, 1, 4]
[4, 0, 2, 2, 0]
[4, 0, 2, 2, 0]
[4, 0, 2, 2, 1]
[4, 0, 2, 2, 2]
[4, 0, 2, 2, 2]
[4, 0, 2, 2, 2]
[4, 0, 2, 2, 3]
[4, 0, 2, 2, 4]
[4, 0, 2, 2, 4]
[4, 0, 2, 3, 0]
[4, 0, 2, 3, 0]
[4, 0, 2, 3, 1]
[4, 0, 2, 3, 2]
[4, 0, 2, 3, 2]
[4, 0, 2, 3, 3]
[4, 0, 2, 3, 3]
[4, 0, 2, 3, 4]
[4, 0, 2, 3, 4]
[4, 0, 2, 4, 0]
[4, 0, 2, 4, 0]
[4, 0, 2, 4, 1]
[4, 0, 2, 4, 2]
[4, 0, 2, 4, 2]
[4, 0, 2, 4, 3]
[4, 0, 2, 4, 4]
[4, 0, 2, 4, 4]
[4, 0, 2, 4, 4]
[4, 0, 3, 0, 0]
[4, 0, 3, 0, 0]
[4, 0, 3, 0, 0]
[4, 0, 3, 0, 1]
[4, 0, 3, 0, 2]
[4, 0, 3, 0, 3]
[4, 0, 3, 0, 3]
[4, 0, 3, 0, 4]
[4, 0, 3, 0, 4]
[4, 0, 3, 1, 0]
[4, 0, 3, 1, 0]
[4, 0, 3, 1, 1]
[4, 0, 3, 1, 1]
[4, 0, 3, 1, 2]
[4, 0, 3, 1, 3]
[4, 0, 3, 1, 3]
[4, 0, 3, 1, 4]
[4, 0, 3, 1, 4]
[4, 0, 3, 2, 0]
[4, 0, 3, 2, 0]
[4, 0, 3, 2, 1]
[4, 0, 3, 2, 2]
[4, 0, 3, 2, 2]
[4, 0, 3, 2, 3]
[4, 0, 3, 2, 3]
[4, 0, 3, 2, 4]
[4, 0, 3, 2, 4]
[4, 0, 3, 3, 0]
[4, 0, 3, 3, 0]
[4, 0, 3, 3, 1]
[4, 0, 3, 3, 2]
[4, 0, 3, 3, 3]
[4, 0, 3, 3, 3]
[4, 0, 3, 3, 3]
[4, 0, 3, 3, 4]
[4, 0, 3, 3, 4]
[4, 0, 3, 4, 0]
[4, 0, 3, 4, 0]
[4, 0, 3, 4, 1]
[4, 0, 3, 4, 2]
[4, 0, 3, 4, 3]
[4, 0, 3, 4, 3]
[4, 0, 3, 4, 4]
[4, 0, 3, 4, 4]
[4, 0, 3, 4, 4]
[4, 0, 4, 0, 0]
[4, 0, 4, 0, 0]
[4, 0, 4, 0, 0]
[4, 0, 4, 0, 1]
[4, 0, 4, 0, 2]
[4, 0, 4, 0, 3]
[4, 0, 4, 0, 4]
[4, 0, 4, 0, 4]
[4, 0, 4, 0, 4]
[4, 0, 4, 1, 0]
[4, 0, 4, 1, 0]
[4, 0, 4, 1, 1]
[4, 0, 4, 1, 1]
[4, 0, 4, 1, 2]
[4, 0, 4, 1, 3]
[4, 0, 4, 1, 4]
[4, 0, 4, 1, 4]
[4, 0, 4, 1, 4]
[4, 0, 4, 2, 0]
[4, 0, 4, 2, 0]
[4, 0, 4, 2, 1]
[4, 0, 4, 2, 2]
[4, 0, 4, 2, 2]
[4, 0, 4, 2, 3]
[4, 0, 4, 2, 4]
[4, 0, 4, 2, 4]
[4, 0, 4, 2, 4]
[4, 0, 4, 3, 0]
[4, 0, 4, 3, 0]
[4, 0, 4, 3, 1]
[4, 0, 4, 3, 2]
[4, 0, 4, 3, 3]
[4, 0, 4, 3, 3]
[4, 0, 4, 3, 4]
[4, 0, 4, 3, 4]
[4, 0, 4, 3, 4]
[4, 0, 4, 4, 0]
[4, 0, 4, 4, 0]
[4, 0, 4, 4, 1]
[4, 0, 4, 4, 2]
[4, 0, 4, 4, 3]
[4, 0, 4, 4, 4]
[4, 0, 4, 4, 4]
[4, 0, 4, 4, 4]
[4, 0, 4, 4, 4]
[4, 1, 0, 0, 0]
[4, 1, 0, 0, 0]
[4, 1, 0, 0, 0]
[4, 1, 0, 0, 1]
[4, 1, 0, 0, 1]
[4, 1, 0, 0, 2]
[4, 1, 0, 0, 3]
[4, 1, 0, 0, 4]
[4, 1, 0, 0, 4]
[4, 1, 0, 1, 0]
[4, 1, 0, 1, 0]
[4, 1, 0, 1, 1]
[4, 1, 0, 1, 1]
[4, 1, 0, 1, 1]
[4, 1, 0, 1, 2]
[4, 1, 0, 1, 3]
[4, 1, 0, 1, 4]
[4, 1, 0, 1, 4]
[4, 1, 0, 2, 0]
[4, 1, 0, 2, 0]
[4, 1, 0, 2, 1]
[4, 1, 0, 2, 1]
[4, 1, 0, 2, 2]
[4, 1, 0, 2, 2]
[4, 1, 0, 2, 3]
[4, 1, 0, 2, 4]
[4, 1, 0, 2, 4]
[4, 1, 0, 3, 0]
[4, 1, 0, 3, 0]
[4, 1, 0, 3, 1]
[4, 1, 0, 3, 1]
[4, 1, 0, 3, 2]
[4, 1, 0, 3, 3]
[4, 1, 0, 3, 3]
[4, 1, 0, 3, 4]
[4, 1, 0, 3, 4]
[4, 1, 0, 4, 0]
[4, 1, 0, 4, 0]
[4, 1, 0, 4, 1]
[4, 1, 0, 4, 1]
[4, 1, 0, 4, 2]
[4, 1, 0, 4, 3]
[4, 1, 0, 4, 4]
[4, 1, 0, 4, 4]
[4, 1, 0, 4, 4]
[4, 1, 1, 0, 0]
[4, 1, 1, 0, 0]
[4, 1, 1, 0, 1]
[4, 1, 1, 0, 1]
[4, 1, 1, 0, 1]
[4, 1, 1, 0, 2]
[4, 1, 1, 0, 3]
[4, 1, 1, 0, 4]
[4, 1, 1, 0, 4]
[4, 1, 1, 1, 0]
[4, 1, 1, 1, 1]
[4, 1, 1, 1, 1]
[4, 1, 1, 1, 1]
[4, 1, 1, 1, 1]
[4, 1, 1, 1, 2]
[4, 1, 1, 1, 3]
[4, 1, 1, 1, 4]
[4, 1, 1, 1, 4]
[4, 1, 1, 2, 0]
[4, 1, 1, 2, 1]
[4, 1, 1, 2, 1]
[4, 1, 1, 2, 1]
[4, 1, 1, 2, 2]
[4, 1, 1, 2, 2]
[4, 1, 1, 2, 3]
[4, 1, 1, 2, 4]
[4, 1, 1, 2, 4]
[4, 1, 1, 3, 0]
[4, 1, 1, 3, 1]
[4, 1, 1, 3, 1]
[4, 1, 1, 3, 1]
[4, 1, 1, 3, 2]
[4, 1, 1, 3, 3]
[4, 1, 1, 3, 3]
[4, 1, 1, 3, 4]
[4, 1, 1, 3, 4]
[4, 1, 1, 4, 0]
[4, 1, 1, 4, 1]
[4, 1, 1, 4, 1]
[4, 1, 1, 4, 1]
[4, 1, 1, 4, 2]
[4, 1, 1, 4, 3]
[4, 1, 1, 4, 4]
[4, 1, 1, 4, 4]
[4, 1, 1, 4, 4]
[4, 1, 2, 0, 0]
[4, 1, 2, 0, 0]
[4, 1, 2, 0, 1]
[4, 1, 2, 0, 1]
[4, 1, 2, 0, 2]
[4, 1, 2, 0, 2]
[4, 1, 2, 0, 3]
[4, 1, 2, 0, 4]
[4, 1, 2, 0, 4]
[4, 1, 2, 1, 0]
[4, 1, 2, 1, 1]
[4, 1, 2, 1, 1]
[4, 1, 2, 1, 1]
[4, 1, 2, 1, 2]
[4, 1, 2, 1, 2]
[4, 1, 2, 1, 3]
[4, 1, 2, 1, 4]
[4, 1, 2, 1, 4]
[4, 1, 2, 2, 0]
[4, 1, 2, 2, 1]
[4, 1, 2, 2, 1]
[4, 1, 2, 2, 2]
[4, 1, 2, 2, 2]
[4, 1, 2, 2, 2]
[4, 1, 2, 2, 3]
[4, 1, 2, 2, 4]
[4, 1, 2, 2, 4]
[4, 1, 2, 3, 0]
[4, 1, 2, 3, 1]
[4, 1, 2, 3, 1]
[4, 1, 2, 3, 2]
[4, 1, 2, 3, 2]
[4, 1, 2, 3, 3]
[4, 1, 2, 3, 3]
[4, 1, 2, 3, 4]
[4, 1, 2, 3, 4]
[4, 1, 2, 4, 0]
[4, 1, 2, 4, 1]
[4, 1, 2, 4, 1]
[4, 1, 2, 4, 2]
[4, 1, 2, 4, 2]
[4, 1, 2, 4, 3]
[4, 1, 2, 4, 4]
[4, 1, 2, 4, 4]
[4, 1, 2, 4, 4]
[4, 1, 3, 0, 0]
[4, 1, 3, 0, 0]
[4, 1, 3, 0, 1]
[4, 1, 3, 0, 1]
[4, 1, 3, 0, 2]
[4, 1, 3, 0, 3]
[4, 1, 3, 0, 3]
[4, 1, 3, 0, 4]
[4, 1, 3, 0, 4]
[4, 1, 3, 1, 0]
[4, 1, 3, 1, 1]
[4, 1, 3, 1, 1]
[4, 1, 3, 1, 1]
[4, 1, 3, 1, 2]
[4, 1, 3, 1, 3]
[4, 1, 3, 1, 3]
[4, 1, 3, 1, 4]
[4, 1, 3, 1, 4]
[4, 1, 3, 2, 0]
[4, 1, 3, 2, 1]
[4, 1, 3, 2, 1]
[4, 1, 3, 2, 2]
[4, 1, 3, 2, 2]
[4, 1, 3, 2, 3]
[4, 1, 3, 2, 3]
[4, 1, 3, 2, 4]
[4, 1, 3, 2, 4]
[4, 1, 3, 3, 0]
[4, 1, 3, 3, 1]
[4, 1, 3, 3, 1]
[4, 1, 3, 3, 2]
[4, 1, 3, 3, 3]
[4, 1, 3, 3, 3]
[4, 1, 3, 3, 3]
[4, 1, 3, 3, 4]
[4, 1, 3, 3, 4]
[4, 1, 3, 4, 0]
[4, 1, 3, 4, 1]
[4, 1, 3, 4, 1]
[4, 1, 3, 4, 2]
[4, 1, 3, 4, 3]
[4, 1, 3, 4, 3]
[4, 1, 3, 4, 4]
[4, 1, 3, 4, 4]
[4, 1, 3, 4, 4]
[4, 1, 4, 0, 0]
[4, 1, 4, 0, 0]
[4, 1, 4, 0, 1]
[4, 1, 4, 0, 1]
[4, 1, 4, 0, 2]
[4, 1, 4, 0, 3]
[4, 1, 4, 0, 4]
[4, 1, 4, 0, 4]
[4, 1, 4, 0, 4]
[4, 1, 4, 1, 0]
[4, 1, 4, 1, 1]
[4, 1, 4, 1, 1]
[4, 1, 4, 1, 1]
[4, 1, 4, 1, 2]
[4, 1, 4, 1, 3]
[4, 1, 4, 1, 4]
[4, 1, 4, 1, 4]
[4, 1, 4, 1, 4]
[4, 1, 4, 2, 0]
[4, 1, 4, 2, 1]
[4, 1, 4, 2, 1]
[4, 1, 4, 2, 2]
[4, 1, 4, 2, 2]
[4, 1, 4, 2, 3]
[4, 1, 4, 2, 4]
[4, 1, 4, 2, 4]
[4, 1, 4, 2, 4]
[4, 1, 4, 3, 0]
[4, 1, 4, 3, 1]
[4, 1, 4, 3, 1]
[4, 1, 4, 3, 2]
[4, 1, 4, 3, 3]
[4, 1, 4, 3, 3]
[4, 1, 4, 3, 4]
[4, 1, 4, 3, 4]
[4, 1, 4, 3, 4]
[4, 1, 4, 4, 0]
[4, 1, 4, 4, 1]
[4, 1, 4, 4, 1]
[4, 1, 4, 4, 2]
[4, 1, 4, 4, 3]
[4, 1, 4, 4, 4]
[4, 1, 4, 4, 4]
[4, 1, 4, 4, 4]
[4, 1, 4, 4, 4]
[4, 2, 0, 0, 0]
[4, 2, 0, 0, 0]
[4, 2, 0, 0, 0]
[4, 2, 0, 0, 1]
[4, 2, 0, 0, 2]
[4, 2, 0, 0, 2]
[4, 2, 0, 0, 3]
[4, 2, 0, 0, 4]
[4, 2, 0, 0, 4]
[4, 2, 0, 1, 0]
[4, 2, 0, 1, 0]
[4, 2, 0, 1, 1]
[4, 2, 0, 1, 1]
[4, 2, 0, 1, 2]
[4, 2, 0, 1, 2]
[4, 2, 0, 1, 3]
[4, 2, 0, 1, 4]
[4, 2, 0, 1, 4]
[4, 2, 0, 2, 0]
[4, 2, 0, 2, 0]
[4, 2, 0, 2, 1]
[4, 2, 0, 2, 2]
[4, 2, 0, 2, 2]
[4, 2, 0, 2, 2]
[4, 2, 0, 2, 3]
[4, 2, 0, 2, 4]
[4, 2, 0, 2, 4]
[4, 2, 0, 3, 0]
[4, 2, 0, 3, 0]
[4, 2, 0, 3, 1]
[4, 2, 0, 3, 2]
[4, 2, 0, 3, 2]
[4, 2, 0, 3, 3]
[4, 2, 0, 3, 3]
[4, 2, 0, 3, 4]
[4, 2, 0, 3, 4]
[4, 2, 0, 4, 0]
[4, 2, 0, 4, 0]
[4, 2, 0, 4, 1]
[4, 2, 0, 4, 2]
[4, 2, 0, 4, 2]
[4, 2, 0, 4, 3]
[4, 2, 0, 4, 4]
[4, 2, 0, 4, 4]
[4, 2, 0, 4, 4]
[4, 2, 1, 0, 0]
[4, 2, 1, 0, 0]
[4, 2, 1, 0, 1]
[4, 2, 1, 0, 1]
[4, 2, 1, 0, 2]
[4, 2, 1, 0, 2]
[4, 2, 1, 0, 3]
[4, 2, 1, 0, 4]
[4, 2, 1, 0, 4]
[4, 2, 1, 1, 0]
[4, 2, 1, 1, 1]
[4, 2, 1, 1, 1]
[4, 2, 1, 1, 1]
[4, 2, 1, 1, 2]
[4, 2, 1, 1, 2]
[4, 2, 1, 1, 3]
[4, 2, 1, 1, 4]
[4, 2, 1, 1, 4]
[4, 2, 1, 2, 0]
[4, 2, 1, 2, 1]
[4, 2, 1, 2, 1]
[4, 2, 1, 2, 2]
[4, 2, 1, 2, 2]
[4, 2, 1, 2, 2]
[4, 2, 1, 2, 3]
[4, 2, 1, 2, 4]
[4, 2, 1, 2, 4]
[4, 2, 1, 3, 0]
[4, 2, 1, 3, 1]
[4, 2, 1, 3, 1]
[4, 2, 1, 3, 2]
[4, 2, 1, 3, 2]
[4, 2, 1, 3, 3]
[4, 2, 1, 3, 3]
[4, 2, 1, 3, 4]
[4, 2, 1, 3, 4]
[4, 2, 1, 4, 0]
[4, 2, 1, 4, 1]
[4, 2, 1, 4, 1]
[4, 2, 1, 4, 2]
[4, 2, 1, 4, 2]
[4, 2, 1, 4, 3]
[4, 2, 1, 4, 4]
[4, 2, 1, 4, 4]
[4, 2, 1, 4, 4]
[4, 2, 2, 0, 0]
[4, 2, 2, 0, 0]
[4, 2, 2, 0, 1]
[4, 2, 2, 0, 2]
[4, 2, 2, 0, 2]
[4, 2, 2, 0, 2]
[4, 2, 2, 0, 3]
[4, 2, 2, 0, 4]
[4, 2, 2, 0, 4]
[4, 2, 2, 1, 0]
[4, 2, 2, 1, 1]
[4, 2, 2, 1, 1]
[4, 2, 2, 1, 2]
[4, 2, 2, 1, 2]
[4, 2, 2, 1, 2]
[4, 2, 2, 1, 3]
[4, 2, 2, 1, 4]
[4, 2, 2, 1, 4]
[4, 2, 2, 2, 0]
[4, 2, 2, 2, 1]
[4, 2, 2, 2, 2]
[4, 2, 2, 2, 2]
[4, 2, 2, 2, 2]
[4, 2, 2, 2, 2]
[4, 2, 2, 2, 3]
[4, 2, 2, 2, 4]
[4, 2, 2, 2, 4]
[4, 2, 2, 3, 0]
[4, 2, 2, 3, 1]
[4, 2, 2, 3, 2]
[4, 2, 2, 3, 2]
[4, 2, 2, 3, 2]
[4, 2, 2, 3, 3]
[4, 2, 2, 3, 3]
[4, 2, 2, 3, 4]
[4, 2, 2, 3, 4]
[4, 2, 2, 4, 0]
[4, 2, 2, 4, 1]
[4, 2, 2, 4, 2]
[4, 2, 2, 4, 2]
[4, 2, 2, 4, 2]
[4, 2, 2, 4, 3]
[4, 2, 2, 4, 4]
[4, 2, 2, 4, 4]
[4, 2, 2, 4, 4]
[4, 2, 3, 0, 0]
[4, 2, 3, 0, 0]
[4, 2, 3, 0, 1]
[4, 2, 3, 0, 2]
[4, 2, 3, 0, 2]
[4, 2, 3, 0, 3]
[4, 2, 3, 0, 3]
[4, 2, 3, 0, 4]
[4, 2, 3, 0, 4]
[4, 2, 3, 1, 0]
[4, 2, 3, 1, 1]
[4, 2, 3, 1, 1]
[4, 2, 3, 1, 2]
[4, 2, 3, 1, 2]
[4, 2, 3, 1, 3]
[4, 2, 3, 1, 3]
[4, 2, 3, 1, 4]
[4, 2, 3, 1, 4]
[4, 2, 3, 2, 0]
[4, 2, 3, 2, 1]
[4, 2, 3, 2, 2]
[4, 2, 3, 2, 2]
[4, 2, 3, 2, 2]
[4, 2, 3, 2, 3]
[4, 2, 3, 2, 3]
[4, 2, 3, 2, 4]
[4, 2, 3, 2, 4]
[4, 2, 3, 3, 0]
[4, 2, 3, 3, 1]
[4, 2, 3, 3, 2]
[4, 2, 3, 3, 2]
[4, 2, 3, 3, 3]
[4, 2, 3, 3, 3]
[4, 2, 3, 3, 3]
[4, 2, 3, 3, 4]
[4, 2, 3, 3, 4]
[4, 2, 3, 4, 0]
[4, 2, 3, 4, 1]
[4, 2, 3, 4, 2]
[4, 2, 3, 4, 2]
[4, 2, 3, 4, 3]
[4, 2, 3, 4, 3]
[4, 2, 3, 4, 4]
[4, 2, 3, 4, 4]
[4, 2, 3, 4, 4]
[4, 2, 4, 0, 0]
[4, 2, 4, 0, 0]
[4, 2, 4, 0, 1]
[4, 2, 4, 0, 2]
[4, 2, 4, 0, 2]
[4, 2, 4, 0, 3]
[4, 2, 4, 0, 4]
[4, 2, 4, 0, 4]
[4, 2, 4, 0, 4]
[4, 2, 4, 1, 0]
[4, 2, 4, 1, 1]
[4, 2, 4, 1, 1]
[4, 2, 4, 1, 2]
[4, 2, 4, 1, 2]
[4, 2, 4, 1, 3]
[4, 2, 4, 1, 4]
[4, 2, 4, 1, 4]
[4, 2, 4, 1, 4]
[4, 2, 4, 2, 0]
[4, 2, 4, 2, 1]
[4, 2, 4, 2, 2]
[4, 2, 4, 2, 2]
[4, 2, 4, 2, 2]
[4, 2, 4, 2, 3]
[4, 2, 4, 2, 4]
[4, 2, 4, 2, 4]
[4, 2, 4, 2, 4]
[4, 2, 4, 3, 0]
[4, 2, 4, 3, 1]
[4, 2, 4, 3, 2]
[4, 2, 4, 3, 2]
[4, 2, 4, 3, 3]
[4, 2, 4, 3, 3]
[4, 2, 4, 3, 4]
[4, 2, 4, 3, 4]
[4, 2, 4, 3, 4]
[4, 2, 4, 4, 0]
[4, 2, 4, 4, 1]
[4, 2, 4, 4, 2]
[4, 2, 4, 4, 2]
[4, 2, 4, 4, 3]
[4, 2, 4, 4, 4]
[4, 2, 4, 4, 4]
[4, 2, 4, 4, 4]
[4, 2, 4, 4, 4]
[4, 3, 0, 0, 0]
[4, 3, 0, 0, 0]
[4, 3, 0, 0, 0]
[4, 3, 0, 0, 1]
[4, 3, 0, 0, 2]
[4, 3, 0, 0, 3]
[4, 3, 0, 0, 3]
[4, 3, 0, 0, 4]
[4, 3, 0, 0, 4]
[4, 3, 0, 1, 0]
[4, 3, 0, 1, 0]
[4, 3, 0, 1, 1]
[4, 3, 0, 1, 1]
[4, 3, 0, 1, 2]
[4, 3, 0, 1, 3]
[4, 3, 0, 1, 3]
[4, 3, 0, 1, 4]
[4, 3, 0, 1, 4]
[4, 3, 0, 2, 0]
[4, 3, 0, 2, 0]
[4, 3, 0, 2, 1]
[4, 3, 0, 2, 2]
[4, 3, 0, 2, 2]
[4, 3, 0, 2, 3]
[4, 3, 0, 2, 3]
[4, 3, 0, 2, 4]
[4, 3, 0, 2, 4]
[4, 3, 0, 3, 0]
[4, 3, 0, 3, 0]
[4, 3, 0, 3, 1]
[4, 3, 0, 3, 2]
[4, 3, 0, 3, 3]
[4, 3, 0, 3, 3]
[4, 3, 0, 3, 3]
[4, 3, 0, 3, 4]
[4, 3, 0, 3, 4]
[4, 3, 0, 4, 0]
[4, 3, 0, 4, 0]
[4, 3, 0, 4, 1]
[4, 3, 0, 4, 2]
[4, 3, 0, 4, 3]
[4, 3, 0, 4, 3]
[4, 3, 0, 4, 4]
[4, 3, 0, 4, 4]
[4, 3, 0, 4, 4]
[4, 3, 1, 0, 0]
[4, 3, 1, 0, 0]
[4, 3, 1, 0, 1]
[4, 3, 1, 0, 1]
[4, 3, 1, 0, 2]
[4, 3, 1, 0, 3]
[4, 3, 1, 0, 3]
[4, 3, 1, 0, 4]
[4, 3, 1, 0, 4]
[4, 3, 1, 1, 0]
[4, 3, 1, 1, 1]
[4, 3, 1, 1, 1]
[4, 3, 1, 1, 1]
[4, 3, 1, 1, 2]
[4, 3, 1, 1, 3]
[4, 3, 1, 1, 3]
[4, 3, 1, 1, 4]
[4, 3, 1, 1, 4]
[4, 3, 1, 2, 0]
[4, 3, 1, 2, 1]
[4, 3, 1, 2, 1]
[4, 3, 1, 2, 2]
[4, 3, 1, 2, 2]
[4, 3, 1, 2, 3]
[4, 3, 1, 2, 3]
[4, 3, 1, 2, 4]
[4, 3, 1, 2, 4]
[4, 3, 1, 3, 0]
[4, 3, 1, 3, 1]
[4, 3, 1, 3, 1]
[4, 3, 1, 3, 2]
[4, 3, 1, 3, 3]
[4, 3, 1, 3, 3]
[4, 3, 1, 3, 3]
[4, 3, 1, 3, 4]
[4, 3, 1, 3, 4]
[4, 3, 1, 4, 0]
[4, 3, 1, 4, 1]
[4, 3, 1, 4, 1]
[4, 3, 1, 4, 2]
[4, 3, 1, 4, 3]
[4, 3, 1, 4, 3]
[4, 3, 1, 4, 4]
[4, 3, 1, 4, 4]
[4, 3, 1, 4, 4]
[4, 3, 2, 0, 0]
[4, 3, 2, 0, 0]
[4, 3, 2, 0, 1]
[4, 3, 2, 0, 2]
[4, 3, 2, 0, 2]
[4, 3, 2, 0, 3]
[4, 3, 2, 0, 3]
[4, 3, 2, 0, 4]
[4, 3, 2, 0, 4]
[4, 3, 2, 1, 0]
[4, 3, 2, 1, 1]
[4, 3, 2, 1, 1]
[4, 3, 2, 1, 2]
[4, 3, 2, 1, 2]
[4, 3, 2, 1, 3]
[4, 3, 2, 1, 3]
[4, 3, 2, 1, 4]
[4, 3, 2, 1, 4]
[4, 3, 2, 2, 0]
[4, 3, 2, 2, 1]
[4, 3, 2, 2, 2]
[4, 3, 2, 2, 2]
[4, 3, 2, 2, 2]
[4, 3, 2, 2, 3]
[4, 3, 2, 2, 3]
[4, 3, 2, 2, 4]
[4, 3, 2, 2, 4]
[4, 3, 2, 3, 0]
[4, 3, 2, 3, 1]
[4, 3, 2, 3, 2]
[4, 3, 2, 3, 2]
[4, 3, 2, 3, 3]
[4, 3, 2, 3, 3]
[4, 3, 2, 3, 3]
[4, 3, 2, 3, 4]
[4, 3, 2, 3, 4]
[4, 3, 2, 4, 0]
[4, 3, 2, 4, 1]
[4, 3, 2, 4, 2]
[4, 3, 2, 4, 2]
[4, 3, 2, 4, 3]
[4, 3, 2, 4, 3]
[4, 3, 2, 4, 4]
[4, 3, 2, 4, 4]
[4, 3, 2, 4, 4]
[4, 3, 3, 0, 0]
[4, 3, 3, 0, 0]
[4, 3, 3, 0, 1]
[4, 3, 3, 0, 2]
[4, 3, 3, 0, 3]
[4, 3, 3, 0, 3]
[4, 3, 3, 0, 3]
[4, 3, 3, 0, 4]
[4, 3, 3, 0, 4]
[4, 3, 3, 1, 0]
[4, 3, 3, 1, 1]
[4, 3, 3, 1, 1]
[4, 3, 3, 1, 2]
[4, 3, 3, 1, 3]
[4, 3, 3, 1, 3]
[4, 3, 3, 1, 3]
[4, 3, 3, 1, 4]
[4, 3, 3, 1, 4]
[4, 3, 3, 2, 0]
[4, 3, 3, 2, 1]
[4, 3, 3, 2, 2]
[4, 3, 3, 2, 2]
[4, 3, 3, 2, 3]
[4, 3, 3, 2, 3]
[4, 3, 3, 2, 3]
[4, 3, 3, 2, 4]
[4, 3, 3, 2, 4]
[4, 3, 3, 3, 0]
[4, 3, 3, 3, 1]
[4, 3, 3, 3, 2]
[4, 3, 3, 3, 3]
[4, 3, 3, 3, 3]
[4, 3, 3, 3, 3]
[4, 3, 3, 3, 3]
[4, 3, 3, 3, 4]
[4, 3, 3, 3, 4]
[4, 3, 3, 4, 0]
[4, 3, 3, 4, 1]
[4, 3, 3, 4, 2]
[4, 3, 3, 4, 3]
[4, 3, 3, 4, 3]
[4, 3, 3, 4, 3]
[4, 3, 3, 4, 4]
[4, 3, 3, 4, 4]
[4, 3, 3, 4, 4]
[4, 3, 4, 0, 0]
[4, 3, 4, 0, 0]
[4, 3, 4, 0, 1]
[4, 3, 4, 0, 2]
[4, 3, 4, 0, 3]
[4, 3, 4, 0, 3]
[4, 3, 4, 0, 4]
[4, 3, 4, 0, 4]
[4, 3, 4, 0, 4]
[4, 3, 4, 1, 0]
[4, 3, 4, 1, 1]
[4, 3, 4, 1, 1]
[4, 3, 4, 1, 2]
[4, 3, 4, 1, 3]
[4, 3, 4, 1, 3]
[4, 3, 4, 1, 4]
[4, 3, 4, 1, 4]
[4, 3, 4, 1, 4]
[4, 3, 4, 2, 0]
[4, 3, 4, 2, 1]
[4, 3, 4, 2, 2]
[4, 3, 4, 2, 2]
[4, 3, 4, 2, 3]
[4, 3, 4, 2, 3]
[4, 3, 4, 2, 4]
[4, 3, 4, 2, 4]
[4, 3, 4, 2, 4]
[4, 3, 4, 3, 0]
[4, 3, 4, 3, 1]
[4, 3, 4, 3, 2]
[4, 3, 4, 3, 3]
[4, 3, 4, 3, 3]
[4, 3, 4, 3, 3]
[4, 3, 4, 3, 4]
[4, 3, 4, 3, 4]
[4, 3, 4, 3, 4]
[4, 3, 4, 4, 0]
[4, 3, 4, 4, 1]
[4, 3, 4, 4, 2]
[4, 3, 4, 4, 3]
[4, 3, 4, 4, 3]
[4, 3, 4, 4, 4]
[4, 3, 4, 4, 4]
[4, 3, 4, 4, 4]
[4, 3, 4, 4, 4]
[4, 4, 0, 0, 0]
[4, 4, 0, 0, 0]
[4, 4, 0, 0, 0]
[4, 4, 0, 0, 1]
[4, 4, 0, 0, 2]
[4, 4, 0, 0, 3]
[4, 4, 0, 0, 4]
[4, 4, 0, 0, 4]
[4, 4, 0, 0, 4]
[4, 4, 0, 1, 0]
[4, 4, 0, 1, 0]
[4, 4, 0, 1, 1]
[4, 4, 0, 1, 1]
[4, 4, 0, 1, 2]
[4, 4, 0, 1, 3]
[4, 4, 0, 1, 4]
[4, 4, 0, 1, 4]
[4, 4, 0, 1, 4]
[4, 4, 0, 2, 0]
[4, 4, 0, 2, 0]
[4, 4, 0, 2, 1]
[4, 4, 0, 2, 2]
[4, 4, 0, 2, 2]
[4, 4, 0, 2, 3]
[4, 4, 0, 2, 4]
[4, 4, 0, 2, 4]
[4, 4, 0, 2, 4]
[4, 4, 0, 3, 0]
[4, 4, 0, 3, 0]
[4, 4, 0, 3, 1]
[4, 4, 0, 3, 2]
[4, 4, 0, 3, 3]
[4, 4, 0, 3, 3]
[4, 4, 0, 3, 4]
[4, 4, 0, 3, 4]
[4, 4, 0, 3, 4]
[4, 4, 0, 4, 0]
[4, 4, 0, 4, 0]
[4, 4, 0, 4, 1]
[4, 4, 0, 4, 2]
[4, 4, 0, 4, 3]
[4, 4, 0, 4, 4]
[4, 4, 0, 4, 4]
[4, 4, 0, 4, 4]
[4, 4, 0, 4, 4]
[4, 4, 1, 0, 0]
[4, 4, 1, 0, 0]
[4, 4, 1, 0, 1]
[4, 4, 1, 0, 1]
[4, 4, 1, 0, 2]
[4, 4, 1, 0, 3]
[4, 4, 1, 0, 4]
[4, 4, 1, 0, 4]
[4, 4, 1, 0, 4]
[4, 4, 1, 1, 0]
[4, 4, 1, 1, 1]
[4, 4, 1, 1, 1]
[4, 4, 1, 1, 1]
[4, 4, 1, 1, 2]
[4, 4, 1, 1, 3]
[4, 4, 1, 1, 4]
[4, 4, 1, 1, 4]
[4, 4, 1, 1, 4]
[4, 4, 1, 2, 0]
[4, 4, 1, 2, 1]
[4, 4, 1, 2, 1]
[4, 4, 1, 2, 2]
[4, 4, 1, 2, 2]
[4, 4, 1, 2, 3]
[4, 4, 1, 2, 4]
[4, 4, 1, 2, 4]
[4, 4, 1, 2, 4]
[4, 4, 1, 3, 0]
[4, 4, 1, 3, 1]
[4, 4, 1, 3, 1]
[4, 4, 1, 3, 2]
[4, 4, 1, 3, 3]
[4, 4, 1, 3, 3]
[4, 4, 1, 3, 4]
[4, 4, 1, 3, 4]
[4, 4, 1, 3, 4]
[4, 4, 1, 4, 0]
[4, 4, 1, 4, 1]
[4, 4, 1, 4, 1]
[4, 4, 1, 4, 2]
[4, 4, 1, 4, 3]
[4, 4, 1, 4, 4]
[4, 4, 1, 4, 4]
[4, 4, 1, 4, 4]
[4, 4, 1, 4, 4]
[4, 4, 2, 0, 0]
[4, 4, 2, 0, 0]
[4, 4, 2, 0, 1]
[4, 4, 2, 0, 2]
[4, 4, 2, 0, 2]

======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
66666
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 126, in <module>
    num = reslist(max(reslist))
TypeError: 'list' object is not callable
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
66666
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 126, in <module>
    num = index.reslist(max(reslist))
NameError: name 'index' is not defined
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
66666
[1, 1, 1, 1, 1]
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
55555
[0, 0, 0, 0, 0]
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
55555
[0, 0, 0, 0, 0]
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
(0, 1, 2, 3, 4)
(0, 1, 2, 4, 3)
(0, 1, 3, 2, 4)
(0, 1, 3, 4, 2)
(0, 1, 4, 2, 3)
(0, 1, 4, 3, 2)
(0, 2, 1, 3, 4)
(0, 2, 1, 4, 3)
(0, 2, 3, 1, 4)
(0, 2, 3, 4, 1)
(0, 2, 4, 1, 3)
(0, 2, 4, 3, 1)
(0, 3, 1, 2, 4)
(0, 3, 1, 4, 2)
(0, 3, 2, 1, 4)
(0, 3, 2, 4, 1)
(0, 3, 4, 1, 2)
(0, 3, 4, 2, 1)
(0, 4, 1, 2, 3)
(0, 4, 1, 3, 2)
(0, 4, 2, 1, 3)
(0, 4, 2, 3, 1)
(0, 4, 3, 1, 2)
(0, 4, 3, 2, 1)
(1, 0, 2, 3, 4)
(1, 0, 2, 4, 3)
(1, 0, 3, 2, 4)
(1, 0, 3, 4, 2)
(1, 0, 4, 2, 3)
(1, 0, 4, 3, 2)
(1, 2, 0, 3, 4)
(1, 2, 0, 4, 3)
(1, 2, 3, 0, 4)
(1, 2, 3, 4, 0)
(1, 2, 4, 0, 3)
(1, 2, 4, 3, 0)
(1, 3, 0, 2, 4)
(1, 3, 0, 4, 2)
(1, 3, 2, 0, 4)
(1, 3, 2, 4, 0)
(1, 3, 4, 0, 2)Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 112, in <module>
    print(i)
KeyboardInterrupt
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
55555
(0, 1, 4, 2, 3)
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
54321
(0, 1, 2, 3, 4)
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
65210
(1, 0, 4, 3, 2)
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc5b.py", line 119, in <module>
    second = runprog([fas, second], startlist)
  File "/Users/luxia/Documents/aoc5b.py", line 45, in runprog
    apa = listan[a]
IndexError: list index out of range
>>> 
======================= RESTART: /Users/luxia/Documents/aoc5b.py ======================
Advent of Code, day 7, part 1
75228
(0, 3, 4, 2, 1)
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1
61250
61231
65039
65396
63373
64636
62546
62527
62768
62790
62659
62733
73919
74276
74135
74157
75156
75228
68653
69916
69085
69159
72876
72948
20930
20911
24719
25076
23053
24316
3218
3199
3131
3108
3061
3032
21239
21596
18287
18264
20676
19692
17533
18796
11629
11600
17636
16652
9410
9391
9632
9654
9523
9597
8402
8383
8315
8292
8245
8216
9371
9393
9203
9180
9324
9268
9109
9183
8773
8744
9096
9040
63479
63836
63695
63717
64716
64788
56759
57116
53807
53784
56196
55212
54839
54861
54671
54648
54792
54736
61956
62028
59716
58732
59076
59020
52093
53356
52525
52599
56316
56388
38653
39916
32749
32720
38756
37772
34813
34887
34477
34448
34800
34744
52836
52908
50596
49612
49956
49900
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 138, in <module>
    print(max(reslist))
ValueError: max() arg is an empty sequence
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1
61250
61231
65039
65396
63373
64636
62546
62527
62768
62790
62659
62733
73919
74276
74135
74157
75156
75228
68653
69916
69085
69159
72876
72948
20930
20911
24719
25076
23053
24316
3218
3199
3131
3108
3061
3032
21239
21596
18287
18264
20676
19692
17533
18796
11629
11600
17636
16652
9410
9391
9632
9654
9523
9597
8402
8383
8315
8292
8245
8216
9371
9393
9203
9180
9324
9268
9109
9183
8773
8744
9096
9040
63479
63836
63695
63717
64716
64788
56759
57116
53807
53784
56196
55212
54839
54861
54671
54648
54792
54736
61956
62028
59716
58732
59076
59020
52093
53356
52525
52599
56316
56388
38653
39916
32749
32720
38756
37772
34813
34887
34477
34448
34800
34744
52836
52908
50596
49612
49956
49900
75228
(0, 3, 4, 2, 1)
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1
stop at 99
stop at 99
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 133, in <module>
    inputvalues = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 126, in onerun
    second = runprog([fas, second], lista)
  File "/Users/luxia/Documents/aoc7b.py", line 61, in runprog
    listan[cepa] = apa + bepa
TypeError: can only concatenate list (not "int") to list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1
stop at 99: [28]
stop at 99: [[28, 28, 28]]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 133, in <module>
    inputvalues = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 126, in onerun
    second = runprog([fas, second], lista)
  File "/Users/luxia/Documents/aoc7b.py", line 61, in runprog
    listan[cepa] = apa + bepa
TypeError: can only concatenate list (not "int") to list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 133, in <module>
    inputvalues = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 126, in onerun
    second = runprog([fas, second], lista)
  File "/Users/luxia/Documents/aoc7b.py", line 72, in runprog
    output = output + listan[a]
TypeError: can only concatenate list (not "int") to list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1
stop at 99: [28]
stop at 99: [[28, 28, 28]]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 133, in <module>
    inputvalues = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 126, in onerun
    second = runprog([fas, second], lista)
  File "/Users/luxia/Documents/aoc7b.py", line 61, in runprog
    listan[cepa] = apa + bepa
TypeError: can only concatenate list (not "int") to list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1
stop at 99: [28]
stop at 99: [84]
stop at 99: [3396]
stop at 99: [20413]
stop at 99: [61250]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 134, in <module>
    reslist = reslist + inputvalues
TypeError: can only concatenate list (not "int") to list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1
stop at 99: [28]
stop at 99: [84]
stop at 99: [3396]
stop at 99: [20413]
stop at 99: [61250]
inputvalues: 61250
reslist: []
commands: (0, 1, 2, 3, 4)
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 137, in <module>
    reslist = reslist + inputvalues
TypeError: can only concatenate list (not "int") to list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1
stop at 99: [28]
stop at 99: [84]
stop at 99: [3396]
stop at 99: [20413]
stop at 99: [61250]
inputvalues: 61250
reslist: []
commands: (0, 1, 2, 3, 4)
61250
stop at 99: [28]
stop at 99: [84]
stop at 99: [3396]
stop at 99: [10199]
stop at 99: [61231]
inputvalues: 61231
reslist: [61250]
commands: (0, 1, 2, 4, 3)
61231
stop at 99: [28]
stop at 99: [84]
stop at 99: [541]
stop at 99: [21676]
stop at 99: [65039]
inputvalues: 65039
reslist: [61250, 61231]
commands: (0, 1, 3, 2, 4)
65039
stop at 99: [28]
stop at 99: [84]
stop at 99: [541]
stop at 99: [1634]
stop at 99: [65396]
inputvalues: 65396
reslist: [61250, 61231, 65039]
commands: (0, 1, 3, 4, 2)
65396
stop at 99: [28]
stop at 99: [84]
stop at 99: [263]
stop at 99: [10556]
stop at 99: [63373]
inputvalues: 63373
reslist: [61250, 61231, 65039, 65396]
commands: (0, 1, 4, 2, 3)
63373
stop at 99: [28]
stop at 99: [84]
stop at 99: [263]
stop at 99: [1615]
stop at 99: [64636]
inputvalues: 64636
reslist: [61250, 61231, 65039, 65396, 63373]
commands: (0, 1, 4, 3, 2)
64636
stop at 99: [28]
stop at 99: [1156]
stop at 99: [3468]
stop at 99: [20845]
stop at 99: [62546]
inputvalues: 62546
reslist: [61250, 61231, 65039, 65396, 63373, 64636]
commands: (0, 2, 1, 3, 4)
62546
stop at 99: [28]
stop at 99: [1156]
stop at 99: [3468]
stop at 99: [10415]
stop at 99: [62527]
inputvalues: 62527
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546]
commands: (0, 2, 1, 4, 3)
62527
stop at 99: [28]
stop at 99: [1156]
stop at 99: [6973]
stop at 99: [20919]
stop at 99: [62768]
inputvalues: 62768
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527]
commands: (0, 2, 3, 1, 4)
62768
stop at 99: [28]
stop at 99: [1156]
stop at 99: [6973]
stop at 99: [20930]
stop at 99: [62790]
inputvalues: 62790
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768]
commands: (0, 2, 3, 4, 1)
62790
stop at 99: [28]
stop at 99: [1156]
stop at 99: [3479]
stop at 99: [10437]
stop at 99: [62659]
inputvalues: 62659
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790]
commands: (0, 2, 4, 1, 3)
62659
stop at 99: [28]
stop at 99: [1156]
stop at 99: [3479]
stop at 99: [20911]
stop at 99: [62733]
inputvalues: 62733
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659]
commands: (0, 2, 4, 3, 1)
62733
stop at 99: [28]
stop at 99: [205]
stop at 99: [615]
stop at 99: [24636]
stop at 99: [73919]
inputvalues: 73919
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733]
commands: (0, 3, 1, 2, 4)
73919
stop at 99: [28]
stop at 99: [205]
stop at 99: [615]
stop at 99: [1856]
stop at 99: [74276]
inputvalues: 74276
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919]
commands: (0, 3, 1, 4, 2)
74276
stop at 99: [28]
stop at 99: [205]
stop at 99: [8236]
stop at 99: [24708]
stop at 99: [74135]
inputvalues: 74135
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276]
commands: (0, 3, 2, 1, 4)
74135
stop at 99: [28]
stop at 99: [205]
stop at 99: [8236]
stop at 99: [24719]
stop at 99: [74157]
inputvalues: 74157
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135]
commands: (0, 3, 2, 4, 1)
74157
stop at 99: [28]
stop at 99: [205]
stop at 99: [626]
stop at 99: [1878]
stop at 99: [75156]
inputvalues: 75156
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157]
commands: (0, 3, 4, 1, 2)
75156
stop at 99: [28]
stop at 99: [205]
stop at 99: [626]
stop at 99: [25076]
stop at 99: [75228]
inputvalues: 75228
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156]
commands: (0, 3, 4, 2, 1)
75228
stop at 99: [28]
stop at 99: [95]
stop at 99: [285]
stop at 99: [11436]
stop at 99: [68653]
inputvalues: 68653
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228]
commands: (0, 4, 1, 2, 3)
68653
stop at 99: [28]
stop at 99: [95]
stop at 99: [285]
stop at 99: [1747]
stop at 99: [69916]
inputvalues: 69916Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 134, in <module>
    print("inputvalues:", inputvalues)
KeyboardInterrupt
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1
inputvalues: 61250
reslist: []
commands: (0, 1, 2, 3, 4)
61250
inputvalues: 61231
reslist: [61250]
commands: (0, 1, 2, 4, 3)
61231
inputvalues: 65039
reslist: [61250, 61231]
commands: (0, 1, 3, 2, 4)
65039
inputvalues: 65396
reslist: [61250, 61231, 65039]
commands: (0, 1, 3, 4, 2)
65396
inputvalues: 63373
reslist: [61250, 61231, 65039, 65396]
commands: (0, 1, 4, 2, 3)
63373
inputvalues: 64636
reslist: [61250, 61231, 65039, 65396, 63373]
commands: (0, 1, 4, 3, 2)
64636
inputvalues: 62546
reslist: [61250, 61231, 65039, 65396, 63373, 64636]
commands: (0, 2, 1, 3, 4)
62546
inputvalues: 62527
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546]
commands: (0, 2, 1, 4, 3)
62527
inputvalues: 62768
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527]
commands: (0, 2, 3, 1, 4)
62768
inputvalues: 62790
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768]
commands: (0, 2, 3, 4, 1)
62790
inputvalues: 62659
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790]
commands: (0, 2, 4, 1, 3)
62659
inputvalues: 62733
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659]
commands: (0, 2, 4, 3, 1)
62733
inputvalues: 73919
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733]
commands: (0, 3, 1, 2, 4)
73919
inputvalues: 74276
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919]
commands: (0, 3, 1, 4, 2)
74276
inputvalues: 74135
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276]
commands: (0, 3, 2, 1, 4)
74135
inputvalues: 74157
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135]
commands: (0, 3, 2, 4, 1)
74157
inputvalues: 75156
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157]
commands: (0, 3, 4, 1, 2)
75156
inputvalues: 75228
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156]
commands: (0, 3, 4, 2, 1)
75228
inputvalues: 68653
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228]
commands: (0, 4, 1, 2, 3)
68653
inputvalues: 69916
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653]
commands: (0, 4, 1, 3, 2)
69916
inputvalues: 69085
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916]
commands: (0, 4, 2, 1, 3)
69085
inputvalues: 69159
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085]
commands: (0, 4, 2, 3, 1)
69159
inputvalues: 72876
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159]
commands: (0, 4, 3, 1, 2)
72876
inputvalues: 72948
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876]
commands: (0, 4, 3, 2, 1)
72948
inputvalues: 20930
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948]
commands: (1, 0, 2, 3, 4)
20930
inputvalues: 20911
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930]
commands: (1, 0, 2, 4, 3)
20911
inputvalues: 24719
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911]
commands: (1, 0, 3, 2, 4)
24719
inputvalues: 25076
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719]
commands: (1, 0, 3, 4, 2)
25076
inputvalues: 23053
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076]
commands: (1, 0, 4, 2, 3)
23053
inputvalues: 24316
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053]
commands: (1, 0, 4, 3, 2)
24316
inputvalues: 3218
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316]
commands: (1, 2, 0, 3, 4)
3218
inputvalues: 3199
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218]
commands: (1, 2, 0, 4, 3)
3199
inputvalues: 3131
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199]
commands: (1, 2, 3, 0, 4)
3131
inputvalues: 3108
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131]
commands: (1, 2, 3, 4, 0)
3108
inputvalues: 3061
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108]
commands: (1, 2, 4, 0, 3)
3061
inputvalues: 3032
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061]
commands: (1, 2, 4, 3, 0)
3032
inputvalues: 21239
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032]
commands: (1, 3, 0, 2, 4)
21239
inputvalues: 21596
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239]
commands: (1, 3, 0, 4, 2)
21596
inputvalues: 18287
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596]
commands: (1, 3, 2, 0, 4)
18287
inputvalues: 18264
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287]
commands: (1, 3, 2, 4, 0)
18264
inputvalues: 20676
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264]
commands: (1, 3, 4, 0, 2)
20676
inputvalues: 19692
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676]
commands: (1, 3, 4, 2, 0)
19692
inputvalues: 17533
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692]
commands: (1, 4, 0, 2, 3)
17533
inputvalues: 18796
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533]
commands: (1, 4, 0, 3, 2)
18796
inputvalues: 11629
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796]
commands: (1, 4, 2, 0, 3)
11629
inputvalues: 11600
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629]
commands: (1, 4, 2, 3, 0)
11600
inputvalues: 17636
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600]
commands: (1, 4, 3, 0, 2)
17636
inputvalues: 16652
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636]
commands: (1, 4, 3, 2, 0)
16652
inputvalues: 9410
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652]
commands: (2, 0, 1, 3, 4)
9410
inputvalues: 9391
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410]
commands: (2, 0, 1, 4, 3)
9391
inputvalues: 9632
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391]
commands: (2, 0, 3, 1, 4)
9632
inputvalues: 9654
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632]
commands: (2, 0, 3, 4, 1)
9654
inputvalues: 9523
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654]
commands: (2, 0, 4, 1, 3)
9523
inputvalues: 9597
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523]
commands: (2, 0, 4, 3, 1)
9597
inputvalues: 8402
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597]
commands: (2, 1, 0, 3, 4)
8402
inputvalues: 8383
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402]
commands: (2, 1, 0, 4, 3)
8383
inputvalues: 8315
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383]
commands: (2, 1, 3, 0, 4)
8315
inputvalues: 8292
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315]
commands: (2, 1, 3, 4, 0)
8292
inputvalues: 8245
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292]
commands: (2, 1, 4, 0, 3)
8245
inputvalues: 8216
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245]
commands: (2, 1, 4, 3, 0)
8216
inputvalues: 9371
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216]
commands: (2, 3, 0, 1, 4)
9371
inputvalues: 9393
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371]
commands: (2, 3, 0, 4, 1)
9393
inputvalues: 9203
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393]
commands: (2, 3, 1, 0, 4)
9203
inputvalues: 9180
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203]
commands: (2, 3, 1, 4, 0)
9180
inputvalues: 9324
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180]
commands: (2, 3, 4, 0, 1)
9324
inputvalues: 9268
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324]
commands: (2, 3, 4, 1, 0)
9268
inputvalues: 9109
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268]
commands: (2, 4, 0, 1, 3)
9109
inputvalues: 9183
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109]
commands: (2, 4, 0, 3, 1)
9183
inputvalues: 8773
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183]
commands: (2, 4, 1, 0, 3)
8773
inputvalues: 8744
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773]
commands: (2, 4, 1, 3, 0)
8744
inputvalues: 9096
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744]
commands: (2, 4, 3, 0, 1)
9096
inputvalues: 9040
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096]
commands: (2, 4, 3, 1, 0)
9040
inputvalues: 63479
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040]
commands: (3, 0, 1, 2, 4)
63479
inputvalues: 63836
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479]
commands: (3, 0, 1, 4, 2)
63836
inputvalues: 63695
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836]
commands: (3, 0, 2, 1, 4)
63695
inputvalues: 63717
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695]
commands: (3, 0, 2, 4, 1)
63717
inputvalues: 64716
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717]
commands: (3, 0, 4, 1, 2)
64716
inputvalues: 64788
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716]
commands: (3, 0, 4, 2, 1)
64788
inputvalues: 56759
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788]
commands: (3, 1, 0, 2, 4)
56759
inputvalues: 57116
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759]
commands: (3, 1, 0, 4, 2)
57116
inputvalues: 53807
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116]
commands: (3, 1, 2, 0, 4)
53807
inputvalues: 53784
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807]
commands: (3, 1, 2, 4, 0)
53784
inputvalues: 56196
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784]
commands: (3, 1, 4, 0, 2)
56196
inputvalues: 55212
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196]
commands: (3, 1, 4, 2, 0)
55212
inputvalues: 54839
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212]
commands: (3, 2, 0, 1, 4)
54839
inputvalues: 54861
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839]
commands: (3, 2, 0, 4, 1)
54861
inputvalues: 54671
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861]
commands: (3, 2, 1, 0, 4)
54671
inputvalues: 54648
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671]
commands: (3, 2, 1, 4, 0)
54648
inputvalues: 54792
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648]
commands: (3, 2, 4, 0, 1)
54792
inputvalues: 54736
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792]
commands: (3, 2, 4, 1, 0)
54736
inputvalues: 61956
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736]
commands: (3, 4, 0, 1, 2)
61956
inputvalues: 62028
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956]
commands: (3, 4, 0, 2, 1)
62028
inputvalues: 59716
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028]
commands: (3, 4, 1, 0, 2)
59716
inputvalues: 58732
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716]
commands: (3, 4, 1, 2, 0)
58732
inputvalues: 59076
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732]
commands: (3, 4, 2, 0, 1)
59076
inputvalues: 59020
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076]
commands: (3, 4, 2, 1, 0)
59020
inputvalues: 52093
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020]
commands: (4, 0, 1, 2, 3)
52093
inputvalues: 53356
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093]
commands: (4, 0, 1, 3, 2)
53356
inputvalues: 52525
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356]
commands: (4, 0, 2, 1, 3)
52525
inputvalues: 52599
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525]
commands: (4, 0, 2, 3, 1)
52599
inputvalues: 56316
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599]
commands: (4, 0, 3, 1, 2)
56316
inputvalues: 56388
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599, 56316]
commands: (4, 0, 3, 2, 1)
56388
inputvalues: 38653
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599, 56316, 56388]
commands: (4, 1, 0, 2, 3)
38653
inputvalues: 39916
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599, 56316, 56388, 38653]
commands: (4, 1, 0, 3, 2)
39916
inputvalues: 32749
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599, 56316, 56388, 38653, 39916]
commands: (4, 1, 2, 0, 3)
32749
inputvalues: 32720
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599, 56316, 56388, 38653, 39916, 32749]
commands: (4, 1, 2, 3, 0)
32720
inputvalues: 38756
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599, 56316, 56388, 38653, 39916, 32749, 32720]
commands: (4, 1, 3, 0, 2)
38756
inputvalues: 37772
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599, 56316, 56388, 38653, 39916, 32749, 32720, 38756]
commands: (4, 1, 3, 2, 0)
37772
inputvalues: 34813
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599, 56316, 56388, 38653, 39916, 32749, 32720, 38756, 37772]
commands: (4, 2, 0, 1, 3)
34813
inputvalues: 34887
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599, 56316, 56388, 38653, 39916, 32749, 32720, 38756, 37772, 34813]
commands: (4, 2, 0, 3, 1)
34887
inputvalues: 34477
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599, 56316, 56388, 38653, 39916, 32749, 32720, 38756, 37772, 34813, 34887]
commands: (4, 2, 1, 0, 3)
34477
inputvalues: 34448
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599, 56316, 56388, 38653, 39916, 32749, 32720, 38756, 37772, 34813, 34887, 34477]
commands: (4, 2, 1, 3, 0)
34448
inputvalues: 34800
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599, 56316, 56388, 38653, 39916, 32749, 32720, 38756, 37772, 34813, 34887, 34477, 34448]
commands: (4, 2, 3, 0, 1)
34800
inputvalues: 34744
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599, 56316, 56388, 38653, 39916, 32749, 32720, 38756, 37772, 34813, 34887, 34477, 34448, 34800]
commands: (4, 2, 3, 1, 0)
34744
inputvalues: 52836
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599, 56316, 56388, 38653, 39916, 32749, 32720, 38756, 37772, 34813, 34887, 34477, 34448, 34800, 34744]
commands: (4, 3, 0, 1, 2)
52836
inputvalues: 52908
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599, 56316, 56388, 38653, 39916, 32749, 32720, 38756, 37772, 34813, 34887, 34477, 34448, 34800, 34744, 52836]
commands: (4, 3, 0, 2, 1)
52908
inputvalues: 50596
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599, 56316, 56388, 38653, 39916, 32749, 32720, 38756, 37772, 34813, 34887, 34477, 34448, 34800, 34744, 52836, 52908]
commands: (4, 3, 1, 0, 2)
50596
inputvalues: 49612
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599, 56316, 56388, 38653, 39916, 32749, 32720, 38756, 37772, 34813, 34887, 34477, 34448, 34800, 34744, 52836, 52908, 50596]
commands: (4, 3, 1, 2, 0)
49612
inputvalues: 49956
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599, 56316, 56388, 38653, 39916, 32749, 32720, 38756, 37772, 34813, 34887, 34477, 34448, 34800, 34744, 52836, 52908, 50596, 49612]
commands: (4, 3, 2, 0, 1)
49956
inputvalues: 49900
reslist: [61250, 61231, 65039, 65396, 63373, 64636, 62546, 62527, 62768, 62790, 62659, 62733, 73919, 74276, 74135, 74157, 75156, 75228, 68653, 69916, 69085, 69159, 72876, 72948, 20930, 20911, 24719, 25076, 23053, 24316, 3218, 3199, 3131, 3108, 3061, 3032, 21239, 21596, 18287, 18264, 20676, 19692, 17533, 18796, 11629, 11600, 17636, 16652, 9410, 9391, 9632, 9654, 9523, 9597, 8402, 8383, 8315, 8292, 8245, 8216, 9371, 9393, 9203, 9180, 9324, 9268, 9109, 9183, 8773, 8744, 9096, 9040, 63479, 63836, 63695, 63717, 64716, 64788, 56759, 57116, 53807, 53784, 56196, 55212, 54839, 54861, 54671, 54648, 54792, 54736, 61956, 62028, 59716, 58732, 59076, 59020, 52093, 53356, 52525, 52599, 56316, 56388, 38653, 39916, 32749, 32720, 38756, 37772, 34813, 34887, 34477, 34448, 34800, 34744, 52836, 52908, 50596, 49612, 49956]
commands: (4, 3, 2, 1, 0)
49900
75228
(0, 3, 4, 2, 1)
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1
61250
61231
65039
65396
63373
64636
62546
62527
62768
62790
62659
62733
73919
74276
74135
74157
75156
75228
68653
69916
69085
69159
72876
72948
20930
20911
24719
25076
23053
24316
3218
3199
3131
3108
3061
3032
21239
21596
18287
18264
20676
19692
17533
18796
11629
11600
17636
16652
9410
9391
9632
9654
9523
9597
8402
8383
8315
8292
8245
8216
9371
9393
9203
9180
9324
9268
9109
9183
8773
8744
9096
9040
63479
63836
63695
63717
64716
64788
56759
57116
53807
53784
56196
55212
54839
54861
54671
54648
54792
54736
61956
62028
59716
58732
59076
59020
52093
53356
52525
52599
56316
56388
38653
39916
32749
32720
38756
37772
34813
34887
34477
34448
34800
34744
52836
52908
50596
49612
49956
49900
75228
(0, 3, 4, 2, 1)
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1
75228
(0, 3, 4, 2, 1)
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 142, in <module>
    print(max(reslist))
ValueError: max() arg is an empty sequence
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 145, in <module>
    firstpart()
  File "/Users/luxia/Documents/aoc7b.py", line 134, in firstpart
    inputvalues = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 127, in onerun
    if fas == commands[-1]:
NameError: name 'commands' is not defined
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 140, in <module>
    firstpart()
  File "/Users/luxia/Documents/aoc7b.py", line 134, in firstpart
    inputvalues = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 127, in onerun
    if fas == commands[-1]:
NameError: name 'commands' is not defined
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 143, in <module>
    firstpart()
  File "/Users/luxia/Documents/aoc7b.py", line 137, in firstpart
    inputvalues = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 130, in onerun
    if fas == commands[-1]:
NameError: name 'commands' is not defined
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 134, in <module>
    firstpart()
  File "/Users/luxia/Documents/aoc7b.py", line 127, in firstpart
    output = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 120, in onerun
    if fas == commands[-1]:
NameError: name 'commands' is not defined
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
0 (0, 1, 2, 3, 4)
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 134, in <module>
    firstpart()
  File "/Users/luxia/Documents/aoc7b.py", line 128, in firstpart
    output = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 120, in onerun
    if fas == commands[-1]:
NameError: name 'commands' is not defined
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
0 (0, 1, 2, 3, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 0, 0, 0]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 135, in <module>
    firstpart()
  File "/Users/luxia/Documents/aoc7b.py", line 129, in firstpart
    output = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 120, in onerun
    if fas == commands[-1]:
NameError: name 'commands' is not defined
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
0 (0, 1, 2, 3, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 0, 0, 0]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 135, in <module>
    firstpart()
  File "/Users/luxia/Documents/aoc7b.py", line 130, in firstpart
    reslist = reslist + [output]
UnboundLocalError: local variable 'reslist' referenced before assignment
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
0 (0, 1, 2, 3, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 0, 0, 0]
0 (0, 1, 2, 4, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 56012, 56010, 0]
0 (0, 1, 3, 2, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 56021, 56020, 0]
0 (0, 1, 3, 4, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 56102, 56100, 0]
0 (0, 1, 4, 2, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 56120, 56120, 0]
0 (0, 1, 4, 3, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 56201, 56200, 0]
0 (0, 2, 1, 3, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 56210, 56210, 0]
0 (0, 2, 1, 4, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 50612, 50610, 0]
0 (0, 2, 3, 1, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 50621, 50620, 0]
0 (0, 2, 3, 4, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 50162, 50160, 0]
0 (0, 2, 4, 1, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 50126, 50120, 7]
0 (0, 2, 4, 3, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 50261, 50260, 0]
0 (0, 3, 1, 2, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 50216, 50210, 7]
0 (0, 3, 1, 4, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 51602, 51600, 0]
0 (0, 3, 2, 1, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 51620, 51620, 0]
0 (0, 3, 2, 4, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 51062, 51060, 0]
0 (0, 3, 4, 1, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 51026, 51020, 7]
0 (0, 3, 4, 2, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 51260, 51260, 0]
0 (0, 4, 1, 2, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 51206, 51200, 7]
0 (0, 4, 1, 3, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 52601, 52600, 0]
0 (0, 4, 2, 1, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 52610, 52610, 0]
0 (0, 4, 2, 3, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 52061, 52060, 0]
0 (0, 4, 3, 1, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 52016, 52010, 7]
0 (0, 4, 3, 2, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 52160, 52160, 0]
0 (1, 0, 2, 3, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 52106, 52100, 7]
0 (1, 0, 2, 4, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 65012, 65010, 0]
0 (1, 0, 3, 2, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 65021, 65020, 0]
0 (1, 0, 3, 4, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 65102, 65100, 0]
0 (1, 0, 4, 2, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 65120, 65120, 0]
0 (1, 0, 4, 3, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 65201, 65200, 0]
0 (1, 2, 0, 3, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 65210, 65210, 0]
0 (1, 2, 0, 4, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 60512, 60510, 0]
0 (1, 2, 3, 0, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 60521, 60520, 0]
0 (1, 2, 3, 4, 0)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 60152, 60150, 0]
0 (1, 2, 4, 0, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 60125, 60120, 7]
0 (1, 2, 4, 3, 0)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 60251, 60250, 0]
0 (1, 3, 0, 2, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 60215, 60210, 7]
0 (1, 3, 0, 4, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 61502, 61500, 0]
0 (1, 3, 2, 0, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 61520, 61520, 0]
0 (1, 3, 2, 4, 0)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 61052, 61050, 0]
0 (1, 3, 4, 0, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 61025, 61020, 7]
0 (1, 3, 4, 2, 0)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 61250, 61250, 0]
0 (1, 4, 0, 2, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 61205, 61200, 7]
0 (1, 4, 0, 3, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 62501, 62500, 0]
0 (1, 4, 2, 0, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 62510, 62510, 0]
0 (1, 4, 2, 3, 0)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 62051, 62050, 0]
0 (1, 4, 3, 0, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 62015, 62010, 7]
0 (1, 4, 3, 2, 0)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 62150, 62150, 0]
0 (2, 0, 1, 3, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 62105, 62100, 7]
0 (2, 0, 1, 4, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 5612, 5610, 0]
0 (2, 0, 3, 1, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 5621, 5620, 0]
0 (2, 0, 3, 4, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 5162, 5160, 0]
0 (2, 0, 4, 1, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 5126, 5120, 7]
0 (2, 0, 4, 3, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 5261, 5260, 0]
0 (2, 1, 0, 3, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 5216, 5210, 7]
0 (2, 1, 0, 4, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 6512, 6510, 0]
0 (2, 1, 3, 0, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 6521, 6520, 0]
0 (2, 1, 3, 4, 0)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 6152, 6150, 0]
0 (2, 1, 4, 0, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 6125, 6120, 7]
0 (2, 1, 4, 3, 0)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 6251, 6250, 0]
0 (2, 3, 0, 1, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 6215, 6210, 7]
0 (2, 3, 0, 4, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 1562, 1560, 0]
0 (2, 3, 1, 0, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 1526, 1520, 7]
0 (2, 3, 1, 4, 0)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 1652, 1650, 0]
0 (2, 3, 4, 0, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 1625, 1620, 7]
0 (2, 3, 4, 1, 0)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 1256, 1250, 7]
0 (2, 4, 0, 1, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 1265, 1260, 7]
0 (2, 4, 0, 3, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 2561, 2560, 0]
0 (2, 4, 1, 0, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 2516, 2510, 7]
0 (2, 4, 1, 3, 0)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 2651, 2650, 0]
0 (2, 4, 3, 0, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 2615, 2610, 7]
0 (2, 4, 3, 1, 0)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 2156, 2150, 7]
0 (3, 0, 1, 2, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 2165, 2160, 7]
0 (3, 0, 1, 4, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 15602, 15600, 0]
0 (3, 0, 2, 1, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 15620, 15620, 0]
0 (3, 0, 2, 4, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 15062, 15060, 0]
0 (3, 0, 4, 1, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 15026, 15020, 7]
0 (3, 0, 4, 2, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 15260, 15260, 0]
0 (3, 1, 0, 2, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 15206, 15200, 7]
0 (3, 1, 0, 4, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 16502, 16500, 0]
0 (3, 1, 2, 0, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 16520, 16520, 0]
0 (3, 1, 2, 4, 0)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 16052, 16050, 0]
0 (3, 1, 4, 0, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 16025, 16020, 7]
0 (3, 1, 4, 2, 0)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 16250, 16250, 0]
0 (3, 2, 0, 1, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 16205, 16200, 7]
0 (3, 2, 0, 4, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 10562, 10560, 0]
0 (3, 2, 1, 0, 4)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 10526, 10520, 7]
0 (3, 2, 1, 4, 0)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 10652, 10650, 0]
0 (3, 2, 4, 0, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 10625, 10620, 7]
0 (3, 2, 4, 1, 0)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 10256, 10250, 7]
0 (3, 4, 0, 1, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 10265, 10260, 7]
0 (3, 4, 0, 2, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 12560, 12560, 0]
0 (3, 4, 1, 0, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 12506, 12500, 7]
0 (3, 4, 1, 2, 0)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 12650, 12650, 0]
0 (3, 4, 2, 0, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 12605, 12600, 7]
0 (3, 4, 2, 1, 0)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 12056, 12050, 7]
0 (4, 0, 1, 2, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 12065, 12060, 7]
0 (4, 0, 1, 3, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 25601, 25600, 0]
0 (4, 0, 2, 1, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 25610, 25610, 0]
0 (4, 0, 2, 3, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 25061, 25060, 0]
0 (4, 0, 3, 1, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 25016, 25010, 7]
0 (4, 0, 3, 2, 1)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 25160, 25160, 0]
0 (4, 1, 0, 2, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 25106, 25100, 7]
0 (4, 1, 0, 3, 2)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 26501, 26500, 0]
0 (4, 1, 2, 0, 3)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 26510, 26510, 0]
0 (4, 1, 2, 3, 0)
[3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 26051, 26050, 0]
0 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
65210
(1, 0, 4, 3, 2)
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
65210
(1, 0, 4, 3, 2)
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
65210
(1, 0, 4, 3, 2)
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
65210
(1, 0, 4, 3, 2)
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 140, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 135, in secondpart
    output = onerun(inputval, commands, runlist)
NameError: name 'runlist' is not defined
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 141, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 138, in secondpart
    reslist = reslist + [output]
UnboundLocalError: local variable 'reslist' referenced before assignment
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 142, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 137, in secondpart
    output, runlist = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 117, in onerun
    second = runprog([fas, second], lista)
  File "/Users/luxia/Documents/aoc7b.py", line 56, in runprog
    listan[cepa] = apa + bepa
TypeError: can only concatenate tuple (not "int") to tuple
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
listan: [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 0, 0, 0]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 143, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 138, in secondpart
    output, runlist = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 117, in onerun
    second = runprog([fas, second], lista)
  File "/Users/luxia/Documents/aoc7b.py", line 56, in runprog
    listan[cepa] = apa + bepa
TypeError: can only concatenate tuple (not "int") to tuple
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
listan: [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 0, 0, 0]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 144, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 138, in secondpart
    output, runlist = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 117, in onerun
    second = runprog([fas, second], lista)
  File "/Users/luxia/Documents/aoc7b.py", line 56, in runprog
    listan[cepa] = apa + bepa
TypeError: can only concatenate tuple (not "int") to tuple
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
listan: [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 0, 0, 0]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 144, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 138, in secondpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 117, in onerun
    second = runprog([fas, second], lista)
  File "/Users/luxia/Documents/aoc7b.py", line 56, in runprog
    listan[cepa] = apa + bepa
TypeError: can only concatenate tuple (not "int") to tuple
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
listan: [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 0, 0, 0]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 145, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 138, in secondpart
    print(onerun(inputval, commands, runlist))
  File "/Users/luxia/Documents/aoc7b.py", line 117, in onerun
    second = runprog([fas, second], lista)
  File "/Users/luxia/Documents/aoc7b.py", line 56, in runprog
    listan[cepa] = apa + bepa
TypeError: can only concatenate tuple (not "int") to tuple
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
listan: [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 0, 0, 0]
0 (5, 6, 7, 8, 9)
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 146, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 139, in secondpart
    print(onerun(inputval, commands, runlist))
  File "/Users/luxia/Documents/aoc7b.py", line 117, in onerun
    second = runprog([fas, second], lista)
  File "/Users/luxia/Documents/aoc7b.py", line 56, in runprog
    listan[cepa] = apa + bepa
TypeError: can only concatenate tuple (not "int") to tuple
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
listan: [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 0, 0, 0]
0 (5, 6, 7, 8, 9)
0 5
(3, [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 3, 0, 0]) 6
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 147, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 140, in secondpart
    print(onerun(inputval, commands, runlist))
  File "/Users/luxia/Documents/aoc7b.py", line 118, in onerun
    second = runprog([fas, second], lista)
  File "/Users/luxia/Documents/aoc7b.py", line 56, in runprog
    listan[cepa] = apa + bepa
TypeError: can only concatenate tuple (not "int") to tuple
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
listan: [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 0, 0, 0]
0 (5, 6, 7, 8, 9)
init value: 0 phase: 5
init value: (3, [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 3, 0, 0]) phase: 6
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 147, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 140, in secondpart
    print(onerun(inputval, commands, runlist))
  File "/Users/luxia/Documents/aoc7b.py", line 118, in onerun
    second = runprog([fas, second], lista)
  File "/Users/luxia/Documents/aoc7b.py", line 56, in runprog
    listan[cepa] = apa + bepa
TypeError: can only concatenate tuple (not "int") to tuple
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
listan: [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 0, 0, 0]
0 (5, 6, 7, 8, 9)
init value: 0 phase: 5
init value: 3 phase: 6
init value: 34 phase: 7
init value: 345 phase: 8
init value: 3456 phase: 9
(34567, [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 34567, 34560, 0])
init value: 0 phase: 5
init value: 3 phase: 6
init value: 34 phase: 7
init value: 345 phase: 8
init value: 3456 phase: 9
processed list: [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 34567, 34560, 0]
listan: [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 34567, 34560, 0]
34567 (5, 6, 7, 9, 8)
init value: 34567 phase: 5
init value: 345673 phase: 6
init value: 3456734 phase: 7
init value: 34567345 phase: 9
init value: 345673457 phase: 8
(3456734576, [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 3456734576, 3456734570, 0])
init value: 34567 phase: 5
init value: 345673 phase: 6
init value: 3456734 phase: 7
init value: 34567345 phase: 9
init value: 345673457 phase: 8
processed list: [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 3456734576, 3456734570, 0]
listan: [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 3456734576, 3456734570, 0]
3456734576 (5, 6, 8, 7, 9)
init value: 3456734576 phase: 5
init value: 34567345763 phase: 6
init value: 345673457634 phase: 8
init value: 3456734576346 phase: 7
init value: 34567345763465 phase: 9
(345673457634657, [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 345673457634657, 345673457634650, 0])
init value: 3456734576 phase: 5
init value: 34567345763 phase: 6
init value: 345673457634 phase: 8
init value: 3456734576346 phase: 7
init value: 34567345763465 phase: 9
processed list: [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 345673457634657, 345673457634650, 0]
listan: [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 345673457634657, 345673457634650, 0]
345673457634657 (5, 6, 8, 9, 7)
init value: 345673457634657 phase: 5
init value: 3456734576346573 phase: 6
init value: 34567345763465734 phase: 8
init value: 345673457634657346 phase: 9
init value: 3456734576346573467 phase: 7
(34567345763465734675, [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 34567345763465734675, 34567345763465734670, 0])
init value: 345673457634657 phase: 5
init value: 3456734576346573 phase: 6
init value: 34567345763465734 phase: 8
init value: 345673457634657346 phase: 9
init value: 3456734576346573467 phase: 7
processed list: [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 34567345763465734675, 34567345763465734670, 0]
listan: [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 34567345763465734675, 34567345763465734670, 0]
34567345763465734675 (5, 6, 9, 7, 8)
init value: 34567345763465734675 phase: 5
init value: 345673457634657346753 phase: 6
init value: 3456734576346573467534 phase: 9
init value: 34567345763465734675347 phase: 7
init value: 345673457634657346753475 phase: 8
(3456734576346573467534756, [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 3456734576346573467534756, 3456734576346573467534750, 0])
init value: 34567345763465734675 phase: 5
init value: 345673457634657346753 phase: 6
init value: 3456734576346573467534 phase: 9
init value: 34567345763465734675347 phase: 7
init value: 345673457634657346753475 phase: 8
processed list: [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 3456734576346573467534756, 3456734576346573467534750, 0]
listan: [3, 31, 3, 32, 1002, 32, 10, 32, 1001, 31, -2, 31, 1007, 31, 0, 33, 1002, 33, 7, 33, 1, 33, 31, 31, 1, 32, 31, 31, 4, 31, 99, 3456734576346573467534756, 3456734576346573467534750, 0]
3456734576346573467534756 (5, 6, 9, 8, 7)
init value: 3456734576346573467534756 phase: 5
init value: 34567345763465734675347563 phase: 6
init value: 345673457634657346753475634 phase: 9
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 147, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 140, in secondpart
    print(onerun(inputval, commands, runlist))
  File "/Users/luxia/Documents/aoc7b.py", line 117, in onerun
    print("init value:", second, "phase:", fas)
KeyboardInterrupt
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2

>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
34567
3456734576
345673457634657
34567345763465734675
3456734576346573467534756
345673457634657346753475634765
34567345763465734675347563476535467
3456734576346573467534756347653546735476
345673457634657346753475634765354673547635647
34567345763465734675347563476535467354763564735674
3456734576346573467534756347653546735476356473567435746
345673457634657346753475634765354673547635647356743574635764
34567345763465734675347563476535467354763564735674357463576436457
3456734576346573467534756347653546735476356473567435746357643645736475
345673457634657346753475634765354673547635647356743574635764364573647536547
34567345763465734675347563476535467354763564735674357463576436457364753654736574
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753473564736547536
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356473654753647563
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365475364756347635
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753473564736547536475634763547653
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356473654753647563476354765353467
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365475364756347635476535346753476
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753473564736547536475634763547653534675347653647
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356473654753647563476354765353467534765364753674
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365475364756347635476535346753476536475367453746
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753473564736547536475634763547653534675347653647536745374653764
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356473654753647563476354765353467534765364753674537465376454367
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365475364756347635476535346753476536475367453746537645436754376
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753473564736547536475634763547653534675347653647536745374653764543675437654637
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356473654753647563476354765353467534765364753674537465376454367543765463754673
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365475364756347635476535346753476536475367453746537645436754376546375467354736
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753473564736547536475634763547653534675347653647536745374653764543675437654637546735473654763
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356473654753647563476354765353467534765364753674537465376454367543765463754673547365476356347
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365475364756347635476535346753476536475367453746537645436754376546375467354736547635634756374
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753473564736547536475634763547653534675347653647536745374653764543675437654637546735473654763563475637456437
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356473654753647563476354765353467534765364753674537465376454367543765463754673547365476356347563745643756473
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365475364756347635476535346753476536475367453746537645436754376546375467354736547635634756374564375647356734
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753473564736547536475634763547653534675347653647536745374653764543675437654637546735473654763563475637456437564735673456743
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356473654753647563476354765353467534765364753674537465376454367543765463754673547365476356347563745643756473567345674357346
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365475364756347635476535346753476536475367453746537645436754376546375467354736547635634756374564375647356734567435734657364
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753473564736547536475634763547653534675347653647536745374653764543675437654637546735473654763563475637456437564735673456743573465736457436
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356473654753647563476354765353467534765364753674537465376454367543765463754673547365476356347563745643756473567345674357346573645743657463
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365475364756347635476535346753476536475367453746537645436754376546375467354736547635634756374564375647356734567435734657364574365746357634
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753473564736547536475634763547653534675347653647536745374653764543675437654637546735473654763563475637456437564735673456743573465736457436574635763457643
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356473654753647563476354765353467534765364753674537465376454367543765463754673547365476356347563745643756473567345674357346573645743657463576345764363457
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365475364756347635476535346753476536475367453746537645436754376546375467354736547635634756374564375647356734567435734657364574365746357634576436345763475
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753473564736547536475634763547653534675347653647536745374653764543675437654637546735473654763563475637456437564735673456743573465736457436574635763457643634576347563547
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356473654753647563476354765353467534765364753674537465376454367543765463754673547365476356347563745643756473567345674357346573645743657463576345764363457634756354763574
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365475364756347635476535346753476536475367453746537645436754376546375467354736547635634756374564375647356734567435734657364574365746357634576436345763475635476357463745
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753473564736547536475634763547653534675347653647536745374653764543675437654637546735473654763563475637456437564735673456743573465736457436574635763457643634576347563547635746374563754
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356473654753647563476354765353467534765364753674537465376454367543765463754673547365476356347563745643756473567345674357346573645743657463576345764363457634756354763574637456375464357
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365475364756347635476535346753476536475367453746537645436754376546375467354736547635634756374564375647356734567435734657364574365746357634576436345763475635476357463745637546435764375
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753473564736547536475634763547653534675347653647536745374653764543675437654637546735473654763563475637456437564735673456743573465736457436574635763457643634576347563547635746374563754643576437564537
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356473654753647563476354765353467534765364753674537465376454367543765463754673547365476356347563745643756473567345674357346573645743657463576345764363457634756354763574637456375464357643756453764573
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365475364756347635476535346753476536475367453746537645436754376546375467354736547635634756374564375647356734567435734657364574365746357634576436345763475635476357463745637546435764375645376457364735
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753473564736547536475634763547653534675347653647536745374653764543675437654637546735473654763563475637456437564735673456743573465736457436574635763457643634576347563547635746374563754643576437564537645736473564753
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356473654753647563476354765353467534765364753674537465376454367543765463754673547365476356347563745643756473567345674357346573645743657463576345764363457634756354763574637456375464357643756453764573647356475365347
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365475364756347635476535346753476536475367453746537645436754376546375467354736547635634756374564375647356734567435734657364574365746357634576436345763475635476357463745637546435764375645376457364735647536534765374
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753473564736547536475634763547653534675347653647536745374653764543675437654637546735473654763563475637456437564735673456743573465736457436574635763457643634576347563547635746374563754643576437564537645736473564753653476537465437
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356473654753647563476354765353467534765364753674537465376454367543765463754673547365476356347563745643756473567345674357346573645743657463576345764363457634756354763574637456375464357643756453764573647356475365347653746543765473
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365475364756347635476535346753476536475367453746537645436754376546375467354736547635634756374564375647356734567435734657364574365746357634576436345763475635476357463745637546435764375645376457364735647536534765374654376547365734
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753473564736547536475634763547653534675347653647536745374653764543675437654637546735473654763563475637456437564735673456743573465736457436574635763457643634576347563547635746374563754643576437564537645736473564753653476537465437654736573465743
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356473654753647563476354765353467534765364753674537465376454367543765463754673547365476356347563745643756473567345674357346573645743657463576345764363457634756354763574637456375464357643756453764573647356475365347653746543765473657346574367345
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365475364756347635476535346753476536475367453746537645436754376546375467354736547635634756374564375647356734567435734657364574365746357634576436345763475635476357463745637546435764375645376457364735647536534765374654376547365734657436734567354
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753473564736547536475634763547653534675347653647536745374653764543675437654637546735473654763563475637456437564735673456743573465736457436574635763457643634576347563547635746374563754643576437564537645736473564753653476537465437654736573465743673456735467435
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356473654753647563476354765353467534765364753674537465376454367543765463754673547365476356347563745643756473567345674357346573645743657463576345764363457634756354763574637456375464357643756453764573647356475365347653746543765473657346574367345673546743567453
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365475364756347635476535346753476536475367453746537645436754376546375467354736547635634756374564375647356734567435734657364574365746357634576436345763475635476357463745637546435764375645376457364735647536534765374654376547365734657436734567354674356745367534
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753473564736547536475634763547653534675347653647536745374653764543675437654637546735473654763563475637456437564735673456743573465736457436574635763457643634576347563547635746374563754643576437564537645736473564753653476537465437654736573465743673456735467435674536753467543
34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356473654753647563476354765353467534765364753674537465376454367543765463754673547365476356347563745643756473567345674357346573645743657463576345764363457634756354763574637456375464357643756453764573647356475365347653746543765473657346574367345673546743567453675346754373456
3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365475364756347635476535346753476536475367453746537645436754376546375467354736547635634756374564375647356734567435734657364574365746357634576436345763475635476357463745637546435764375645376457364735647536534765374654376547365734657436734567354674356745367534675437345673465
345673457634657346753475634765354673547635647356743574635764364573647536547365743674536754374563746537546375643764537654435674357643657436754375643765453674537645637456734573645763463574637546537465734673546753473564736547536475634763547653534675347653647536745374653764543675437654637546735473654763563475637456437564735673456743573465736457436574635763457643634576347563547635746374563754643576437564537645736473564753653476537465437654736573465743673456735467435674536753467543734567346573546

3456734576346573467534756347653546735476356473567435746357643645736475365473657436745367543745637465375463756437645376544356743576436574367543756437654536745376456374567345736457634635746375465374657346735467534735647365475364756347635476535346753476536475367453746537645436754376546375467354736547635634756374564375647356734567435734657364574365746357634576436345763475635476357463745637546435764375645376457364735647536534765374654376547365734657436734567354674356745367534675437345673465735467356473645

34567345763465734675347563476535467354763564735674357463576436457364753654736574367453675437456374653754637564376453765443567435764365743675437564376545367453764563745673457364576346357463754653746573467354675347356473654753647563476354765353467534765364753674537465376454367543765463754673547365476356347563745643756473567345674357346573645743657463576345764363457634756354763574637456375464357643756453764573647356475365347653746543765473657346574367345673546743567453675346754373456734657354673564736457365474356


















>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 151, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 142, in secondpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 119, in onerun
    (second, lista) = runprog([fas, second], lista)
  File "/Users/luxia/Documents/aoc7b.py", line 62, in runprog
    listan[a] = inputs.pop(0)
IndexError: pop from empty list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 147, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 139, in secondpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 119, in onerun
    (second, lista) = runprog([fas, second], lista)
  File "/Users/luxia/Documents/aoc7b.py", line 62, in runprog
    listan[a] = inputs.pop(0)
IndexError: pop from empty list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 146, in <module>
    firstpart()
  File "/Users/luxia/Documents/aoc7b.py", line 128, in firstpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 119, in onerun
    (second, lista) = runprog([fas, second], lista)
  File "/Users/luxia/Documents/aoc7b.py", line 62, in runprog
    listan[a] = inputs.pop(0)
IndexError: pop from empty list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 146, in <module>
    firstpart()
  File "/Users/luxia/Documents/aoc7b.py", line 128, in firstpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 119, in onerun
    (second, lista) = runprog([fas, second], olista)
  File "/Users/luxia/Documents/aoc7b.py", line 62, in runprog
    listan[a] = inputs.pop(0)
IndexError: pop from empty list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 146, in <module>
    firstpart()
  File "/Users/luxia/Documents/aoc7b.py", line 128, in firstpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 119, in onerun
    (second, olista) = runprog([fas, second], olista)
  File "/Users/luxia/Documents/aoc7b.py", line 62, in runprog
    listan[a] = inputs.pop(0)
IndexError: pop from empty list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 147, in <module>
    firstpart()
  File "/Users/luxia/Documents/aoc7b.py", line 128, in firstpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 119, in onerun
    (second, olista) = runprog([fas, second], olista)
  File "/Users/luxia/Documents/aoc7b.py", line 62, in runprog
    listan[a] = inputs.pop(0)
IndexError: pop from empty list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
0 0
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 147, in <module>
    firstpart()
  File "/Users/luxia/Documents/aoc7b.py", line 129, in firstpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 120, in onerun
    (second, olista) = runprog([fas, second], olista)
  File "/Users/luxia/Documents/aoc7b.py", line 62, in runprog
    listan[a] = inputs.pop(0)
IndexError: pop from empty list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
[0, 0]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 147, in <module>
    firstpart()
  File "/Users/luxia/Documents/aoc7b.py", line 129, in firstpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 120, in onerun
    (second, olista) = runprog([fas, second], olista)
  File "/Users/luxia/Documents/aoc7b.py", line 62, in runprog
    listan[a] = inputs.pop(0)
IndexError: pop from empty list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
init value: 0 phase: 0
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 146, in <module>
    firstpart()
  File "/Users/luxia/Documents/aoc7b.py", line 128, in firstpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 119, in onerun
    (second, olista) = runprog([fas, second], olista)
  File "/Users/luxia/Documents/aoc7b.py", line 62, in runprog
    listan[a] = inputs.pop(0)
IndexError: pop from empty list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
list of inputs: []
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 147, in <module>
    firstpart()
  File "/Users/luxia/Documents/aoc7b.py", line 129, in firstpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 120, in onerun
    (second, olista) = runprog([fas, second], olista)
  File "/Users/luxia/Documents/aoc7b.py", line 63, in runprog
    listan[a] = inputs.pop(0)
IndexError: pop from empty list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 1
list of inputs: [1, 5]
list of inputs: [5]
init value: 56 phase: 2
list of inputs: [2, 56]
list of inputs: [56]
init value: 560 phase: 3
list of inputs: [3, 560]
list of inputs: [560]
init value: 5601 phase: 4
list of inputs: [4, 5601]
list of inputs: [5601]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 1
list of inputs: [1, 5]
list of inputs: [5]
init value: 56 phase: 2
list of inputs: [2, 56]
list of inputs: [56]
init value: 560 phase: 4
list of inputs: [4, 560]
list of inputs: [560]
init value: 5602 phase: 3
list of inputs: [3, 5602]
list of inputs: [5602]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 1
list of inputs: [1, 5]
list of inputs: [5]
init value: 56 phase: 3
list of inputs: [3, 56]
list of inputs: [56]
init value: 561 phase: 2
list of inputs: [2, 561]
list of inputs: [561]
init value: 5610 phase: 4
list of inputs: [4, 5610]
list of inputs: [5610]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 1
list of inputs: [1, 5]
list of inputs: [5]
init value: 56 phase: 3
list of inputs: [3, 56]
list of inputs: [56]
init value: 561 phase: 4
list of inputs: [4, 561]
list of inputs: [561]
init value: 5612 phase: 2
list of inputs: [2, 5612]
list of inputs: [5612]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 1
list of inputs: [1, 5]
list of inputs: [5]
init value: 56 phase: 4
list of inputs: [4, 56]
list of inputs: [56]
init value: 562 phase: 2
list of inputs: [2, 562]
list of inputs: [562]
init value: 5620 phase: 3
list of inputs: [3, 5620]
list of inputs: [5620]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 1
list of inputs: [1, 5]
list of inputs: [5]
init value: 56 phase: 4
list of inputs: [4, 56]
list of inputs: [56]
init value: 562 phase: 3
list of inputs: [3, 562]
list of inputs: [562]
init value: 5621 phase: 2
list of inputs: [2, 5621]
list of inputs: [5621]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 2
list of inputs: [2, 5]
list of inputs: [5]
init value: 50 phase: 1
list of inputs: [1, 50]
list of inputs: [50]
init value: 506 phase: 3
list of inputs: [3, 506]
list of inputs: [506]
init value: 5061 phase: 4
list of inputs: [4, 5061]
list of inputs: [5061]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 2
list of inputs: [2, 5]
list of inputs: [5]
init value: 50 phase: 1
list of inputs: [1, 50]
list of inputs: [50]
init value: 506 phase: 4
list of inputs: [4, 506]
list of inputs: [506]
init value: 5062 phase: 3
list of inputs: [3, 5062]
list of inputs: [5062]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 2
list of inputs: [2, 5]
list of inputs: [5]
init value: 50 phase: 3
list of inputs: [3, 50]
list of inputs: [50]
init value: 501 phase: 1
list of inputs: [1, 501]
list of inputs: [501]
init value: 5016 phase: 4
list of inputs: [4, 5016]
list of inputs: [5016]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 2
list of inputs: [2, 5]
list of inputs: [5]
init value: 50 phase: 3
list of inputs: [3, 50]
list of inputs: [50]
init value: 501 phase: 4
list of inputs: [4, 501]
list of inputs: [501]
init value: 5012 phase: 1
list of inputs: [1, 5012]
list of inputs: [5012]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 2
list of inputs: [2, 5]
list of inputs: [5]
init value: 50 phase: 4
list of inputs: [4, 50]
list of inputs: [50]
init value: 502 phase: 1
list of inputs: [1, 502]
list of inputs: [502]
init value: 5026 phase: 3
list of inputs: [3, 5026]
list of inputs: [5026]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 2
list of inputs: [2, 5]
list of inputs: [5]
init value: 50 phase: 4
list of inputs: [4, 50]
list of inputs: [50]
init value: 502 phase: 3
list of inputs: [3, 502]
list of inputs: [502]
init value: 5021 phase: 1
list of inputs: [1, 5021]
list of inputs: [5021]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 3
list of inputs: [3, 5]
list of inputs: [5]
init value: 51 phase: 1
list of inputs: [1, 51]
list of inputs: [51]
init value: 516 phase: 2
list of inputs: [2, 516]
list of inputs: [516]
init value: 5160 phase: 4
list of inputs: [4, 5160]
list of inputs: [5160]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 3
list of inputs: [3, 5]
list of inputs: [5]
init value: 51 phase: 1
list of inputs: [1, 51]
list of inputs: [51]
init value: 516 phase: 4
list of inputs: [4, 516]
list of inputs: [516]
init value: 5162 phase: 2
list of inputs: [2, 5162]
list of inputs: [5162]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 3
list of inputs: [3, 5]
list of inputs: [5]
init value: 51 phase: 2
list of inputs: [2, 51]
list of inputs: [51]
init value: 510 phase: 1
list of inputs: [1, 510]
list of inputs: [510]
init value: 5106 phase: 4
list of inputs: [4, 5106]
list of inputs: [5106]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 3
list of inputs: [3, 5]
list of inputs: [5]
init value: 51 phase: 2
list of inputs: [2, 51]
list of inputs: [51]
init value: 510 phase: 4
list of inputs: [4, 510]
list of inputs: [510]
init value: 5102 phase: 1
list of inputs: [1, 5102]
list of inputs: [5102]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 3
list of inputs: [3, 5]
list of inputs: [5]
init value: 51 phase: 4
list of inputs: [4, 51]
list of inputs: [51]
init value: 512 phase: 1
list of inputs: [1, 512]
list of inputs: [512]
init value: 5126 phase: 2
list of inputs: [2, 5126]
list of inputs: [5126]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 3
list of inputs: [3, 5]
list of inputs: [5]
init value: 51 phase: 4
list of inputs: [4, 51]
list of inputs: [51]
init value: 512 phase: 2
list of inputs: [2, 512]
list of inputs: [512]
init value: 5120 phase: 1
list of inputs: [1, 5120]
list of inputs: [5120]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 4
list of inputs: [4, 5]
list of inputs: [5]
init value: 52 phase: 1
list of inputs: [1, 52]
list of inputs: [52]
init value: 526 phase: 2
list of inputs: [2, 526]
list of inputs: [526]
init value: 5260 phase: 3
list of inputs: [3, 5260]
list of inputs: [5260]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 4
list of inputs: [4, 5]
list of inputs: [5]
init value: 52 phase: 1
list of inputs: [1, 52]
list of inputs: [52]
init value: 526 phase: 3
list of inputs: [3, 526]
list of inputs: [526]
init value: 5261 phase: 2
list of inputs: [2, 5261]
list of inputs: [5261]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 4
list of inputs: [4, 5]
list of inputs: [5]
init value: 52 phase: 2
list of inputs: [2, 52]
list of inputs: [52]
init value: 520 phase: 1
list of inputs: [1, 520]
list of inputs: [520]
init value: 5206 phase: 3
list of inputs: [3, 5206]
list of inputs: [5206]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 4
list of inputs: [4, 5]
list of inputs: [5]
init value: 52 phase: 2
list of inputs: [2, 52]
list of inputs: [52]
init value: 520 phase: 3
list of inputs: [3, 520]
list of inputs: [520]
init value: 5201 phase: 1
list of inputs: [1, 5201]
list of inputs: [5201]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 4
list of inputs: [4, 5]
list of inputs: [5]
init value: 52 phase: 3
list of inputs: [3, 52]
list of inputs: [52]
init value: 521 phase: 1
list of inputs: [1, 521]
list of inputs: [521]
init value: 5216 phase: 2
list of inputs: [2, 5216]
list of inputs: [5216]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 4
list of inputs: [4, 5]
list of inputs: [5]
init value: 52 phase: 3
list of inputs: [3, 52]
list of inputs: [52]
init value: 521 phase: 2
list of inputs: [2, 521]
list of inputs: [521]
init value: 5210 phase: 1
list of inputs: [1, 5210]
list of inputs: [5210]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 0
list of inputs: [0, 6]
list of inputs: [6]
init value: 65 phase: 2
list of inputs: [2, 65]
list of inputs: [65]
init value: 650 phase: 3
list of inputs: [3, 650]
list of inputs: [650]
init value: 6501 phase: 4
list of inputs: [4, 6501]
list of inputs: [6501]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 0
list of inputs: [0, 6]
list of inputs: [6]
init value: 65 phase: 2
list of inputs: [2, 65]
list of inputs: [65]
init value: 650 phase: 4
list of inputs: [4, 650]
list of inputs: [650]
init value: 6502 phase: 3
list of inputs: [3, 6502]
list of inputs: [6502]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 0
list of inputs: [0, 6]
list of inputs: [6]
init value: 65 phase: 3
list of inputs: [3, 65]
list of inputs: [65]
init value: 651 phase: 2
list of inputs: [2, 651]
list of inputs: [651]
init value: 6510 phase: 4
list of inputs: [4, 6510]
list of inputs: [6510]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 0
list of inputs: [0, 6]
list of inputs: [6]
init value: 65 phase: 3
list of inputs: [3, 65]
list of inputs: [65]
init value: 651 phase: 4
list of inputs: [4, 651]
list of inputs: [651]
init value: 6512 phase: 2
list of inputs: [2, 6512]
list of inputs: [6512]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 0
list of inputs: [0, 6]
list of inputs: [6]
init value: 65 phase: 4
list of inputs: [4, 65]
list of inputs: [65]
init value: 652 phase: 2
list of inputs: [2, 652]
list of inputs: [652]
init value: 6520 phase: 3
list of inputs: [3, 6520]
list of inputs: [6520]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 0
list of inputs: [0, 6]
list of inputs: [6]
init value: 65 phase: 4
list of inputs: [4, 65]
list of inputs: [65]
init value: 652 phase: 3
list of inputs: [3, 652]
list of inputs: [652]
init value: 6521 phase: 2
list of inputs: [2, 6521]
list of inputs: [6521]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 2
list of inputs: [2, 6]
list of inputs: [6]
init value: 60 phase: 0
list of inputs: [0, 60]
list of inputs: [60]
init value: 605 phase: 3
list of inputs: [3, 605]
list of inputs: [605]
init value: 6051 phase: 4
list of inputs: [4, 6051]
list of inputs: [6051]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 2
list of inputs: [2, 6]
list of inputs: [6]
init value: 60 phase: 0
list of inputs: [0, 60]
list of inputs: [60]
init value: 605 phase: 4
list of inputs: [4, 605]
list of inputs: [605]
init value: 6052 phase: 3
list of inputs: [3, 6052]
list of inputs: [6052]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 2
list of inputs: [2, 6]
list of inputs: [6]
init value: 60 phase: 3
list of inputs: [3, 60]
list of inputs: [60]
init value: 601 phase: 0
list of inputs: [0, 601]
list of inputs: [601]
init value: 6015 phase: 4
list of inputs: [4, 6015]
list of inputs: [6015]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 2
list of inputs: [2, 6]
list of inputs: [6]
init value: 60 phase: 3
list of inputs: [3, 60]
list of inputs: [60]
init value: 601 phase: 4
list of inputs: [4, 601]
list of inputs: [601]
init value: 6012 phase: 0
list of inputs: [0, 6012]
list of inputs: [6012]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 2
list of inputs: [2, 6]
list of inputs: [6]
init value: 60 phase: 4
list of inputs: [4, 60]
list of inputs: [60]
init value: 602 phase: 0
list of inputs: [0, 602]
list of inputs: [602]
init value: 6025 phase: 3
list of inputs: [3, 6025]
list of inputs: [6025]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 2
list of inputs: [2, 6]
list of inputs: [6]
init value: 60 phase: 4
list of inputs: [4, 60]
list of inputs: [60]
init value: 602 phase: 3
list of inputs: [3, 602]
list of inputs: [602]
init value: 6021 phase: 0
list of inputs: [0, 6021]
list of inputs: [6021]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 3
list of inputs: [3, 6]
list of inputs: [6]
init value: 61 phase: 0
list of inputs: [0, 61]
list of inputs: [61]
init value: 615 phase: 2
list of inputs: [2, 615]
list of inputs: [615]
init value: 6150 phase: 4
list of inputs: [4, 6150]
list of inputs: [6150]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 3
list of inputs: [3, 6]
list of inputs: [6]
init value: 61 phase: 0
list of inputs: [0, 61]
list of inputs: [61]
init value: 615 phase: 4
list of inputs: [4, 615]
list of inputs: [615]
init value: 6152 phase: 2
list of inputs: [2, 6152]
list of inputs: [6152]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 3
list of inputs: [3, 6]
list of inputs: [6]
init value: 61 phase: 2
list of inputs: [2, 61]
list of inputs: [61]
init value: 610 phase: 0
list of inputs: [0, 610]
list of inputs: [610]
init value: 6105 phase: 4
list of inputs: [4, 6105]
list of inputs: [6105]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 3
list of inputs: [3, 6]
list of inputs: [6]
init value: 61 phase: 2
list of inputs: [2, 61]
list of inputs: [61]
init value: 610 phase: 4
list of inputs: [4, 610]
list of inputs: [610]
init value: 6102 phase: 0
list of inputs: [0, 6102]
list of inputs: [6102]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 3
list of inputs: [3, 6]
list of inputs: [6]
init value: 61 phase: 4
list of inputs: [4, 61]
list of inputs: [61]
init value: 612 phase: 0
list of inputs: [0, 612]
list of inputs: [612]
init value: 6125 phase: 2
list of inputs: [2, 6125]
list of inputs: [6125]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 3
list of inputs: [3, 6]
list of inputs: [6]
init value: 61 phase: 4
list of inputs: [4, 61]
list of inputs: [61]
init value: 612 phase: 2
list of inputs: [2, 612]
list of inputs: [612]
init value: 6120 phase: 0
list of inputs: [0, 6120]
list of inputs: [6120]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 4
list of inputs: [4, 6]
list of inputs: [6]
init value: 62 phase: 0
list of inputs: [0, 62]
list of inputs: [62]
init value: 625 phase: 2
list of inputs: [2, 625]
list of inputs: [625]
init value: 6250 phase: 3
list of inputs: [3, 6250]
list of inputs: [6250]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 4
list of inputs: [4, 6]
list of inputs: [6]
init value: 62 phase: 0
list of inputs: [0, 62]
list of inputs: [62]
init value: 625 phase: 3
list of inputs: [3, 625]
list of inputs: [625]
init value: 6251 phase: 2
list of inputs: [2, 6251]
list of inputs: [6251]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 4
list of inputs: [4, 6]
list of inputs: [6]
init value: 62 phase: 2
list of inputs: [2, 62]
list of inputs: [62]
init value: 620 phase: 0
list of inputs: [0, 620]
list of inputs: [620]
init value: 6205 phase: 3
list of inputs: [3, 6205]
list of inputs: [6205]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 4
list of inputs: [4, 6]
list of inputs: [6]
init value: 62 phase: 2
list of inputs: [2, 62]
list of inputs: [62]
init value: 620 phase: 3
list of inputs: [3, 620]
list of inputs: [620]
init value: 6201 phase: 0
list of inputs: [0, 6201]
list of inputs: [6201]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 4
list of inputs: [4, 6]
list of inputs: [6]
init value: 62 phase: 3
list of inputs: [3, 62]
list of inputs: [62]
init value: 621 phase: 0
list of inputs: [0, 621]
list of inputs: [621]
init value: 6215 phase: 2
list of inputs: [2, 6215]
list of inputs: [6215]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 4
list of inputs: [4, 6]
list of inputs: [6]
init value: 62 phase: 3
list of inputs: [3, 62]
list of inputs: [62]
init value: 621 phase: 2
list of inputs: [2, 621]
list of inputs: [621]
init value: 6210 phase: 0
list of inputs: [0, 6210]
list of inputs: [6210]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 1
list of inputs: [1, 5]
list of inputs: [5]
init value: 56 phase: 3
list of inputs: [3, 56]
list of inputs: [56]
init value: 561 phase: 4
list of inputs: [4, 561]
list of inputs: [561]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 1
list of inputs: [1, 5]
list of inputs: [5]
init value: 56 phase: 4
list of inputs: [4, 56]
list of inputs: [56]
init value: 562 phase: 3
list of inputs: [3, 562]
list of inputs: [562]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 3
list of inputs: [3, 5]
list of inputs: [5]
init value: 51 phase: 1
list of inputs: [1, 51]
list of inputs: [51]
init value: 516 phase: 4
list of inputs: [4, 516]
list of inputs: [516]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 3
list of inputs: [3, 5]
list of inputs: [5]
init value: 51 phase: 4
list of inputs: [4, 51]
list of inputs: [51]
init value: 512 phase: 1
list of inputs: [1, 512]
list of inputs: [512]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 4
list of inputs: [4, 5]
list of inputs: [5]
init value: 52 phase: 1
list of inputs: [1, 52]
list of inputs: [52]
init value: 526 phase: 3
list of inputs: [3, 526]
list of inputs: [526]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 0
list of inputs: [0, 0]
list of inputs: [0]
init value: 5 phase: 4
list of inputs: [4, 5]
list of inputs: [5]
init value: 52 phase: 3
list of inputs: [3, 52]
list of inputs: [52]
init value: 521 phase: 1
list of inputs: [1, 521]
list of inputs: [521]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 0
list of inputs: [0, 6]
list of inputs: [6]
init value: 65 phase: 3
list of inputs: [3, 65]
list of inputs: [65]
init value: 651 phase: 4
list of inputs: [4, 651]
list of inputs: [651]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 0
list of inputs: [0, 6]
list of inputs: [6]
init value: 65 phase: 4
list of inputs: [4, 65]
list of inputs: [65]
init value: 652 phase: 3
list of inputs: [3, 652]
list of inputs: [652]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 3
list of inputs: [3, 6]
list of inputs: [6]
init value: 61 phase: 0
list of inputs: [0, 61]
list of inputs: [61]
init value: 615 phase: 4
list of inputs: [4, 615]
list of inputs: [615]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 3
list of inputs: [3, 6]
list of inputs: [6]
init value: 61 phase: 4
list of inputs: [4, 61]
list of inputs: [61]
init value: 612 phase: 0
list of inputs: [0, 612]
list of inputs: [612]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 4
list of inputs: [4, 6]
list of inputs: [6]
init value: 62 phase: 0
list of inputs: [0, 62]
list of inputs: [62]
init value: 625 phase: 3
list of inputs: [3, 625]
list of inputs: [625]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 1
list of inputs: [1, 0]
list of inputs: [0]
init value: 6 phase: 4
list of inputs: [4, 6]
list of inputs: [6]
init value: 62 phase: 3
list of inputs: [3, 62]
list of inputs: [62]
init value: 621 phase: 0
list of inputs: [0, 621]
list of inputs: [621]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 3
list of inputs: [3, 0]
list of inputs: [0]
init value: 1 phase: 0
list of inputs: [0, 1]
list of inputs: [1]
init value: 15 phase: 1
list of inputs: [1, 15]
list of inputs: [15]
init value: 156 phase: 4
list of inputs: [4, 156]
list of inputs: [156]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 3
list of inputs: [3, 0]
list of inputs: [0]
init value: 1 phase: 0
list of inputs: [0, 1]
list of inputs: [1]
init value: 15 phase: 4
list of inputs: [4, 15]
list of inputs: [15]
init value: 152 phase: 1
list of inputs: [1, 152]
list of inputs: [152]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 3
list of inputs: [3, 0]
list of inputs: [0]
init value: 1 phase: 1
list of inputs: [1, 1]
list of inputs: [1]
init value: 16 phase: 0
list of inputs: [0, 16]
list of inputs: [16]
init value: 165 phase: 4
list of inputs: [4, 165]
list of inputs: [165]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 3
list of inputs: [3, 0]
list of inputs: [0]
init value: 1 phase: 1
list of inputs: [1, 1]
list of inputs: [1]
init value: 16 phase: 4
list of inputs: [4, 16]
list of inputs: [16]
init value: 162 phase: 0
list of inputs: [0, 162]
list of inputs: [162]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 3
list of inputs: [3, 0]
list of inputs: [0]
init value: 1 phase: 4
list of inputs: [4, 1]
list of inputs: [1]
init value: 12 phase: 0
list of inputs: [0, 12]
list of inputs: [12]
init value: 125 phase: 1
list of inputs: [1, 125]
list of inputs: [125]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 3
list of inputs: [3, 0]
list of inputs: [0]
init value: 1 phase: 4
list of inputs: [4, 1]
list of inputs: [1]
init value: 12 phase: 1
list of inputs: [1, 12]
list of inputs: [12]
init value: 126 phase: 0
list of inputs: [0, 126]
list of inputs: [126]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 4
list of inputs: [4, 0]
list of inputs: [0]
init value: 2 phase: 0
list of inputs: [0, 2]
list of inputs: [2]
init value: 25 phase: 1
list of inputs: [1, 25]
list of inputs: [25]
init value: 256 phase: 3
list of inputs: [3, 256]
list of inputs: [256]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 4
list of inputs: [4, 0]
list of inputs: [0]
init value: 2 phase: 0
list of inputs: [0, 2]
list of inputs: [2]
init value: 25 phase: 3
list of inputs: [3, 25]
list of inputs: [25]
init value: 251 phase: 1
list of inputs: [1, 251]
list of inputs: [251]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 4
list of inputs: [4, 0]
list of inputs: [0]
init value: 2 phase: 1
list of inputs: [1, 2]
list of inputs: [2]
init value: 26 phase: 0
list of inputs: [0, 26]
list of inputs: [26]
init value: 265 phase: 3
list of inputs: [3, 265]
list of inputs: [265]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 4
list of inputs: [4, 0]
list of inputs: [0]
init value: 2 phase: 1
list of inputs: [1, 2]
list of inputs: [2]
init value: 26 phase: 3
list of inputs: [3, 26]
list of inputs: [26]
init value: 261 phase: 0
list of inputs: [0, 261]
list of inputs: [261]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 4
list of inputs: [4, 0]
list of inputs: [0]
init value: 2 phase: 3
list of inputs: [3, 2]
list of inputs: [2]
init value: 21 phase: 0
list of inputs: [0, 21]
list of inputs: [21]
init value: 215 phase: 1
list of inputs: [1, 215]
list of inputs: [215]
init value: 0 phase: 2
list of inputs: [2, 0]
list of inputs: [0]
init value: 0 phase: 4
list of inputs: [4, 0]
list of inputs: [0]
init value: 2 phase: 3
list of inputs: [3, 2]
list of inputs: [2]
init value: 21 phase: 1
list of inputs: [1, 21]
list of inputs: [21]
init value: 216 phase: 0
list of inputs: [0, 216]
list of inputs: [216]
init value: 0 phase: 3
list of inputs: [3, 0]
list of inputs: [0]
init value: 1 phase: 0
list of inputs: [0, 1]
list of inputs: [1]
init value: 15 phase: 1
list of inputs: [1, 15]
list of inputs: [15]
init value: 156 phase: 2
list of inputs: [2, 156]
list of inputs: [156]
init value: 1560 phase: 4
list of inputs: [4, 1560]
list of inputs: [1560]
init value: 0 phase: 3
list of inputs: [3, 0]
list of inputs: [0]
init value: 1 phase: 0
list of inputs: [0, 1]
list of inputs: [1]
init value: 15 phase: 1
list of inputs: [1, 15]
list of inputs: [15]
init value: 156 phase: 4
list of inputs: [4, 156]
list of inputs: [156]
init value: 1562 phase: 2
list of inputs: [2, 1562]
list of inputs: [1562]
init value: 0 phase: 3
list of inputs: [3, 0]
list of inputs: [0]
init value: 1 phase: 0
list of inputs: [0, 1]
list of inputs: [1]
init value: 15 phase: 2
list of inputs: [2, 15]
list of inputs: [15]
init value: 150 phase: 1
list of inputs: [1, 150]
list of inputs: [150]
init value: 1506 phase: 4
list of inputs: [4, 1506]
list of inputs: [1506]
init value: 0 phase: 3
list of inputs: [3, 0]
list of inputs: [0]
init value: 1 phase: 0
list of inputs: [0, 1]
list of inputs: [1]
init value: 15 phase: 2
list of inputs: [2, 15]
list of inputs: [15]
init value: 150 phase: 4
list of inputs: [4, 150]
list of inputs: [150]
init value: 1502 phase: 1
list of inputs: [1, 1502]
list of inputs: [1502]
init value: 0 phase: 3
list of inputs: [3, 0]
list of inputs: [0]
init value: 1 phase: 0
list of inputs: [0, 1]
list of inputs: [1]
init value: 15 phase: 4
list of inputs: [4, 15]
list of inputs: [15]
init value: 152 phase: 1
list of inputs: [1, 152]
list of inputs: [152]
init value: 1526 phase: 2
list of inputs: [2, 1526]
list of inputs: [1526]
init value: 0 phase: 3
list of inputs: [3, 0]
list of inputs: [0]
init value: 1 phase: 0
list of inputs: [0, 1]
list of inputs: [1]
init value: 15 phase: 4
list of inputs: [4, 15]
list of inputs: [15]
init value: 152 phase: 2
list of inputs: [2, 152]
list of inputs: [152]
init value: 1520 phase: 1
list of inputs: [1, 1520]
list of inputs: [1520]
init value: 0 phase: 3
list of inputs: [3, 0]
list of inputs: [0]
init value: 1 phase: 1
list of inputs: [1, 1]
list of inputs: [1]
init value: 16 phase: 0
list of inputs: [0, 16]
list of inputs: [16]
init value: 165 phase: 2
list of inputs: [2, 165]
list of inputs: [165]
init value: 1650 phase: 4
list of inputs: [4, 1650]
list of inputs: [1650]
init value: 0 phase: 3
list of inputs: [3, 0]
list of inputs: [0]
init value: 1 phase: 1
list of inputs: [1, 1]
list of inputs: [1]
init value: 16 phase: 0
list of inputs: [0, 16]
list of inputs: [16]
init value: 165 phase: 4
list of inputs: [4, 165]
list of inputs: [165]
init value: 1652 phase: 2
list of inputs: [2, 1652]
list of inputs: [1652]
init value: 0 phase: 3
list of inputs: [3, 0]
list of inputs: [0]
init value: 1 phase: 1
list of inputs: [1, 1]
list of inputs: [1]
init value: 16 phase: 2
list of inputs: [2, 16]
list of inputs: [16]
init value: 160 phase: 0
list of inputs: [0, 160]
list of inputs: [160]
init value: 1605 phase: 4
list of inputs: [4, 1605]
list of inputs: [1605]
init value: 0 phase: 3
list of inputs: [3, 0]
list of inputs: [0]
init value: 1 phase: 1
list of inputs: [1, 1]
list of inputs: [1]
init value: 16 phase: 2
list of inputs: [2, 16]
list of inputs: [16]
init value: 160 phase: 4
list of inputs: [4, 160]
list of inputs: [160]
init value: 1602 phase: 0
list of inputs: [0, 1602]
list of inputs: [1602]
init value: 0 phase: 3
list of inputs: [3, 0]
list of inputs: [0]
init value: 1 phase: 1
list of inputs: [1, 1]
list of inputs: [1]
init value: 16 phase: 4
list of inputs: [4, 16]
list of inputs: [16]
init value: 162 phase: 0
list of inputs: [0, 162]
list of inputs: [162]
init value: 1625Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 150, in <module>
    firstpart()
  File "/Users/luxia/Documents/aoc7b.py", line 132, in firstpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 122, in onerun
    print("init value:", second, "phase:", fas)
KeyboardInterrupt
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
list of inputs: [0, 0]
list of inputs: [0]
list of inputs: [1, 5]
list of inputs: [5]
list of inputs: [2, 56]
list of inputs: [56]
list of inputs: [3, 560]
list of inputs: [560]
list of inputs: [4, 5601]
list of inputs: [5601]
list of inputs: [0, 0]
list of inputs: [0]
list of inputs: [1, 5]
list of inputs: [5]
list of inputs: [2, 56]
list of inputs: [56]
list of inputs: [4, 560]
list of inputs: [560]
list of inputs: [3, 5602]
list of inputs: [5602]
list of inputs: [0, 0]
list of inputs: [0]
list of inputs: [1, 5]
list of inputs: [5]
list of inputs: [3, 56]
list of inputs: [56]
list of inputs: [2, 561]
list of inputs: [561]
list of inputs: [4, 5610]
list of inputs: [5610]
list of inputs: [0, 0]
list of inputs: [0]
list of inputs: [1, 5]
list of inputs: [5]
list of inputs: [3, 56]
list of inputs: [56]
list of inputs: [4, 561]
list of inputs: [561]
list of inputs: [2, 5612]
list of inputs: [5612]
list of inputs: [0, 0]
list of inputs: [0]
list of inputs: [1, 5]
list of inputs: [5]
list of inputs: [4, 56]
list of inputs: [56]
list of inputs: [2, 562]
list of inputs: [562]
list of inputs: [3, 5620]
list of inputs: [5620]
list of inputs: [0, 0]
list of inputs: [0]
list of inputs: [1, 5]
list of inputs: [5]
list of inputs: [4, 56]
list of inputs: [56]
list of inputs: [3, 562]
list of inputs: [562]
list of inputs: [2, 5621]Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 150, in <module>
    firstpart()
  File "/Users/luxia/Documents/aoc7b.py", line 132, in firstpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 123, in onerun
    (second, olista) = runprog([fas, second], olista)
  File "/Users/luxia/Documents/aoc7b.py", line 62, in runprog
    print("list of inputs:",inputs)
KeyboardInterrupt
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
maximalt värde: 65210 producerades av fasvärdena: (1, 0, 4, 3, 2)
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 152, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 142, in secondpart
    runlist = startlist # initiate the run list for the first time
NameError: name 'startlist' is not defined
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 152, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 144, in secondpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 124, in onerun
    (second, olista) = runprog([fas, second], olista)
  File "/Users/luxia/Documents/aoc7b.py", line 63, in runprog
    listan[a] = inputs.pop(0)
IndexError: pop from empty list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 152, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 144, in secondpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 124, in onerun
    (second, olista) = runprog([fas, second], olista)
  File "/Users/luxia/Documents/aoc7b.py", line 63, in runprog
    listan[a] = inputs.pop(0)
IndexError: pop from empty list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
(5, 6, 7, 8, 9)
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 153, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 145, in secondpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 125, in onerun
    (second, olista) = runprog([fas, second], olista)
  File "/Users/luxia/Documents/aoc7b.py", line 63, in runprog
    listan[a] = inputs.pop(0)
IndexError: pop from empty list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 166, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 158, in secondpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 128, in onerun
    (out1, olista) = runprog([amp1, inputval], olista)
  File "/Users/luxia/Documents/aoc7b.py", line 63, in runprog
    listan[a] = inputs.pop(0)
IndexError: pop from empty list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 166, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 158, in secondpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 127, in onerun
    (out1, olista) = runprog([amp1, inputval], olista)
  File "/Users/luxia/Documents/aoc7b.py", line 62, in runprog
    listan[a] = inputs.pop(0)
IndexError: pop from empty list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 168, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 160, in secondpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 127, in onerun
    print(runprog([amp1, inputval], olista))
  File "/Users/luxia/Documents/aoc7b.py", line 62, in runprog
    listan[a] = inputs.pop(0)
IndexError: pop from empty list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
[5, 0]
[0]
[0]
[]
[]
[]
[]
[]
[]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 169, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 161, in secondpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 128, in onerun
    print(runprog([amp1, inputval], olista))
  File "/Users/luxia/Documents/aoc7b.py", line 63, in runprog
    listan[a] = inputs.pop(0)
IndexError: pop from empty list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 169, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 161, in secondpart
    (output, runlist) = onerun(inputval, commands, runlist)
  File "/Users/luxia/Documents/aoc7b.py", line 128, in onerun
    print(runprog([amp1, inputval], olista))
  File "/Users/luxia/Documents/aoc7b.py", line 63, in runprog
    listan[a] = inputs.pop(0)
IndexError: pop from empty list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 165, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 158, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 127, in onerun
    while counter5 >= 0:
UnboundLocalError: local variable 'counter5' referenced before assignment
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 169, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 162, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 132, in onerun
    (counter1, out1, olista1) = runprog(counter1, [amp1, initval], olista1)
UnboundLocalError: local variable 'olista1' referenced before assignment
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 174, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 167, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 138, in onerun
    (counter2, out2, olista2) = runprog(counter2, [amp2, out1], olista2)
  File "/Users/luxia/Documents/aoc7b.py", line 54, in runprog
    listan[cepa] = apa + bepa
TypeError: can only concatenate list (not "int") to list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 175, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 168, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 139, in onerun
    (counter2, out2, olista2) = runprog(counter2, [amp2, out1], olista2)
  File "/Users/luxia/Documents/aoc7b.py", line 54, in runprog
    listan[cepa] = apa + bepa
TypeError: can only concatenate list (not "int") to list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
0 6 [1]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 176, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 169, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 140, in onerun
    (counter2, out2, olista2) = runprog(counter2, [amp2, out1], olista2)
  File "/Users/luxia/Documents/aoc7b.py", line 54, in runprog
    listan[cepa] = apa + bepa
TypeError: can only concatenate list (not "int") to list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
one run is run
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 179, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 172, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 139, in onerun
    (counter2, out2, olista2) = runprog(counter2, input2, olista2)
  File "/Users/luxia/Documents/aoc7b.py", line 21, in runprog
    op0 = get_digit(instr, 0)
KeyboardInterrupt
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
one run is run
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 179, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 172, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 137, in onerun
    (counter1, out1, olista1) = runprog(counter1, input1, olista1)
  File "/Users/luxia/Documents/aoc7b.py", line 54, in runprog
    listan[cepa] = apa + bepa
KeyboardInterrupt
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
one run is run
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 179, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 172, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 145, in onerun
    (counter5, input5, out5, olista5) = runprog(counter5, input5, olista5)
  File "/Users/luxia/Documents/aoc7b.py", line 54, in runprog
    listan[cepa] = apa + bepa
KeyboardInterrupt
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
2: [6, 1]
3: [7, 4]
4: [8, 11]
5: [9, 26]
1: [57]
one run is run
2: [6, 1]
3: [7, 4]
4: [9, 11]
5: [8, 27]
1: [58]
2: [120]
3: [244]
4: [492]
5: [988]
1: [1980]
2: [3964]
3: [7932]
4: [15868]
5: [31740]
1: [63484]
2: [126972]
3: [253948]
4: [507900]
5: [1015804]
1: [2031612]
2: [4063228]
3: [8126460]
4: [16252924]
5: [32505852]
1: [65011708]
2: [130023420]
3: [260046844]
4: [520093692]
5: [1040187388]
1: [2080374780]
2: [4160749564]
3: [8321499132]
4: [16642998268]
5: [33285996540]
1: [66571993084]
2: [133143986172]
3: [266287972348]
4: [532575944700]
5: [1065151889404]
1: [2130303778812]
2: [4260607557628]
3: [8521215115260]
4: [17042430230524]
5: [34084860461052]
1: [68169720922108]
2: [136339441844220]
3: [272678883688444]
4: [545357767376892]
5: [1090715534753788]
1: [2181431069507580]
2: [4362862139015164]
3: [8725724278030332]
4: [17451448556060668]
5: [34902897112121340]
1: [69805794224242684]
2: [139611588448485372]
3: [279223176896970748]
4: [558446353793941500]
5: [1116892707587883004]
1: [2233785415175766012]
2: [4467570830351532028]
3: [8935141660703064060]
4: [17870283321406128124]
5: [35740566642812256252]
1: [71481133285624512508]
2: [142962266571249025020]
3: [285924533142498050044]
4: [571849066284996100092]
5: [1143698132569992200188]
1: [2287396265139984400380]
2: [4574792530279968800764]
3: [9149585060559937601532]
4: [18299170121119875203068]
5: [36598340242239750406140]
1: [73196680484479500812284]
2: [146393360968959001624572]
3: [292786721937918003249148]
4: [585573443875836006498300]
5: [1171146887751672012996604]
1: [2342293775503344025993212]
2: [4684587551006688051986428]
3: [9369175102013376103972860]
4: [18738350204026752207945724]
5: [37476700408053504415891452]
1: [74953400816107008831782908]
2: [149906801632214017663565820]
3: [299813603264428035327131644]
4: [599627206528856070654263292]
5: [1199254413057712141308526588]
1: [2398508826115424282617053180]
2: [4797017652230848565234106364]
3: [9594035304461697130468212732]
4: [19188070608923394260936425468]
5: [38376141217846788521872850940]
1: [76752282435693577043745701884]
2: [153504564871387154087491403772]
3: [307009129742774308174982807548]
4: [614018259485548616349965615100]
5: [1228036518971097232699931230204]
1: [2456073037942194465399862460412]
2: [4912146075884388930799724920828]
3: [9824292151768777861599449841660]
4: [19648584303537555723198899683324]
5: [39297168607075111446397799366652]
1: [78594337214150222892795598733308]
2: [157188674428300445785591197466620]
3: [314377348856600891571182394933244]
4: [628754697713201783142364789866492]
5: [1257509395426403566284729579732988]
1: [2515018790852807132569459159465980]
2: [5030037581705614265138918318931964]
3: [10060075163411228530277836637863932]
4: [20120150326822457060555673275727868]
5: [40240300653644914121111346551455740]
1: [80480601307289828242222693102911484]
2: [160961202614579656484445386205822972]
3: [321922405229159312968890772411645948]
4: [643844810458318625937781544823291900]
5: [1287689620916637251875563089646583804]
1: [2575379241833274503751126179293167612]
2: [5150758483666549007502252358586335228]
3: [10301516967333098015004504717172670460]
4: [20603033934666196030009009434345340924]
5: [41206067869332392060018018868690681852]
1: [82412135738664784120036037737381363708]
2: [164824271477329568240072075474762727420]
3: [329648542954659136480144150949525454844]
4: [659297085909318272960288301899050909692]
5: [1318594171818636545920576603798101819388]
1: [2637188343637273091841153207596203638780]
2: [5274376687274546183682306415192407277564]
3: [10548753374549092367364612830384814555132]
4: [21097506749098184734729225660769629110268]
5: [42195013498196369469458451321539258220540]
1: [84390026996392738938916902643078516441084]
2: [168780053992785477877833805286157032882172]
3: [337560107985570955755667610572314065764348]
4: [675120215971141911511335221144628131528700]
5: [1350240431942283823022670442289256263057404]
1: [2700480863884567646045340884578512526114812]
2: [5400961727769135292090681769157025052229628]
3: [10801923455538270584181363538314050104459260]
4: [21603846911076541168362727076628100208918524]
5: [43207693822153082336725454153256200417837052]
1: [86415387644306164673450908306512400835674108]
2: [172830775288612329346901816613024801671348220]
3: [345661550577224658693803633226049603342696444]
4: [691323101154449317387607266452099206685392892]
5: [1382646202308898634775214532904198413370785788]
1: [2765292404617797269550429065808396826741571580]
2: [5530584809235594539100858131616793653483143164]
3: [11061169618471189078201716263233587306966286332]
4: [22122339236942378156403432526467174613932572668]
5: [44244678473884756312806865052934349227865145340]
1: [88489356947769512625613730105868698455730290684]
2: [176978713895539025251227460211737396911460581372]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 184, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 177, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 139, in onerun
    print("2:", input2)
KeyboardInterrupt
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
utdata [1]
2: [6, 1]
3: [7, 4]
4: [8, 11]
5: [9, 26]
1: [57]
one run is run
utdata [1]
2: [6, 1]
3: [7, 4]
4: [9, 11]
5: [8, 27]
1: [58]
utdata [120]
2: [120]
3: [244]
4: [492]
5: [988]
1: [1980]
utdata [3964]
2: [3964]
3: [7932]
4: [15868]
5: [31740]
1: [63484]
utdata [126972]
2: [126972]
3: [253948]
4: [507900]
5: [1015804]
1: [2031612]
utdata [4063228]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 185, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 178, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 139, in onerun
    print("utdata", out1)
KeyboardInterrupt
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
utdata1 [1]
2: None
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 185, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 178, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 141, in onerun
    (counter2, input2, out2, olista2) = runprog(counter2, input2, olista2)
  File "/Users/luxia/Documents/aoc7b.py", line 61, in runprog
    if len(inputs) == 0:
TypeError: object of type 'NoneType' has no len()
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
2 before: [6]
utdata1 [1]
2: None
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 186, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 179, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 142, in onerun
    (counter2, input2, out2, olista2) = runprog(counter2, input2, olista2)
  File "/Users/luxia/Documents/aoc7b.py", line 61, in runprog
    if len(inputs) == 0:
TypeError: object of type 'NoneType' has no len()
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
2 before: [6]
utdata1 [1]
2: [6, [1]]
Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 186, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 179, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 142, in onerun
    (counter2, input2, out2, olista2) = runprog(counter2, input2, olista2)
  File "/Users/luxia/Documents/aoc7b.py", line 54, in runprog
    listan[cepa] = apa + bepa
TypeError: can only concatenate list (not "int") to list
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
2 before: [6]
utdata1 [1]
2: [6, 1]
3: [7, 4]
4: [8, 11]
5: [9, 26]
1: [57]
one run is run
2 before: [6]
utdata1 [1]
2: [6, 1]
3: [7, 4]
4: [9, 11]Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 186, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 179, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 147, in onerun
    print("4:", input4)
KeyboardInterrupt
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
input list before pop: [5, 0]
input list after: [0]
input list before pop: [0]
input list after: []
2 before: [6]
utdata1 [1]
2: [6, 1]
input list before pop: [6, 1]
input list after: [1]
input list before pop: [1]
input list after: []
3: [7, 4]
input list before pop: [7, 4]
input list after: [4]
input list before pop: [4]
input list after: []
4: [8, 11]
input list before pop: [8, 11]
input list after: [11]
input list before pop: [11]
input list after: []
5: [9, 26]
input list before pop: [9, 26]
input list after: [26]
input list before pop: [26]
input list after: []
1: [57]
one run is run
input list before pop: [5, 0]
input list after: [0]
input list before pop: [0]
input list after: []
2 before: [6]
utdata1 [1]
2: [6, 1]
input list before pop: [6, 1]
input list after: [1]
input list before pop: [1]
input list after: []
3: [7, 4]
input list before pop: [7, 4]
input list after: [4]
input list before pop: [4]
input list after: []
4: [9, 11]
input list before pop: [9, 11]
input list after: [11]
input list before pop: [11]
input list after: []
5: [8, 27]
input list before pop: [8, 27]
input list after: [27]
input list before pop: [27]
input list after: []
1: [58]Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 188, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 181, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 155, in onerun
    print("1:", input1)
KeyboardInterrupt
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
input list before pop: [5, 0]
input list after pop: [0]
input list before pop: [0]
input list after pop: []
input2 before: [6]
out1 [1]
input2 after: [6, 1]
input list before pop: [6, 1]
input list after pop: [1]
input list before pop: [1]
input list after pop: []
input3: [7, 4]
input list before pop: [7, 4]
input list after pop: [4]
input list before pop: [4]
input list after pop: []
input4: [8, 11]
input list before pop: [8, 11]
input list after pop: [11]
input list before pop: [11]
input list after pop: []
input5: [9, 26]
input list before pop: [9, 26]
input list after pop: [26]
input list before pop: [26]
input list after pop: []
input1: [57]
one run is run
input list before pop: [5, 0]
input list after pop: [0]
input list before pop: [0]
input list after pop: []
input2 before: [6]
out1 [1]
input2 after: [6, 1]
input list before pop: [6, 1]
input list after pop: [1]
input list before pop: [1]
input list after pop: []
input3: [7, 4]
input list before pop: [7, 4]
input list after pop: [4]
input list before pop: [4]
input list after pop: []
input4: Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 188, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 181, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 149, in onerun
    print("input4:", input4)
KeyboardInterrupt
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
input list before pop: [5, 0]
input list after pop: [0]
input list before pop: [0]
input list after pop: []
input2 before: [6]
out1 [1]
input2 after: [6, 1]
input list before pop: [6, 1]
input list after pop: [1]
input list before pop: [1]
input list after pop: []
input3: [7, 4]
input list before pop: [7, 4]
input list after pop: [4]
input list before pop: [4]
input list after pop: []
input4: [8, 11]
input list before pop: [8, 11]
input list after pop: [11]
input list before pop: [11]
input list after pop: []
input5: [9, 26]
input list before pop: [9, 26]
input list after pop: [26]
input list before pop: [26]
input list after pop: []
input1: [57]
--------------one run is run-------------------
input list before pop: [5, 0]
input list after pop: [0]
input list before pop: [0]
input list after pop: []
input2 before: [6]
out1 [1]
input2 after: [6, 1]
input list before pop: [6, 1]
input list after pop: [1]
input list before pop: [1]
input list after pop: []
input3: [7, 4]
input list before pop: [7, 4]
input list after pop: [4]
input list before pop: [4]
input list after pop: []
input4: [9, 11]
input list before pop: [9, 11]
input list after pop: [11]
input list before pop: [11]
input list after pop: []
input5: [8, 27]
input list before pop: [8, 27]
input list after pop: [27]
input list before pop: [27]
input list after pop: []
input1: [58]
input list before pop: [58]
input list after pop: []
input2 before: []
out1 [120]
input2 after: [120]
input list before pop: [120]
input list after pop: []
input3: [244]
input list before pop: [244]
input list after pop: []
input4: [492]
input list before pop: [492]
input list after pop: []
input5: [988]
input list before pop: [988]
input list after pop: []
input1: [1980]
input list before pop: [1980]
input list after pop: []
input2 before: []
out1 [3964]
input2 after: [3964]
input list before pop: [3964]
input list after pop: []
input3: [7932]
input list before pop: [7932]
input list after pop: []
input4: [15868]
input list before pop: [15868]
input list after pop: []
input5: [31740]
input list before pop: [31740]
input list after pop: []
input1: [63484]
input list before pop: [63484]
input list after pop: []
input2 before: []
out1 [126972]
input2 after: [126972]
input list before pop: [126972]
input list after pop: []
input3: [253948]
input list before pop: [253948]
input list after pop: []
input4: [507900]
input list before pop: [507900]
input list after pop: []
input5: [1015804]
input list before pop: [1015804]
input list after pop: []
input1: [2031612]
input list before pop: [2031612]
input list after pop: []
input2 before: []
out1 [4063228]
input2 after: [4063228]
input list before pop: [4063228]
input list after pop: []
input3: [8126460]
input list before pop: [8126460]
input list after pop: []
input4: [16252924]
input list before pop: [16252924]
input list after pop: []
input5: [32505852]
input list before pop: [32505852]
input list after pop: []
input1: [65011708]
input list before pop: [65011708]
input list after pop: []
input2 before: []
out1 [130023420]
input2 after: [130023420]
input list before pop: [130023420]
input list after pop: []
input3: [260046844]
input list before pop: [260046844]
input list after pop: []
input4: [520093692]
input list before pop: [520093692]
input list after pop: []
input5: [1040187388]
input list before pop: [1040187388]
input list after pop: []
input1: [2080374780]
input list before pop: [2080374780]
input list after pop: []
input2 before: []
out1 [4160749564]
input2 after: [4160749564]
input list before pop: [4160749564]
input list after pop: Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 188, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 181, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 144, in onerun
    (counter2, input2, out2, olista2) = runprog(counter2, input2, olista2)
  File "/Users/luxia/Documents/aoc7b.py", line 65, in runprog
    print("input list after pop:", inputs)
KeyboardInterrupt
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
input list before pop: [5, 0]
input list after pop: [0]
input list before pop: [0]
input list after pop: []
input2 before: [6]
out1 [1]
input2 after: [6, 1]
input list before pop: [6, 1]
input list after pop: [1]
input list before pop: [1]
input list after pop: []
input3: [7, 4]
input list before pop: [7, 4]
input list after pop: [4]
input list before pop: [4]
input list after pop: []
input4: [8, 11]
input list before pop: [8, 11]
input list after pop: [11]
input list before pop: [11]
input list after pop: []
input5: [9, 26]
input list before pop: [9, 26]
input list after pop: [26]
input list before pop: [26]
input list after pop: []
input1: [57]
--------------one run is run-------------------
input list before pop: [5, 0]
input list after pop: [0]
input list before pop: [0]
input list after pop: []
input2 before: [6]
out1 [1]
input2 after: [6, 1]
input list before pop: [6, 1]
input list after pop: [1]
input list before pop: [1]
input list after pop: []
input3: [7, 4]
input list before pop: [7, 4]
input list after pop: [4]
input list before pop: [4]
input list after pop: []
input4: [9, 11]
input list before pop: [9, 11]
input list after pop: [11]
input list before pop: [11]
input list after pop: []
input5: [8, 27]
input list before pop: [8, 27]
input list after pop: [27]
input list before pop: [27]
input list after pop: []
input1: [58]
input list before pop: [58]
input list after pop: []
input2 before: []
out1 [120]
input2 after: [120]
input list before pop: [120]
input list after pop: []
input3: [244]
input list before pop: [244]
input list after pop: []
input4: [492]
input list before pop: [492]
input list after pop: []
input5: [988]
input list before pop: [988]
input list after pop: []
input1: [1980]
input list before pop: [1980]
input list after pop: []
input2 before:Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 180, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 173, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 132, in onerun
    print("input2 before:", input2)
KeyboardInterrupt
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
input list before pop: [5, 0]
input list after pop: [0]
input list before pop: [0]
input list after pop: []
input2 before: [6]
out1 [1]
input2 after: [6, 1]
input list before pop: [6, 1]
input list after pop: [1]
input list before pop: [1]
input list after pop: []
input3: [7, 4]
input list before pop: [7, 4]
input list after pop: [4]
input list before pop: [4]
input list after pop: []
input4: [8, 11]
input list before pop: [8, 11]
input list after pop: [11]
input list before pop: [11]
input list after pop: []
input5: [9, 26]
input list before pop: [9, 26]
input list after pop: [26]
input list before pop: [26]
input list after pop: []
input1: [57]
--------------one run is run------------------- [57]
input list before pop: [5, 0]
input list after pop: [0]
input list before pop: [0]
input list after pop: []
input2 before: [6]
out1 [1]
input2 after: [6, 1]
input list before pop: [6, 1]
input list after pop: [1]
input list before pop: [1]
input list after pop: []
input3: [7, 4]
input list before pop: [7, 4]
input list after pop: [4]
input list before pop: [4]
input list after pop: []
input4: [9, 11]
input list before pop: [9, 11]
input list after pop: [11]
input list before pop: [11]
input list after pop: []
input5: [8, 27]
input list before pop: [8, 27]
input list after pop: [27]
input list before pop: [27]
input list after pop: []
input1: [58]
input list before pop: [58]
input list after pop: []
input2 before: []
out1 [120]
input2 after: [120]
input list before pop: [120]
input list after pop: []
input3: [244]
input list before pop: [244]
input list after pop: []
input4: [492]
input list before pop: [492]
input list after pop: []
input5: [988]
input list before pop: [988]
input list after pop: []
input1: [1980]
input list before pop: [1980]
input list after pop: []
input2 before: []
out1 [3964]Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 180, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 173, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 134, in onerun
    print("out1", out1)
KeyboardInterrupt
>>> 
======================= RESTART: /Users/luxia/Documents/aoc7b.py ======================
Advent of Code, day 7, part 1 and 2
input list before pop: [5, 0]
input list after pop: [0]
input list before pop: [0]
input list after pop: []
input2 before: [6]
out1 [1]
input2 after: [6, 1]
input list before pop: [6, 1]
input list after pop: [1]
input list before pop: [1]
input list after pop: []
input3: [7, 4]
input list before pop: [7, 4]
input list after pop: [4]
input list before pop: [4]
input list after pop: []
input4: [8, 11]
input list before pop: [8, 11]
input list after pop: [11]
input list before pop: [11]
input list after pop: []
input5: [9, 26]
input list before pop: [9, 26]
input list after pop: [26]
input list before pop: [26]
input list after pop: []
input1: [57]
--------------one run is run------------------- [57]
input list before pop: [5, 0]
input list after pop: [0]
input list before pop: [0]
input list after pop: []
input2 before: [6]
out1 [1]
input2 after: [6, 1]
input list before pop: [6, 1]
input list after pop: [1]
input list before pop: [1]
input list after pop: []
input3: [7, 4]
input list before pop: [7, 4]
input list after pop: [4]
input list before pop: [4]
input list after pop: []
input4: [9, 11]
input list before pop: [9, 11]
input list after pop: [11]
input list before pop: [11]
input list after pop: []
input5: [8, 27]
input list before pop: [8, 27]
input list after pop: [27]
input list before pop: [27]
input list after pop: []
input1: [58]
input list before pop: [58]
input list after pop: []
input2 before: []
out1 [120]
input2 after: [120]
input list before pop: [120]
input list after pop: []
input3: [244]
input list before pop: [244]
input list after pop: []
input4: [492]
input list before pop: [492]
input list after pop: []
input5: [988]
input list before pop: [988]
input list after pop: []
input1: [1980]
input list before pop: [1980]
input list after pop: []
input2 before: []
out1 [3964]
input2 after: [3964]
input list before pop: [3964]
input list after pop: []
input3: [7932]
input list before pop: [7932]
input list after pop: []
input4: [15868]
input list before pop: [15868]
input list after pop: []
input5: [31740]
input list before pop: [31740]
input list after pop: []
input1: [63484]
input list before pop: [63484]
input list after pop: []
input2 before: []
out1 [126972]
input2 after: [126972]
input list before pop: [126972]
input list after pop: []
input3: [253948]
input list before pop: [253948]
input list after pop: []
input4: [507900]
input list before pop: [507900]
input list after pop: []
input5: [1015804]
input list before pop: [1015804]
input list after pop: []
input1: [2031612]
input list before pop: [2031612]
input list after pop: []
input2 before: []
out1 [4063228]
input2 after: [4063228]
input list before pop: [4063228]
input list after pop: []
input3: [8126460]
input list before pop: [8126460]
input list after pop: []
input4: [16252924]
input list before pop: [16252924]
input list after pop: []
input5: [32505852]
input list before pop: [32505852]
input list after pop: []
input1: [65011708]
input list before pop: [65011708]
input list after pop: []
input2 before: []
out1 [130023420]
input2 after: [130023420]
input list before pop: [130023420]
input list after pop: []
input3: [260046844]
input list before pop: [260046844]
input list after pop: []
input4: [520093692]
input list before pop: [520093692]
input list after pop: []
input5: [1040187388]
input list before pop: [1040187388]
input list after pop: []
input1: [2080374780]
input list before pop: [2080374780]
input list after pop: []
input2 before: []
out1 [4160749564]
input2 after: [4160749564]
input list before pop: [4160749564]
input list after pop: []
input3: [8321499132]
input list before pop: [8321499132]
input list after pop: []
input4: [16642998268]
input list before pop: [16642998268]
input list after pop: []
input5: [33285996540]
input list before pop: [33285996540]
input list after pop: []
input1: [66571993084]
input list before pop: [66571993084]
input list after pop: []
input2 before: []
out1 [133143986172]
input2 after: [133143986172]
input list before pop: [133143986172]
input list after pop: []
input3: [266287972348]
input list before pop: [266287972348]
input list after pop: []
input4: [532575944700]
input list before pop: [532575944700]
input list after pop: []
input5: [1065151889404]
input list before pop: [1065151889404]
input list after pop: []
input1: [2130303778812]
input list before pop: [2130303778812]
input list after pop: []
input2 before: []
out1 [4260607557628]
input2 after: [4260607557628]
input list before pop: [4260607557628]
input list after pop: []
input3: [8521215115260]
input list before pop: [8521215115260]
input list after pop: []
input4: [17042430230524]
input list before pop: [17042430230524]
input list after pop: []
input5: [34084860461052]
input list before pop: [34084860461052]
input list after pop: []
input1: [68169720922108]
input list before pop: [68169720922108]
input list after pop: []
input2 before: []
out1 [136339441844220]
input2 after: [136339441844220]
input list before pop: [136339441844220]
input list after pop: []
input3: [272678883688444]
input list before pop: [272678883688444]
input list after pop: []
input4: [545357767376892]
input list before pop: [545357767376892]
input list after pop: []
input5: [1090715534753788]
input list before pop: [1090715534753788]
input list after pop: []
input1: [2181431069507580]
input list before pop: [2181431069507580]
input list after pop: []
input2 before: []
out1 [4362862139015164]
input2 after: [4362862139015164]
input list before pop: [4362862139015164]
input list after pop: []
input3: [8725724278030332]
input list before pop: [8725724278030332]
input list after pop: []
input4: [17451448556060668]
input list before pop: [17451448556060668]
input list after pop: []
input5: [34902897112121340]
input list before pop: [34902897112121340]
input list after pop: []
input1: [69805794224242684]
input list before pop: [69805794224242684]
input list after pop: []
input2 before: []
out1 [139611588448485372]
input2 after: [139611588448485372]
input list before pop: [139611588448485372]
input list after pop: []
input3: [279223176896970748]
input list before pop: [279223176896970748]
input list after pop: []
input4: [558446353793941500]
input list before pop: [558446353793941500]
input list after pop: []
input5: [1116892707587883004]
input list before pop: [1116892707587883004]
input list after pop: []
input1: [2233785415175766012]
input list before pop: [2233785415175766012]
input list after pop: []
input2 before: []
out1 [4467570830351532028]
input2 after: [4467570830351532028]
input list before pop: [4467570830351532028]
input list after pop: []
input3: [8935141660703064060]
input list before pop: [8935141660703064060]
input list after pop: []
input4: [17870283321406128124]
input list before pop: [17870283321406128124]
input list after pop: []
input5: [35740566642812256252]
input list before pop: [35740566642812256252]
input list after pop: []
input1: [71481133285624512508]
input list before pop: [71481133285624512508]
input list after pop: []
input2 before: []
out1 [142962266571249025020]
input2 after: [142962266571249025020]
input list before pop: [142962266571249025020]
input list after pop: []
input3: [285924533142498050044]
input list before pop: [285924533142498050044]
input list after pop: []
input4: [571849066284996100092]
input list before pop: [571849066284996100092]
input list after pop: []
input5: [1143698132569992200188]
input list before pop: [1143698132569992200188]
input list after pop: []
input1: [2287396265139984400380]
input list before pop: [2287396265139984400380]
input list after pop: []
input2 before: []
out1 [4574792530279968800764]
input2 after: [4574792530279968800764]
input list before pop: [4574792530279968800764]
input list after pop: []
input3: [9149585060559937601532]
input list before pop: [9149585060559937601532]
input list after pop: []
input4: [18299170121119875203068]
input list before pop: [18299170121119875203068]
input list after pop: []
input5: [36598340242239750406140]
input list before pop: [36598340242239750406140]
input list after pop: []
input1: [73196680484479500812284]
input list before pop: [73196680484479500812284]
input list after pop: []
input2 before: []
out1 [146393360968959001624572]
input2 after: [146393360968959001624572]
input list before pop: [146393360968959001624572]
input list after pop: []
input3: [292786721937918003249148]
input list before pop: [292786721937918003249148]
input list after pop: []
input4: [585573443875836006498300]
input list before pop: [585573443875836006498300]
input list after pop: []
input5: [1171146887751672012996604]
input list before pop: [1171146887751672012996604]
input list after pop: []
input1: [2342293775503344025993212]
input list before pop: [2342293775503344025993212]
input list after pop: []
input2 before: []
out1 [4684587551006688051986428]
input2 after: [4684587551006688051986428]
input list before pop: [4684587551006688051986428]
input list after pop: []
input3: [9369175102013376103972860]
input list before pop: [9369175102013376103972860]
input list after pop: []
input4: [18738350204026752207945724]
input list before pop: [18738350204026752207945724]
input list after pop: []
input5: [37476700408053504415891452]
input list before pop: [37476700408053504415891452]
input list after pop: []
input1: [74953400816107008831782908]
input list before pop: [74953400816107008831782908]
input list after pop: []
input2 before: []
out1 [149906801632214017663565820]
input2 after: [149906801632214017663565820]
input list before pop: [149906801632214017663565820]
input list after pop: []
input3: [299813603264428035327131644]
input list before pop: [299813603264428035327131644]
input list after pop: []
input4: [599627206528856070654263292]
input list before pop: [599627206528856070654263292]
input list after pop: []
input5: [1199254413057712141308526588]
input list before pop: [1199254413057712141308526588]
input list after pop: []
input1: [2398508826115424282617053180]
input list before pop: [2398508826115424282617053180]
input list after pop: []
input2 before: []
out1 [4797017652230848565234106364]
input2 after: [4797017652230848565234106364]
input list before pop: [4797017652230848565234106364]
input list after pop: []
input3: [9594035304461697130468212732]
input list before pop: [9594035304461697130468212732]
input list after pop: []
input4: [19188070608923394260936425468]
input list before pop: [19188070608923394260936425468]
input list after pop: []
input5: [38376141217846788521872850940]
input list before pop: [38376141217846788521872850940]
input list after pop: []
input1: [76752282435693577043745701884]
input list before pop: [76752282435693577043745701884]
input list after pop: []
input2 before: []
out1 [153504564871387154087491403772]
input2 after: [153504564871387154087491403772]
input list before pop: [153504564871387154087491403772]
input list after pop: []
input3: [307009129742774308174982807548]
input list before pop: [307009129742774308174982807548]
input list after pop: []
input4: [614018259485548616349965615100]
input list before pop: [614018259485548616349965615100]
input list after pop: []
input5: [1228036518971097232699931230204]
input list before pop: [1228036518971097232699931230204]
input list after pop: []
input1: [2456073037942194465399862460412]
input list before pop: [2456073037942194465399862460412]
input list after pop: []
input2 before: []
out1 [4912146075884388930799724920828]
input2 after: [4912146075884388930799724920828]
input list before pop: [4912146075884388930799724920828]
input list after pop: []
input3: [9824292151768777861599449841660]
input list before pop: [9824292151768777861599449841660]
input list after pop: []
input4: [19648584303537555723198899683324]
input list before pop: [19648584303537555723198899683324]
input list after pop: []
input5: [39297168607075111446397799366652]
input list before pop: [39297168607075111446397799366652]
input list after pop: []
input1: [78594337214150222892795598733308]
input list before pop: [78594337214150222892795598733308]
input list after pop: []
input2 before: []
out1 [157188674428300445785591197466620]
input2 after: [157188674428300445785591197466620]
input list before pop: [157188674428300445785591197466620]
input list after pop: []
input3: [314377348856600891571182394933244]
input list before pop: [314377348856600891571182394933244]
input list after pop: []
input4: [628754697713201783142364789866492]
input list before pop: [628754697713201783142364789866492]
input list after pop: []
input5: [1257509395426403566284729579732988]
input list before pop: [1257509395426403566284729579732988]
input list after pop: []
input1: [2515018790852807132569459159465980]
input list before pop: [2515018790852807132569459159465980]
input list after pop: []
input2 before: []
out1 [5030037581705614265138918318931964]
input2 after: [5030037581705614265138918318931964]
input list before pop: [5030037581705614265138918318931964]
input list after pop: []
input3: [10060075163411228530277836637863932]
input list before pop: [10060075163411228530277836637863932]
input list after pop: []
input4: [20120150326822457060555673275727868]
input list before pop: [20120150326822457060555673275727868]
input list after pop: []
input5: [40240300653644914121111346551455740]
input list before pop: [40240300653644914121111346551455740]
input list after pop: []
input1: [80480601307289828242222693102911484]
input list before pop: [80480601307289828242222693102911484]
input list after pop: []
input2 before: []
out1 [160961202614579656484445386205822972]
input2 after: [160961202614579656484445386205822972]
input list before pop: [160961202614579656484445386205822972]
input list after pop: []
input3: [321922405229159312968890772411645948]
input list before pop: [321922405229159312968890772411645948]
input list after pop: []
input4: [643844810458318625937781544823291900]
input list before pop: [643844810458318625937781544823291900]
input list after pop: []
input5: [1287689620916637251875563089646583804]
input list before pop: [1287689620916637251875563089646583804]
input list after pop: []
input1: [2575379241833274503751126179293167612]
input list before pop: [2575379241833274503751126179293167612]
input list after pop: []
input2 before: []
out1 [5150758483666549007502252358586335228]
input2 after: [5150758483666549007502252358586335228]
input list before pop: [5150758483666549007502252358586335228]
input list after pop: []
input3: [10301516967333098015004504717172670460]
input list before pop: [10301516967333098015004504717172670460]
input list after pop: []
input4: [20603033934666196030009009434345340924]
input list before pop: [20603033934666196030009009434345340924]
input list after pop: []
input5: [41206067869332392060018018868690681852]
input list before pop: [41206067869332392060018018868690681852]
input list after pop: []
input1: [82412135738664784120036037737381363708]
input list before pop: [82412135738664784120036037737381363708]
input list after pop: []
input2 before: []
out1 [164824271477329568240072075474762727420]
input2 after: [164824271477329568240072075474762727420]
input list before pop: [164824271477329568240072075474762727420]
input list after pop: []
input3: [329648542954659136480144150949525454844]
input list before pop: [329648542954659136480144150949525454844]
input list after pop: []
input4: [659297085909318272960288301899050909692]
input list before pop: [659297085909318272960288301899050909692]
input list after pop: []
input5: [1318594171818636545920576603798101819388]
input list before pop: [1318594171818636545920576603798101819388]
input list after pop: []
input1: [2637188343637273091841153207596203638780]
input list before pop: [2637188343637273091841153207596203638780]
input list after pop: []
input2 before: []
out1 [5274376687274546183682306415192407277564]
input2 after: [5274376687274546183682306415192407277564]
input list before pop: [5274376687274546183682306415192407277564]
input list after pop: []
input3: [10548753374549092367364612830384814555132]
input list before pop: [10548753374549092367364612830384814555132]
input list after pop: []
input4: [21097506749098184734729225660769629110268]
input list before pop: [21097506749098184734729225660769629110268]
input list after pop: []
input5: [42195013498196369469458451321539258220540]
input list before pop: [42195013498196369469458451321539258220540]
input list after pop: []
input1: [84390026996392738938916902643078516441084]
input list before pop: [84390026996392738938916902643078516441084]
input list after pop: []
input2 before: []
out1 [168780053992785477877833805286157032882172]
input2 after: [168780053992785477877833805286157032882172]
input list before pop: [168780053992785477877833805286157032882172]
input list after pop: []
input3: [337560107985570955755667610572314065764348]
input list before pop: [337560107985570955755667610572314065764348]
input list after pop: []
input4: [675120215971141911511335221144628131528700]
input list before pop: [675120215971141911511335221144628131528700]
input list after pop: []
input5: [1350240431942283823022670442289256263057404]
input list before pop: [1350240431942283823022670442289256263057404]
input list after pop: []
input1: [2700480863884567646045340884578512526114812]
input list before pop: [2700480863884567646045340884578512526114812]
input list after pop: []
input2 before: []
out1 [5400961727769135292090681769157025052229628]
input2 after: [5400961727769135292090681769157025052229628]
input list before pop: [5400961727769135292090681769157025052229628]
input list after pop: []
input3: [10801923455538270584181363538314050104459260]
input list before pop: [10801923455538270584181363538314050104459260]
input list after pop: []
input4: [21603846911076541168362727076628100208918524]
input list before pop: [21603846911076541168362727076628100208918524]
input list after pop: []
input5: [43207693822153082336725454153256200417837052]
input list before pop: [43207693822153082336725454153256200417837052]
input list after pop: []
input1: [86415387644306164673450908306512400835674108]
input list before pop: [86415387644306164673450908306512400835674108]
input list after pop: []
input2 before: []
out1 [172830775288612329346901816613024801671348220]
input2 after: [172830775288612329346901816613024801671348220]
input list before pop: [172830775288612329346901816613024801671348220]
input list after pop: []
input3: [345661550577224658693803633226049603342696444]
input list before pop: [345661550577224658693803633226049603342696444]
input list after pop: []
input4: [691323101154449317387607266452099206685392892]
input list before pop: [691323101154449317387607266452099206685392892]
input list after pop: []
input5: [1382646202308898634775214532904198413370785788]
input list before pop: [1382646202308898634775214532904198413370785788]
input list after pop: []
input1: [2765292404617797269550429065808396826741571580]
input list before pop: [2765292404617797269550429065808396826741571580]
input list after pop: []
input2 before: []
out1 [5530584809235594539100858131616793653483143164]
input2 after: [5530584809235594539100858131616793653483143164]
input list before pop: [5530584809235594539100858131616793653483143164]
input list after pop: []
input3: [11061169618471189078201716263233587306966286332]
input list before pop: [11061169618471189078201716263233587306966286332]
input list after pop: []
input4: [22122339236942378156403432526467174613932572668]
input list before pop: [22122339236942378156403432526467174613932572668]
input list after pop: []
input5: [44244678473884756312806865052934349227865145340]
input list before pop: [44244678473884756312806865052934349227865145340]
input list after pop: []
input1: [88489356947769512625613730105868698455730290684]
input list before pop: [88489356947769512625613730105868698455730290684]
input list after pop: []
input2 before: []
out1 [176978713895539025251227460211737396911460581372]
input2 after: [176978713895539025251227460211737396911460581372]
input list before pop: [176978713895539025251227460211737396911460581372]
input list after pop: []
input3: [353957427791078050502454920423474793822921162748]
input list before pop: [353957427791078050502454920423474793822921162748]
input list after pop: []
input4: [707914855582156101004909840846949587645842325500]
input list before pop: [707914855582156101004909840846949587645842325500]
input list after pop: []
input5: [1415829711164312202009819681693899175291684651004]
input list before pop: [1415829711164312202009819681693899175291684651004]
input list after pop: []
input1: [2831659422328624404019639363387798350583369302012]
input list before pop: [2831659422328624404019639363387798350583369302012]
input list after pop: []
input2 before: []
out1 [5663318844657248808039278726775596701166738604028]
input2 after: [5663318844657248808039278726775596701166738604028]
input list before pop: [5663318844657248808039278726775596701166738604028]
input list after pop: []
input3: [11326637689314497616078557453551193402333477208060]
input list before pop: [11326637689314497616078557453551193402333477208060]
input list after pop: []
input4: [22653275378628995232157114907102386804666954416124]
input list before pop: [22653275378628995232157114907102386804666954416124]
input list after pop: []
input5: [45306550757257990464314229814204773609333908832252]
input list before pop: [45306550757257990464314229814204773609333908832252]
input list after pop: []
input1: [90613101514515980928628459628409547218667817664508]
input list before pop: [90613101514515980928628459628409547218667817664508]
input list after pop: []
input2 before: []
out1 [181226203029031961857256919256819094437335635329020]
input2 after: [181226203029031961857256919256819094437335635329020]
input list before pop: [181226203029031961857256919256819094437335635329020]
input list after pop: []
input3: [362452406058063923714513838513638188874671270658044]
input list before pop: [362452406058063923714513838513638188874671270658044]
input list after pop: []
input4: [724904812116127847429027677027276377749342541316092]
input list before pop: [724904812116127847429027677027276377749342541316092]
input list after pop: []
input5: [1449809624232255694858055354054552755498685082632188]
input list before pop: [1449809624232255694858055354054552755498685082632188]
input list after pop: []
input1: [2899619248464511389716110708109105510997370165264380]
input list before pop: [2899619248464511389716110708109105510997370165264380]
input list after pop: []
input2 before: []
out1 [5799238496929022779432221416218211021994740330528764]
input2 after: [5799238496929022779432221416218211021994740330528764]
input list before pop: [5799238496929022779432221416218211021994740330528764]
input list after pop: []
input3: [11598476993858045558864442832436422043989480661057532]
input list before pop: [11598476993858045558864442832436422043989480661057532]
input list after pop: []
input4: [23196953987716091117728885664872844087978961322115068]
input list before pop: [23196953987716091117728885664872844087978961322115068]
input list after pop: []
input5: [46393907975432182235457771329745688175957922644230140]
input list before pop: [46393907975432182235457771329745688175957922644230140]
input list after pop: []
input1: [92787815950864364470915542659491376351915845288460284]
input list before pop: [92787815950864364470915542659491376351915845288460284]
input list after pop: []
input2 before: []
out1 [185575631901728728941831085318982752703831690576920572]
input2 after: [185575631901728728941831085318982752703831690576920572]
input list before pop: [185575631901728728941831085318982752703831690576920572]
input list after pop: []
input3: [371151263803457457883662170637965505407663381153841148]
input list before pop: [371151263803457457883662170637965505407663381153841148]
input list after pop: []
input4: [742302527606914915767324341275931010815326762307682300]
input list before pop: [742302527606914915767324341275931010815326762307682300]
input list after pop: []
input5: [1484605055213829831534648682551862021630653524615364604]
input list before pop: [1484605055213829831534648682551862021630653524615364604]
input list after pop: []
input1: [2969210110427659663069297365103724043261307049230729212]
input list before pop: [2969210110427659663069297365103724043261307049230729212]
input list after pop: []
input2 before: []
out1 [5938420220855319326138594730207448086522614098461458428]
input2 after: [5938420220855319326138594730207448086522614098461458428]
input list before pop: [5938420220855319326138594730207448086522614098461458428]
input list after pop: []
input3: [11876840441710638652277189460414896173045228196922916860]
input list before pop: [11876840441710638652277189460414896173045228196922916860]
input list after pop: []
input4: [23753680883421277304554378920829792346090456393845833724]
input list before pop: [23753680883421277304554378920829792346090456393845833724]
input list after pop: []
input5: [47507361766842554609108757841659584692180912787691667452]
input list before pop: [47507361766842554609108757841659584692180912787691667452]
input list after pop: []
input1: [95014723533685109218217515683319169384361825575383334908]
input list before pop: [95014723533685109218217515683319169384361825575383334908]
input list after pop: []
input2 before: []
out1 [190029447067370218436435031366638338768723651150766669820]
input2 after: [190029447067370218436435031366638338768723651150766669820]
input list before pop: [190029447067370218436435031366638338768723651150766669820]
input list after pop: []
input3: [380058894134740436872870062733276677537447302301533339644]
input list before pop: [380058894134740436872870062733276677537447302301533339644]
input list after pop: []
input4: [760117788269480873745740125466553355074894604603066679292]
input list before pop: [760117788269480873745740125466553355074894604603066679292]
input list after pop: []
input5: [1520235576538961747491480250933106710149789209206133358588]
input list before pop: [1520235576538961747491480250933106710149789209206133358588]
input list after pop: []
input1: [3040471153077923494982960501866213420299578418412266717180]
input list before pop: [3040471153077923494982960501866213420299578418412266717180]
input list after pop: []
input2 before: []
out1 [6080942306155846989965921003732426840599156836824533434364]
input2 after: [6080942306155846989965921003732426840599156836824533434364]
input list before pop: [6080942306155846989965921003732426840599156836824533434364]
input list after pop: []
input3: [12161884612311693979931842007464853681198313673649066868732]
input list before pop: [12161884612311693979931842007464853681198313673649066868732]
input list after pop: []
input4: [24323769224623387959863684014929707362396627347298133737468]
input list before pop: [24323769224623387959863684014929707362396627347298133737468]
input list after pop: []
input5: [48647538449246775919727368029859414724793254694596267474940]
input list before pop: [48647538449246775919727368029859414724793254694596267474940]
input list after pop: []
input1: [97295076898493551839454736059718829449586509389192534949884]
input list before pop: [97295076898493551839454736059718829449586509389192534949884]
input list after pop: []
input2 before: []
out1 [194590153796987103678909472119437658899173018778385069899772]
input2 after: [194590153796987103678909472119437658899173018778385069899772]
input list before pop: [194590153796987103678909472119437658899173018778385069899772]
input list after pop: []
input3: Traceback (most recent call last):
  File "/Users/luxia/Documents/aoc7b.py", line 180, in <module>
    secondpart()
  File "/Users/luxia/Documents/aoc7b.py", line 173, in secondpart
    output = onerun(inputval, commands, startlist)
  File "/Users/luxia/Documents/aoc7b.py", line 138, in onerun
    print("input3:", input3)
KeyboardInterrupt
>>> 
